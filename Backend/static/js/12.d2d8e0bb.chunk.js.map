{"version":3,"sources":["src/components/FormField/FormField.js","src/components/UserEmailForms/UserEmailForms.js"],"names":["FormField","label","placeholder","isPassword","autoCapitalize","keyType","undefined","onChangeTextHandler","inputStyle","labelStyle","containerStyle","style","secureTextEntry","keyboardType","onChangeText","UserEmailForms","props","toLogin","usernameHandler","emailHandler"],"mappings":"gwBAoBe,SAASA,EAAU,GAU9B,IATHC,EAAK,EAALA,MAAM,EAAD,EACLC,mBAAW,MAAG,GAAE,MAChBC,kBAAU,OAAQ,MAClBC,sBAAc,MAAG,YAAW,MAC5BC,eAAO,WAAGC,EAAS,MACnBC,2BAAmB,WAAGD,EAAS,MAC/BE,kBAAU,MAAG,GAAE,MACfC,kBAAU,MAAG,GAAE,MACfC,sBAAc,MAAG,GAAE,EAEnB,OACC,eAAC,UAAI,CAACC,MAAK,KAAOD,GAAiB,UAClC,cAAC,UAAI,CAACC,MAAK,KAAOF,GAAa,SAAER,IACjC,cAAC,UAAS,CACTU,MAAK,KAAOH,GACZI,gBAAiBT,EACjBC,eAAgBA,EAChBS,aAAcR,EACdS,aAAcP,EACdL,YAAaA,S,iCCxCjB,oEAkBe,SAASa,EAAeC,GACtC,OAAIA,EAAMC,QAER,cAAC,UAAS,CACThB,MAAO,YACPC,YAAa,kBACbE,eAAe,OACfG,oBAAqBS,EAAME,gBAC3BR,eAAgBM,EAAMN,eACtBD,WAAYO,EAAMP,WAClBD,WAAYQ,EAAMR,aAKnB,qCACC,cAAC,UAAS,CACTP,MAAO,YACPC,YAAa,yBACbE,eAAe,OACfG,oBAAqBS,EAAME,gBAC3BR,eAAgBM,EAAMN,eACtBD,WAAYO,EAAMP,WAClBD,WAAYQ,EAAMR,aAEnB,cAAC,UAAS,CACTP,MAAO,SACPC,YAAa,sBACbE,eAAe,OACfC,QAAQ,gBACRE,oBAAqBS,EAAMG,aAC3BT,eAAgBM,EAAMN,eACtBD,WAAYO,EAAMP,WAClBD,WAAYQ,EAAMR","file":"static/js/12.d2d8e0bb.chunk.js","sourcesContent":["import { Text, TextInput, View } from \"react-native\";\r\n\r\n/**\r\n * Renders a form field\r\n *\r\n * @param { {\r\n *      label: string,\r\n *      placeholder: string,\r\n *      isPassword: boolean,\r\n * \t\tautoCapitalize: string,\r\n * \t\tkeyType: string\r\n *      onChangeTextHandler: (text: string) => void,\r\n *      inputStyle: *,\r\n *      labelStyle: *,\r\n *      containerStyle: *,\r\n *  }\r\n * } props\r\n *\r\n * @returns A text label with text field\r\n */\r\nexport default function FormField({\r\n\tlabel,\r\n\tplaceholder = \"\",\r\n\tisPassword = false,\r\n\tautoCapitalize = \"sentences\",\r\n\tkeyType = undefined,\r\n\tonChangeTextHandler = undefined,\r\n\tinputStyle = {},\r\n\tlabelStyle = {},\r\n\tcontainerStyle = {},\r\n}) {\r\n\treturn (\r\n\t\t<View style={{ ...containerStyle }}>\r\n\t\t\t<Text style={{ ...labelStyle }}>{label}</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={{ ...inputStyle }}\r\n\t\t\t\tsecureTextEntry={isPassword}\r\n\t\t\t\tautoCapitalize={autoCapitalize}\r\n\t\t\t\tkeyboardType={keyType}\r\n\t\t\t\tonChangeText={onChangeTextHandler}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import FormField from \"../FormField/FormField\";\r\n\r\n/**\r\n * Renders a username and email field or just username for\r\n * sign up or login respectively.\r\n *\r\n * @param {{\r\n *      toLogin :boolean,\r\n *      usernameHandler: (newUsername: string) => void,\r\n *      emailHandler: (newEmail: string) => void,\r\n *      inputStyle: *,\r\n *      labelStyle: *,\r\n *      containerStyle: *,\r\n *  }} props\r\n *\r\n * @returns Username and Email fields for sign up or\r\n * only a username field for login\r\n */\r\nexport default function UserEmailForms(props) {\r\n\tif (props.toLogin) {\r\n\t\treturn (\r\n\t\t\t<FormField\r\n\t\t\t\tlabel={\"Username:\"}\r\n\t\t\t\tplaceholder={\"Enter username:\"}\r\n\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\tonChangeTextHandler={props.usernameHandler}\r\n\t\t\t\tcontainerStyle={props.containerStyle}\r\n\t\t\t\tlabelStyle={props.labelStyle}\r\n\t\t\t\tinputStyle={props.inputStyle}\r\n\t\t\t/>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<FormField\r\n\t\t\t\t\tlabel={\"Username:\"}\r\n\t\t\t\t\tplaceholder={\"Please enter username:\"}\r\n\t\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\t\tonChangeTextHandler={props.usernameHandler}\r\n\t\t\t\t\tcontainerStyle={props.containerStyle}\r\n\t\t\t\t\tlabelStyle={props.labelStyle}\r\n\t\t\t\t\tinputStyle={props.inputStyle}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormField\r\n\t\t\t\t\tlabel={\"Email:\"}\r\n\t\t\t\t\tplaceholder={\"Please enter email:\"}\r\n\t\t\t\t\tautoCapitalize=\"none\"\r\n\t\t\t\t\tkeyType=\"email-address\"\r\n\t\t\t\t\tonChangeTextHandler={props.emailHandler}\r\n\t\t\t\t\tcontainerStyle={props.containerStyle}\r\n\t\t\t\t\tlabelStyle={props.labelStyle}\r\n\t\t\t\t\tinputStyle={props.inputStyle}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n"],"sourceRoot":""}