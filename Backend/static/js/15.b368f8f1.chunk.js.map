{"version":3,"sources":["node_modules/react-native-web/dist/exports/useWindowDimensions/index.js","src/components/RecipeList/RecipeListStyle.js","src/components/RecipeList/RecipeList.js"],"names":["useWindowDimensions","_useState","useState","Dimensions","get","dims","setDims","useEffect","handleChange","_ref","window","addEventListener","removeEventListener","recipeListStyle","StyleSheet","create","foodPicContainer","alignItems","foodPic","height","width","resizeMode","foodName","marginTop","marginBottom","fontWeight","padding","borderWidth","textAlign","RecipeList","props","recipes","setRecipes","isMoreRecipes","setIsMoreRecipes","loadedAllRecipes","setLoadedAllRecipes","distanceFromEnd","undefined","recipeLink","excludeQuery","exlusions","forEach","excluded","i","response","axios","method","url","BACKEND","responseType","content","data","setData","results","addRecipesLink","error","length","uri","prevState","newState","push","name","image","ingredients","source","listStyle","flex","style","renderItem","item","require","onPress","navigation","navigate","onEndReached","onEndReachedThreshold","extraData"],"mappings":"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","file":"static/js/15.b368f8f1.chunk.js","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nimport Dimensions from '../Dimensions';\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(() => Dimensions.get('window')),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  useEffect(() => {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    }\n\n    Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n\n    setDims(Dimensions.get('window'));\n    return () => {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}","import { StyleSheet } from \"react-native\";\r\n\r\nexport const recipeListStyle = StyleSheet.create(\r\n    {\r\n        foodPicContainer:\r\n        {\r\n            alignItems: \"center\"\r\n        },\r\n        foodPic:\r\n        {\r\n            height: 200,\r\n            width: \"100%\",\r\n            resizeMode: \"contain\"\r\n        },\r\n\r\n        foodName:\r\n        {\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            fontWeight: \"bold\",\r\n            padding: 10,\r\n            borderWidth: 1,\r\n            textAlign: \"center\"\r\n        }\r\n    });\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FlatList, Image, Pressable, Text, useWindowDimensions, View } from \"react-native\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport { recipeListStyle } from \"./RecipeListStyle\";\r\n\r\n/**\r\n * Renders a list of Recipes\r\n * @typedef {{\r\n *  \turi: string,\r\n * \t\tname: string,\r\n *  \timage: any,\r\n *  \tingredients: Array<string>,\r\n * \t\tsource: string\r\n * \t}} recipe\r\n *\r\n * @param {{\r\n * \trecipes: Array<recipe>,\r\n *  recipeLink: string,\r\n *  setData: (recipeResults: Array<recipe>, addRecipesLink: string) => void,\r\n * \texlusions: string[],\r\n * \tnavigation: any\r\n * }} props\r\n * @returns List of Recipes\r\n */\r\nexport default function RecipeList(props) {\r\n\tconst [recipes, setRecipes] = useState(props.recipes); // List of recipes\r\n\tconst [isMoreRecipes, setIsMoreRecipes] = useState(true);\r\n\tconst [loadedAllRecipes, setLoadedAllRecipes] = useState(false);\r\n\r\n\t/**\r\n\t * Forces it to update the list because some reason\r\n\t * it doens't register it on first render\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tsetRecipes(props.recipes);\r\n\t}, [props.recipes]);\r\n\r\n\t/**\r\n\t * Renders a recipe with in image and name\r\n\t *\r\n\t * @param {{item: recipe}} param\r\n\t * @returns A recipe with image and name\r\n\t */\r\n\tfunction renderRecipe({ item }) {\r\n\t\tlet image = \"\";\r\n\t\tif (item.image != \"\") {\r\n\t\t\timage = { uri: item.image, height: \"100%\", width: \"100%\" };\r\n\t\t} else {\r\n\t\t\timage = require(\"../../../assets/favicon.png\");\r\n\t\t}\r\n\r\n\t\tif (item.source === \"\") {\r\n\t\t\treturn (\r\n\t\t\t\t<View>\r\n\t\t\t\t\t<View style={recipeListStyle.foodPicContainer}>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tstyle={recipeListStyle.foodPic}\r\n\t\t\t\t\t\t\tsource={image}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<Text style={recipeListStyle.foodName}>{item.name}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Pressable onPress={() => props.navigation.navigate(\"RecipeInfo\", item)}>\r\n\t\t\t\t<View>\r\n\t\t\t\t\t\t<View style={recipeListStyle.foodPicContainer}>\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tstyle={recipeListStyle.foodPic}\r\n\t\t\t\t\t\t\t\tsource={image}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<Text style={recipeListStyle.foodName}>{item.name}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t\t</Pressable>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds more recipes to the current list\r\n\t * when the user scrolls near the bottom\r\n\t *\r\n\t * @param {number} distanceFromEnd\r\n\t */\r\n\tasync function loadMoreRecipes({ distanceFromEnd }) {\r\n\t\tif (\r\n\t\t\tprops.recipeLink != undefined &&\r\n\t\t\tprops.recipeLink != \"\" &&\r\n\t\t\tisMoreRecipes\r\n\t\t) {\r\n\t\t\tlet excludeQuery = \"\";\r\n\r\n\t\t\tprops.exlusions.forEach((excluded, i) => {\r\n\t\t\t\texcludeQuery += `excluded=${excluded}`;\r\n\r\n\t\t\t\tif (i < props.exlusions) {\r\n\t\t\t\t\texcludeQuery += \"&\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlet response = await axios({\r\n\t\t\t\t\tmethod: \"get\",\r\n\t\t\t\t\turl: `${BACKEND}/api/addRecipes/?nextLink=${props.recipeLink}&${excludeQuery}`,\r\n\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet content = await response.data;\r\n\t\t\t\tprops.setData(content.results, content.addRecipesLink);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetIsMoreRecipes(false);\r\n\t\t\t}\r\n\t\t} else if (recipes[recipes.length - 1].uri != \"\" && !loadedAllRecipes) {\r\n\t\t\tsetRecipes((prevState) => {\r\n\t\t\t\tlet newState = [...prevState];\r\n\t\t\t\tnewState.push({\r\n\t\t\t\t\turi: \"\",\r\n\t\t\t\t\tname: \"No more Recipes\",\r\n\t\t\t\t\timage: \"\",\r\n\t\t\t\t\tingredients: [],\r\n\t\t\t\t\tsource: \"\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn newState;\r\n\t\t\t});\r\n\t\t\tsetLoadedAllRecipes((prevState) => !prevState);\r\n\t\t}\r\n\t}\r\n\r\n\tlet listStyle = {\r\n\t\tflex: 1,\r\n\t\twidth: useWindowDimensions().width > 700 ? \"30%\" : \"100%\",\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={listStyle}>\r\n\t\t\t<FlatList\r\n\t\t\t\tdata={recipes}\r\n\t\t\t\trenderItem={renderRecipe}\r\n\t\t\t\tonEndReached={loadMoreRecipes}\r\n\t\t\t\tonEndReachedThreshold={2}\r\n\t\t\t\textraData={recipes}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"sourceRoot":""}