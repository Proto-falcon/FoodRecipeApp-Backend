{"version":3,"sources":["assets/favicon.png","assets/searchIcon.png","src/context/account.js","src/context/CsrfToken.js","src/context/Context.js","src/ipaddressesports/BackEndIP.js","src/components/RecipeList/RecipeListStyle.js","src/components/RecipeList/RecipeList.js","src/pages/Search/SearchStyle.js","src/AppStyles.js","src/components/Buttons/LogOutButton.js","src/components/NavBar/NavBar.js","src/components/Buttons/SearchButton.js","src/pages/Search/Search.js","src/components/RecipeOption/RecipeOptionStyle.js","src/components/RecipeOption/RecipeOption.js","src/pages/SearchOptions/SearchOptionsStyle.js","src/RecipeMetaOptions.js","src/components/TextError/TextError.js","src/pages/SearchOptions/SearchOptions.js","src/components/FormField/FormField.js","src/components/UserEmailForms/UserEmailForms.js","src/pages/Form/FormStyles.js","src/pages/Form/Form.js","src/components/IndividualForm/IndividualForm.js","src/pages/Profile/ProfileStyles.js","src/pages/Profile/Profile.js","src/pages/RecipeInfo/RecipeInfo.js","index.js","src/App.js"],"names":["module","exports","AccountCtx","createContext","loggedIn","username","email","setLoginStatus","setUsername","newUsername","setEmail","newEmail","checkCred","csrfCtx","domain","AccountProvider","props","useState","isLoggedIn","setIsLoggedIn","response","axios","get","content","data","setCsrfToken","token","user","LogInHandler","setUsernameHandler","setEmailHandler","prevState","match","length","Provider","value","children","CsrfCtx","newToken","CsrfContextProvider","setToken","RecipeResultsCtx","moreRecipesLink","setAddRecipesLink","link","exclusions","updateExclusions","newExclusions","results","uri","name","image","require","ingredients","source","getRecipes","recipeList","addRecipes","isLoading","setIsLoading","boolean","ContextProvider","recipes","setRecipes","excluded","setExcluded","addRecipesLink","setAddLink","newExcludeState","id","newState","i","push","recipeListStyle","StyleSheet","create","list","flex","width","maxWidth","foodPicContainer","alignItems","foodPic","height","resizeMode","foodName","marginTop","marginBottom","fontWeight","padding","borderWidth","textAlign","RecipeList","isMoreRecipes","setIsMoreRecipes","loadedAllRecipes","setLoadedAllRecipes","distanceFromEnd","undefined","recipeLink","excludeQuery","exlusions","forEach","method","url","responseType","setData","error","useEffect","listStyle","useWindowDimensions","View","style","FlatList","renderItem","item","Image","Text","onEndReached","onEndReachedThreshold","extraData","SearchStyle","container","imgContainer","flexBasis","styles","searchIcon","marginRight","navLink","navText","color","fontSize","marginLeft","usernameText","pageContainer","errorMsg","backgroundColor","borderRadius","LogOutButton","tokenCtx","useContext","accCtx","navigation","useNavigation","loggedOut","navigate","Pressable","onPress","NavBar","flexDirection","flexWrap","SearchButton","Link","to","screen","Search","ctx","isMounted","setOptions","headerLeft","headerRight","params","toLogin","optionStyles","listContainer","RecipeOption","selectedData","setSelectedData","optionIncluded","exists","option","selectOptionHandler","RMoption","newList","concat","addOptions","type","updateData","e","SearchOptionsStyle","textButtonContainer","maxHeight","input","paddingBottom","borderColor","optionsContainer","justifyContent","minWidth","optionTypes","text","optionTypeHeader","selectedMetaText","selectedOptionsContainer","minHeight","diet","health","mealType","dishType","cuisineType","TextError","hasError","message","SearchOptions","accountCtx","authCtx","options","num","optionType","setOptionType","inputIg","setinputIg","inputExclude","setInputExclude","exclude","setExclude","setHasError","setErrorMsg","mount","isOptionsEmpty","emptyCount","fetchFood","query","index","trim","addExcludeHandler","preveState","TextInput","onChangeText","igs","placeholder","onSubmitEditing","paddingTop","optionObjArray","SectionList","sections","renderSectionHeader","section","RecipeMetaOptions","optionsArray","FormField","label","isPassword","onChangeTextHandler","inputStyle","labelStyle","containerStyle","secureTextEntry","UserEmailForms","usernameHandler","emailHandler","FormStyle","formInput","formLabel","submitButton","margin","emailRegExp","Form","route","password","setPasword","formValid","setFormValid","fieldWidth","setFieldWidth","onSubmitHandler","path","headers","withCredentials","signUpSuccess","loginSuccess","Platform","OS","newPassword","IndiviudalForm","labelValueHidden","labelValueStyle","labelValue","inputPromptStyle","submitStyle","submitHandler","submitText","profileStyles","userField","Profile","setNewUserName","setNewEmail","setNewPassword","put","console","log","status","successful","lo","customFormInput","usernameTxt","emailTxt","passwordTxt","RecipeInfo","registerRootComponent","Stack","createNativeStackNavigator","NavigationContainer","linking","config","screens","Home","SignIn","Login","Navigator","screenOptions","headerStyle","headerTitle","Screen","component","Group","StatusBar"],"mappings":"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UAAWC,OAAO,CACnD+C,UAAW,CACV7C,KAAM,EACNI,WAAY,SACZK,UAAW,GACX8C,WAAY,OACZL,YAAa,QAGdqD,oBAAqB,CACpB/B,cAAe,MACfzB,UAAW,GACXyD,UAAW,IAGZvD,WAAY,CACX3C,OAAQ,GACRG,UAAW,EACXR,MAAO,OACPM,WAAY,WAGbuC,aAAc,CACbC,UAAW,GACXzC,OAAQ,IAGTmG,MAAO,CACNnG,OAAQ,GACRiD,WAAY,GACZ3C,QAAS,GACT8F,cAAe,GACfC,YAAa,QACb9F,YAAa,EACb+C,aAAc,IAGfgD,iBAAkB,CACjBpC,cAAe,MACfC,SAAU,OACVoC,eAAgB,eAChBC,SAAU,IACV7G,MAAO,OAGR8G,YAAa,CACZ9G,MAAO,IACP0D,gBAAiB,UACjBvD,WAAY,UAGb4G,KAAM,CACLlG,UAAW,SACXF,QAAS,GAGVqG,iBAAkB,CACjBtD,gBAAiB,UACjBhD,WAAY,QAGbuG,iBAAkB,CACjB5D,SAAU,IAGX6D,yBAA0B,CACzB7G,OAnEa,MAoEb8G,UApEa,MAqEbZ,UArEa,MAsEb3F,YAAa,EACbH,aAAc,KCkCD,GACd2G,KA3Ga,CACb,WACA,aACA,eACA,WACA,UACA,cAsGAC,OApGe,CACf,mBACA,eACA,cACA,kBACA,aACA,OACA,WACA,YACA,cACA,cACA,oBACA,gBACA,kBACA,SACA,gBACA,YACA,cACA,gBACA,eACA,eACA,eACA,QACA,cACA,aACA,YACA,gBACA,cACA,iBACA,WACA,kBACA,eACA,gBACA,QACA,aACA,cAkEAC,SA/DiB,CACjB,YACA,SACA,eACA,QACA,WA2DGC,SAxDc,CACjB,mBACA,uBACA,QACA,UACA,wBACA,WACA,SACA,MACA,wBACA,cACA,UACA,QACA,SACA,iBACA,QACA,QACA,WACA,QACA,aACA,UACA,YACA,OACA,oBACA,UACA,UAgCGC,YA7BiB,CACpB,WACA,QACA,UACA,YACA,iBACA,iBACA,UACA,SACA,QACA,SACA,UACA,WACA,SACA,SACA,gBACA,UACA,iBACA,SACA,iBACA,kBACA,UC1Fc,SAASC,G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","file":"static/js/app.3b1b8a62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.498a808b.png\";","import axios from \"axios\";\r\nimport { createContext, useState } from \"react\";\r\n\r\n// Context for account info\r\nconst AccountCtx = createContext({\r\n\tloggedIn: false,\r\n\tusername: \"\",\r\n\temail: \"\",\r\n\tsetLoginStatus: () => {},\r\n\tsetUsername: (newUsername) => {},\r\n\tsetEmail: (newEmail) => {},\r\n\tcheckCred: (csrfCtx, domain) => {},\r\n});\r\n\r\n/**\r\n * Account System\r\n *\r\n * @param {{children: any}} props\r\n * @returns App UI\r\n */\r\nexport function AccountProvider(props) {\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\r\n\t/**\r\n\t * Checks whether the user is still logged in or not\r\n\t *\r\n\t * @param {{\r\n\t *     token: string;\r\n\t *     setCsrfToken: (newToken: any) => void;\r\n\t * }} csrfCtx\r\n\t * @param {string} domain\r\n\t */\r\n\tasync function updateCred(csrfCtx, domain) {\r\n\t\tif (!isLoggedIn) {\r\n\t\t\tlet response = await axios.get(`${domain}/api/checkLogin/`);\r\n\t\t\tlet content = await response.data;\r\n\t\t\tcsrfCtx.setCsrfToken(content.token);\r\n\t\t\tif (content.user != false) {\r\n\t\t\t\tLogInHandler();\r\n\t\t\t\tsetUsernameHandler(content.user.username);\r\n\t\t\t\tsetEmailHandler(content.user.email);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the `isLoggedIn` state\r\n\t */\r\n\tfunction LogInHandler() {\r\n\t\tsetIsLoggedIn((prevState) => !prevState);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a new valid `email`\r\n\t *\r\n\t * @param {string} newEmail\r\n\t */\r\n\tfunction setEmailHandler(newEmail) {\r\n\t\tif (newEmail == \"\") {\r\n\t\t\tsetEmail(\"\");\r\n\t\t} else if (\r\n\t\t\tnewEmail.match(\r\n\t\t\t\t/^([a-zA-Z0-9]+\\.?[a-zA-Z0-9]*)@[a-zA-Z0-9^\\.]+\\.([a-zA-Z]+\\.?[a-zA-Z]*)$/\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tsetEmail(newEmail);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a new `username`\r\n\t *\r\n\t * @param {string} newUsername\r\n\t */\r\n\tfunction setUsernameHandler(newUsername) {\r\n\t\tif (newUsername.length > 0) {\r\n\t\t\tsetUsername(newUsername);\r\n\t\t} else {\r\n\t\t\tsetUsername(\"\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AccountCtx.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tloggedIn: isLoggedIn,\r\n\t\t\t\tusername: username,\r\n\t\t\t\temail: email,\r\n\t\t\t\tsetLoginStatus: LogInHandler,\r\n\t\t\t\tsetUsername: setUsernameHandler,\r\n\t\t\t\tsetEmail: setEmailHandler,\r\n\t\t\t\tcheckCred: updateCred,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AccountCtx.Provider>\r\n\t);\r\n}\r\n\r\nexport default AccountCtx;\r\n","import { createContext, useState } from \"react\";\r\n\r\nconst CsrfCtx = createContext({\r\n\ttoken: \"\",\r\n\tsetCsrfToken: (newToken) => {},\r\n});\r\n\r\n/**\r\n * Context Manager for Csrf\r\n *\r\n * @param {{children: any}} props\r\n * @returns Components that can use the csrf context\r\n */\r\nexport function CsrfContextProvider(props) {\r\n\tconst [token, setToken] = useState(\"\");\r\n\r\n\t/**\r\n\t * Updates the csrf `token`\r\n\t *\r\n\t * @param {string} newToken\r\n\t */\r\n\tfunction updateToken(newToken) {\r\n\t\tsetToken(newToken);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CsrfCtx.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\ttoken: token,\r\n\t\t\t\tsetCsrfToken: updateToken,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</CsrfCtx.Provider>\r\n\t);\r\n}\r\n\r\nexport default CsrfCtx;\r\n","import { createContext, useState } from \"react\";\r\nimport { AccountProvider } from \"./account\";\r\nimport { CsrfContextProvider } from \"./CsrfToken\";\r\n\r\n// Creates a context for reciperesults\r\nconst RecipeResultsCtx = createContext({\r\n\tmoreRecipesLink: \"\", // Link to fetch more recipes\r\n\tsetAddRecipesLink: (link) => {}, // set Recipes link\r\n\texclusions: [\"\"],\r\n\tupdateExclusions: (newExclusions) => {},\r\n\tresults: [\r\n\t\t// array of recipes\r\n\t\t{\r\n\t\t\turi: \"\",\r\n\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\timage: require(\"../../assets/favicon.png\"),\r\n\t\t\tingredients: [\"\"],\r\n\t\t\tsource: \"\"\r\n\t\t},\r\n\t],\r\n\tgetRecipes: (recipeList) => {}, // Create a list of recipes\r\n\taddRecipes: (recipeList, link) => {}, // Add recipes to the current list\r\n\tisLoading: false,\r\n\tsetIsLoading: (boolean) => {}\r\n});\r\n\r\n/**\r\n * Component only used for managing context for the whole app\r\n * \r\n * @param {*} props \r\n * @returns Child Elements\r\n */\r\nexport function ContextProvider(props) {\r\n\r\n\t// Array of recipes\r\n\tconst [recipes, setRecipes] = useState([\r\n\t\t{\r\n\t\t\turi: \"\",\r\n\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\timage: \"\",\r\n\t\t\tingredients: [\"None\"],\r\n\t\t\tsource: \"\",\r\n\t\t},\r\n\t]);\r\n\r\n\tconst [excluded, setExcluded] = useState([]);\r\n\r\n\t/**\r\n\t * Updates the `excluded` state\r\n\t * \r\n\t * @param {string[]} newExcludeState \r\n\t */\r\n\tfunction changeExcluded(newExcludeState) {\r\n\t\tsetExcluded(newExcludeState);\r\n\t}\r\n\r\n\t// link to recipes\r\n\tconst [addRecipesLink, setAddRecipesLink] = useState(\"\");\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t/**\r\n\t * Sets link to fetch more recipes\r\n\t *\r\n\t * @param {string} link\r\n\t */\r\n\tfunction setAddLink(link) {\r\n\t\tsetAddRecipesLink(link);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an array with recipes\r\n\t *\r\n\t * @param {Array<{\r\n\t * \turi: string,\r\n\t *  name: string,\r\n\t *  image: string,\r\n\t *  ingredients: Array<string>,\r\n\t *  source: string\r\n\t * }>} recipeList\r\n\t */\r\n\tfunction GetRecipes(recipeList) {\r\n\t\tif (recipeList[0].uri != \"\") {\r\n\t\t\tsetRecipes([\r\n\t\t\t\t{\r\n\t\t\t\t\tid: \"\",\r\n\t\t\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\t\t\timage: \"\",\r\n\t\t\t\t\tingredients: [\"None\"],\r\n\t\t\t\t\tsource: \"\",\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t\t\r\n            let newState = recipeList;\r\n            setRecipes(newState);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a new array that adds a new recipes\r\n\t * to the current list and updates link to\r\n\t * fetch more recipes\r\n\t *\r\n\t * @param {Array<{\r\n\t * \turi: string\r\n\t *  name: string,\r\n\t *  image: string,\r\n\t *  ingredients: Array<string>,\r\n\t *  source: string\r\n\t * }>} recipeList\r\n\t * @param {string} link\r\n\t */\r\n\tfunction addRecipes(recipeList, link) {\r\n\t\tlet newState = [];\r\n\r\n\t\tfor (let i = 0; i < recipes.length; i++) {\r\n\t\t\tnewState.push(recipes[i]);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < recipeList.length; i++) {\r\n\t\t\tnewState.push(recipeList[i]);\r\n\t\t}\r\n\r\n\t\tsetRecipes(newState);\r\n\t\tsetAddLink(link);\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps the whole app in a context provider\r\n\t */\r\n\treturn (\r\n\t\t<CsrfContextProvider>\r\n\t\t\t<AccountProvider>\r\n\t\t\t\t<RecipeResultsCtx.Provider\r\n\t\t\t\t\tvalue={{\r\n\t\t\t\t\t\tmoreRecipesLink: addRecipesLink,\r\n\t\t\t\t\t\texclusions: excluded,\r\n\t\t\t\t\t\tupdateExclusions: changeExcluded,\r\n\t\t\t\t\t\tresults: recipes,\r\n\t\t\t\t\t\tgetRecipes: GetRecipes,\r\n\t\t\t\t\t\tsetAddRecipesLink: setAddLink,\r\n\t\t\t\t\t\taddRecipes: addRecipes,\r\n\t\t\t\t\t\tisLoading: isLoading,\r\n\t\t\t\t\t\tsetIsLoading: setIsLoading\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</RecipeResultsCtx.Provider>\r\n\t\t\t</AccountProvider>\r\n\t\t</CsrfContextProvider>\r\n\t);\r\n}\r\n\r\nexport default RecipeResultsCtx;\r\n","const BACKENDLOCAL = \"http://localhost:8000\";\r\nconst BACKENDIPHOME = \"http://192.168.0.30:8000\";\r\n\r\nlet domain = \"\";\r\nif (__DEV__) {\r\n\tdomain = BACKENDIPHOME;\r\n}\r\nconst BACKEND = domain;\r\nexport default BACKEND;","import { StyleSheet } from \"react-native\";\r\n\r\nexport const recipeListStyle = StyleSheet.create(\r\n    {\r\n        list: {\r\n            flex: 1,\r\n            width: \"50%\",\r\n            maxWidth: 300,\r\n        },\r\n        foodPicContainer:\r\n        {\r\n            alignItems: \"center\"\r\n        },\r\n        foodPic:\r\n        {\r\n            height: 200,\r\n            width: \"100%\",\r\n            resizeMode: \"contain\"\r\n        },\r\n\r\n        foodName:\r\n        {\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            fontWeight: \"bold\",\r\n            padding: 10,\r\n            borderWidth: 1,\r\n            textAlign: \"center\"\r\n        }\r\n    });\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FlatList, Image, Text, useWindowDimensions, View } from \"react-native\";\r\nimport BackEndIP from \"../../ipaddressesports/BackEndIP\";\r\nimport { recipeListStyle } from \"./RecipeListStyle\";\r\n\r\n\r\n/**\r\n * Renders a list of Recipes\r\n * @typedef {{\r\n *  \turi: string,\r\n * \t\tname: string,\r\n *  \timage: any,\r\n *  \tingredients: Array<string>,\r\n * \t\tsource: string\r\n * \t}} recipe\r\n * \r\n * @param {{\r\n * \trecipes: Array<recipe>,\r\n *  recipeLink: string,\r\n *  setData: (recipeResults: Array<recipe>, addRecipesLink: string) => void,\r\n * \texlusions: string[],\r\n * \timageSize: number\r\n * }} props \r\n * @returns List of Recipes\r\n */\r\nexport default function RecipeList(props) {\r\n\r\n\tconst [recipes, setRecipes] = useState(props.recipes); // List of recipes\r\n\tconst [isMoreRecipes, setIsMoreRecipes] = useState(true);\r\n\tconst [loadedAllRecipes, setLoadedAllRecipes] = useState(false);\r\n\r\n\t/**\r\n\t * Forces it to update the list because some reason\r\n\t * it doens't register it on first render\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tsetRecipes(props.recipes)\r\n\t}, [props.recipes]);\r\n\r\n\t/**\r\n\t * Renders a recipe with in image and name\r\n\t * \r\n\t * @param {recipe} item \r\n\t * @returns A recipe with image and name\r\n\t */\r\n\tfunction renderRecipe({ item }) {\r\n\t\tlet image = \"\";\r\n\t\tif (item.image != \"\")\r\n\t\t{\r\n\t\t\timage = {uri:item.image, height: \"100%\", width: \"100%\"};\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\timage = require(\"../../../assets/favicon.png\");\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<View>\r\n\t\t\t\t<View style={recipeListStyle.foodPicContainer}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tstyle={recipeListStyle.foodPic}\r\n\t\t\t\t\t\tsource={image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<Text style={recipeListStyle.foodName}>{item.name}</Text>\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds more recipes to the current list\r\n\t * when the user scrolls near the bottom\r\n\t * \r\n\t * @param {number} distanceFromEnd \r\n\t */\r\n    async function loadMoreRecipes({distanceFromEnd})\r\n    {\r\n\t\tif (props.recipeLink != undefined && props.recipeLink != \"\" && isMoreRecipes)\r\n\t\t{\r\n\r\n\t\t\tlet excludeQuery = \"\";\r\n\r\n\t\t\tprops.exlusions.forEach((excluded, i) => {\r\n\t\t\t\texcludeQuery += `excluded=${excluded}`\r\n\r\n\t\t\t\tif (i < props.exlusions) {\r\n\t\t\t\t\texcludeQuery += \"&\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlet response = await axios({\r\n\t\t\t\t\tmethod: \"get\",\r\n\t\t\t\t\turl: `${BackEndIP}/api/addRecipes/?nextLink=${props.recipeLink}&${excludeQuery}`,\r\n\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet content = await response.data;\r\n\t\t\t\tprops.setData(content.results, content.addRecipesLink);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetIsMoreRecipes(false);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (recipes[recipes.length - 1].uri != \"\" && !loadedAllRecipes) {\r\n\t\t\tsetRecipes((prevState) => {\r\n\t\t\t\tlet newState = [...prevState]\r\n\t\t\t\tnewState.push({\r\n\t\t\t\t\turi: \"\",\r\n\t\t\t\t\tname: \"No more Recipes\",\r\n\t\t\t\t\timage: \"\",\r\n\t\t\t\t\tingredients: [],\r\n\t\t\t\t\tsource: \"\",\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\treturn newState\r\n\t\t\t});\r\n\t\t\tsetLoadedAllRecipes(prevState => !prevState);\r\n\t\t}\r\n    }\r\n\r\n\tlet listStyle = {\r\n\t\tflex: 1,\r\n\t\twidth: useWindowDimensions().width > 700 ? \"30%\" : \"100%\",\r\n\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={[listStyle]}>\r\n\t\t\t<FlatList\r\n\t\t\t\tdata={recipes}\r\n\t\t\t\trenderItem={renderRecipe}\r\n                onEndReached={loadMoreRecipes}\r\n                onEndReachedThreshold={2}\r\n\t\t\t\textraData={recipes}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const SearchStyle = StyleSheet.create(\r\n    {\r\n        container: {\r\n            flex: 2,\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        imgContainer: {\r\n            flexBasis:30,\r\n            height: 30,\r\n            marginTop: 7,\r\n            marginBottom: 7,\r\n        },\r\n    });","import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles = StyleSheet.create({\r\n\tsearchIcon: {\r\n\t\theight: 20,\r\n\t\twidth: 20,\r\n\t\tresizeMode: \"contain\",\r\n\t\tmarginRight: 10\r\n\t},\r\n\r\n\tnavLink: {\r\n\t\tpadding: 5\r\n\t},\r\n\r\n\tnavText: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"500\",\r\n\t\tmarginLeft: 10,\r\n\t},\r\n\r\n\tusernameText: {\r\n\t\tcolor: \"black\",\r\n\t\tfontSize: 12,\r\n\t\tfontWeight: \"400\",\r\n\t\tmarginLeft: 10,\r\n\t\tmarginTop: 5\r\n\t},\r\n\r\n\tpageContainer: {\r\n\t\tmarginTop: 10,\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\r\n\terrorMsg: {\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"red\",\r\n\t\tpadding: 10,\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 20,\r\n\t\tborderRadius: 20,\r\n\t},\r\n});","import { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { Pressable, Text } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport AccountCtx from \"../../context/account\";\r\nimport CsrfCtx from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\n\r\n/**\r\n * Renders the Logout Button\r\n *\r\n * @returns Logut Button\r\n */\r\nexport default function LogOutButton() {\r\n\tconst tokenCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\tconst navigation = useNavigation();\r\n\r\n\t/**\r\n\t * Logs the user out from the backend server `session`.\r\n\t */\r\n\tasync function LogOutHandler() {\r\n\t\tlet response = await axios.get(`${BACKEND}/api/logout/`);\r\n\t\tlet content = await response.data;\r\n\r\n\t\tif (content.loggedOut) {\r\n\t\t\taccCtx.setLoginStatus(false);\r\n\t\t\taccCtx.setUsername(\"\");\r\n\t\t\taccCtx.setEmail(\"\");\r\n\t\t\ttokenCtx.setCsrfToken(content.token);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Pressable\r\n\t\t\tstyle={{ padding: 5 }}\r\n\t\t\tonPress={LogOutHandler}\r\n\t\t>\r\n\t\t\t<Text style={styles.navText}>Sign Out</Text>\r\n\t\t</Pressable>\r\n\t);\r\n}\r\n","import { View } from \"react-native\";\r\n\r\n/**\r\n * Renders a NavBar\r\n *\r\n * @param {*} props\r\n * @returns Row of buttons that facilitate in navigating the application\r\n */\r\nexport default function NavBar(props) {\r\n\treturn (\r\n\t\t<View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\r\n\t\t\t{props.children}\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { Link } from \"@react-navigation/native\";\r\nimport { Image } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { SearchStyle } from \"../../pages/Search/SearchStyle\";\r\n\r\n/**\r\n * Renders the Search Button\r\n * @returns Button that links to the Search Options page\r\n */\r\nexport default function SearchButton() {\r\n\tconst image = require(\"../../../assets/searchIcon.png\");\r\n\treturn (\r\n\t\t<Link\r\n\t\t\tto={{ screen: \"Search\" }}\r\n\t\t\tstyle={SearchStyle.imgContainer}\r\n\t\t>\r\n\t\t\t<Image\r\n\t\t\t\tstyle={styles.searchIcon}\r\n\t\t\t\tsource={image}\r\n\t\t\t/>\r\n\t\t</Link>\r\n\t);\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport RecipeResultsCtx from \"../../context/Context\";\r\nimport RecipeList from \"../../components/RecipeList/RecipeList\";\r\nimport { SearchStyle } from \"./SearchStyle\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport CsrfCtx from \"../../context/CsrfToken\";\r\nimport BackEndIP from \"../../ipaddressesports/BackEndIP\";\r\nimport AccountCtx from \"../../context/account\";\r\nimport LogOutButton from \"../../components/Buttons/LogOutButton\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport SearchButton from \"../../components/Buttons/SearchButton\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\n/**\r\n * Renders the page with recipe results depending on\r\n * the options selected in Search Options page 🔎\r\n *\r\n * @returns Search Results Page\r\n */\r\nexport default function Search({ navigation }) {\r\n\tconst ctx = useContext(RecipeResultsCtx);\r\n\tconst csrfCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\r\n\tconst [isMounted, setIsMounted] = useState(true);\r\n\r\n\tuseEffect(() => ctx.setIsLoading(false), [ctx.isLoading]);\r\n\r\n\r\n\t// Checks the user has logged in when the app boots up\r\n\tuseEffect(() => {\r\n\t\taccCtx.checkCred(csrfCtx, BackEndIP)\r\n\t}, [isMounted]);\r\n\r\n\t// Changes the navigation bar if the user is logged in or not.\r\n\tuseEffect(() => {\r\n\t\tif (accCtx.loggedIn) {\r\n\t\t\tnavigation.setOptions({\r\n\t\t\t\theaderLeft: () => (\r\n\t\t\t\t\t<NavBar>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Profile\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Profile</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Text style={styles.usernameText}>Username: {accCtx.username}</Text>\r\n\t\t\t\t\t</NavBar>\r\n\t\t\t\t),\r\n\t\t\t\theaderRight: () => (\r\n\t\t\t\t\t<NavBar>\r\n\t\t\t\t\t\t<LogOutButton />\r\n\t\t\t\t\t\t<SearchButton />\r\n\t\t\t\t\t</NavBar>\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnavigation.setOptions({\r\n\t\t\t\theaderLeft: () => undefined,\r\n\t\t\t\theaderRight: () => (\r\n\t\t\t\t\t<NavBar>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{ screen: \"Login\", params: {toLogin: true} }}\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Login</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{ screen: \"SignUp\", params: {toLogin: false} }}\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<SearchButton />\r\n\t\t\t\t\t</NavBar>\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [accCtx.loggedIn, accCtx.username]);\r\n\r\n\treturn (\r\n\t\t<View style={{ ...SearchStyle.container, ...styles.pageContainer }}>\r\n\t\t\t{!ctx.isLoading && (\r\n\t\t\t\t<RecipeList\r\n\t\t\t\t\trecipes={ctx.results}\r\n\t\t\t\t\tsetData={ctx.addRecipes}\r\n\t\t\t\t\trecipeLink={ctx.moreRecipesLink}\r\n\t\t\t\t\texlusions={ctx.exclusions}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const optionStyles = StyleSheet.create(\r\n    {\r\n        listContainer: {\r\n            borderWidth: 2\r\n        },\r\n    });","import { useEffect, useState } from \"react\";\r\nimport { FlatList, Pressable, Text, View } from \"react-native\";\r\nimport { optionStyles } from \"./RecipeOptionStyle\";\r\n\r\n/**\r\n * Displays a list of recipe options from the data given via\r\n *\r\n * @param {{\r\n *      type: string\r\n *      updateData: (type:string, options: Array<str>) => void,\r\n *      data: Array<string>,\r\n * \t\tselectedData: Array<string>\r\n * \t\tstyle: any\r\n *  }\r\n * } props\r\n *\r\n * `data` is array of data to be displayed and\r\n * `updateData` is for updating data of the parent component.\r\n * `selectedData` is data that is already selected.\r\n *\r\n * @returns List of Recipe Options\r\n */\r\nexport default function RecipeOption(props) {\r\n\tconst [selectedData, setSelectedData] = useState(props.selectedData);\r\n\r\n\t/**\r\n\t * Selects the type of data within an object to be displayed when `props.type` changes.\r\n\t */\r\n\tuseEffect(() => setSelectedData(props.selectedData), [props.type]);\r\n\r\n\t/**\r\n\t * Updates the data in the parent component when changing `selectedData changes`.\r\n\t */\r\n\tuseEffect(\r\n\t\t() => props.updateData(props.type, selectedData),\r\n\t\t[selectedData]\r\n\t);\r\n\r\n\t/**\r\n\t * Add selected options to selectedData\r\n\t *\r\n\t * @param {string} option\r\n\t */\r\n\tfunction addOptions(option) {\r\n\t\tsetSelectedData((prevState) => {\r\n\t\t\tlet newList = [];\r\n\t\t\tnewList = newList.concat(prevState);\r\n\t\t\tnewList.push(option);\r\n\r\n\t\t\treturn newList;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes option from selectedData\r\n\t *\r\n\t * @param {string} RMoption\r\n\t */\r\n\tfunction removeOptions(RMoption) {\r\n\t\tsetSelectedData((prevState) => {\r\n\t\t\tlet newState = [];\r\n\r\n\t\t\tprevState.forEach((option) =>\r\n\t\t\t\toption != RMoption ? newState.push(option) : null\r\n\t\t\t);\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Checks that the option is included in selectedData\r\n\t *\r\n\t * @param {string} item\r\n\t * @returns True if exists otherwise false.\r\n\t */\r\n\tfunction optionIncluded(item) {\r\n\t\tlet exists = false;\r\n\t\tselectedData.forEach((option) => {\r\n\t\t\tif (option == item) {\r\n\t\t\t\texists = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn exists;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds selected option when it doesn't existin in selectedData\r\n\t * or removes it when it already exists in selectedData\r\n\t *\r\n\t * @param {string} option\r\n\t */\r\n\tfunction selectOptionHandler(option) {\r\n\t\tlet exists = optionIncluded(option);\r\n\r\n\t\tif (exists) {\r\n\t\t\tremoveOptions(option);\r\n\t\t} else {\r\n\t\t\taddOptions(option);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a button that corresponds to an option.\r\n\t * Changes color depending if it's added or not\r\n\t *\r\n\t * @param {string} item\r\n\t * @returns Button to be rendered in List\r\n\t */\r\n\tfunction renderOptions({ item }) {\r\n\t\treturn (\r\n\t\t\t<Pressable\r\n\t\t\t\tonPress={(e) => selectOptionHandler(item)}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: 175,\r\n\t\t\t\t\tbackgroundColor: optionIncluded(item)\r\n\t\t\t\t\t\t? \"#00ff0d\"\r\n\t\t\t\t\t\t: \"#fd5d00\",\r\n\t\t\t\t\tpadding: 5,\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{fontWeight:\"bold\"}}>{item}</Text>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={{ ...optionStyles.listContainer, ...props.style }}>\r\n\t\t\t<FlatList\r\n\t\t\t\tdata={props.data}\r\n\t\t\t\trenderItem={renderOptions}\r\n\t\t\t\textraData={selectedData}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\nconst HEIGHT = \"80%\";\r\nexport const SearchOptionsStyle = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\talignItems: \"center\",\r\n\t\tmarginTop: 10,\r\n\t\tmarginLeft: \"auto\",\r\n\t\tmarginRight: \"auto\",\r\n\t},\r\n\r\n\ttextButtonContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tflexBasis: 50,\r\n\t\tmaxHeight: 50,\r\n\t},\r\n\r\n\tsearchIcon: {\r\n\t\theight: 25,\r\n\t\tmarginTop: 7,\r\n\t\twidth: \"100%\",\r\n\t\tresizeMode: \"contain\",\r\n\t},\r\n\r\n\timgContainer: {\r\n\t\tflexBasis: 20,\r\n\t\theight: 30,\r\n\t},\r\n\r\n\tinput: {\r\n\t\theight: 40,\r\n\t\tmarginLeft: 10,\r\n\t\tpadding: 15,\r\n\t\tpaddingBottom: 10,\r\n\t\tborderColor: \"black\",\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 20,\r\n\t},\r\n\r\n\toptionsContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tflexWrap: \"wrap\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\tminWidth: 400,\r\n\t\twidth: \"30%\",\r\n\t},\r\n\r\n\toptionTypes: {\r\n\t\twidth: 100,\r\n\t\tbackgroundColor: \"#ff9100\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\r\n\ttext: {\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: 5,\r\n\t},\r\n\r\n\toptionTypeHeader: {\r\n\t\tbackgroundColor: \"#ffee00\",\r\n\t\tfontWeight: \"bold\",\r\n\t},\r\n\r\n\tselectedMetaText: {\r\n\t\tfontSize: 25\r\n\t},\r\n\r\n\tselectedOptionsContainer: {\r\n\t\theight: HEIGHT,\r\n\t\tminHeight: HEIGHT,\r\n\t\tmaxHeight: HEIGHT,\r\n\t\tborderWidth: 2,\r\n\t\tmarginBottom: 5\r\n\t},\r\n});\r\n","const DIETS = [\r\n\t\"balanced\",\r\n\t\"high-fiber\",\r\n\t\"high-protein\",\r\n\t\"low-carb\",\r\n\t\"low-fat\",\r\n\t\"low-sodium\",\r\n];\r\nconst HEALTHS = [\r\n\t\"alcohol-cocktail\",\r\n\t\"alcohol-free\",\r\n\t\"celery-free\",\r\n\t\"crustacean-free\",\r\n\t\"dairy-free\",\r\n\t\"DASH\",\r\n\t\"egg-free\",\r\n\t\"fish-free\",\r\n\t\"fodmap-free\",\r\n\t\"gluten-free\",\r\n\t\"immuno-supportive\",\r\n\t\"keto-friendly\",\r\n\t\"kidney-friendly\",\r\n\t\"kosher\",\r\n\t\"low-potassium\",\r\n\t\"low-sugar\",\r\n\t\"lupine-free\",\r\n\t\"Mediterranean\",\r\n\t\"mollusk-free\",\r\n\t\"mustard-free\",\r\n\t\"No-oil-added\",\r\n\t\"paleo\",\r\n\t\"peanut-free\",\r\n\t\"pecatarian\",\r\n\t\"pork-free\",\r\n\t\"red-meat-free\",\r\n\t\"sesame-free\",\r\n\t\"shellfish-free\",\r\n\t\"soy-free\",\r\n\t\"sugar-conscious\",\r\n\t\"sulfite-free\",\r\n\t\"tree-nut-free\",\r\n\t\"vegan\",\r\n\t\"vegetarian\",\r\n\t\"wheat-free\",\r\n];\r\n\r\nconst MEALTYPES = [\r\n\t\"breakfast\",\r\n\t\"brunch\",\r\n\t\"lunch/dinner\",\r\n\t\"snack\",\r\n\t\"teatime\",\r\n];\r\n\r\nconst DISHTYPES = [\r\n\t\"alcohol cocktail\",\r\n\t\"biscuits and cookies\",\r\n\t\"bread\",\r\n\t\"cereals\",\r\n\t\"condiments and sauces\",\r\n\t\"desserts\",\r\n\t\"drinks\",\r\n\t\"egg\",\r\n\t\"ice cream and custard\",\r\n\t\"main course\",\r\n\t\"pancake\",\r\n\t\"pasta\",\r\n\t\"pastry\",\r\n\t\"pies and tarts\",\r\n\t\"pizza\",\r\n\t\"preps\",\r\n\t\"preserve\",\r\n\t\"salad\",\r\n\t\"sandwiches\",\r\n\t\"seafood\",\r\n\t\"side dish\",\r\n\t\"soup\",\r\n\t\"special occasions\",\r\n\t\"starter\",\r\n\t\"sweets\",\r\n];\r\n\r\nconst CUISINETYPES = [\r\n\t\"american\",\r\n\t\"asian\",\r\n\t\"british\",\r\n\t\"caribbean\",\r\n\t\"central europe\",\r\n\t\"eastern europe\",\r\n\t\"chinese\",\r\n\t\"french\",\r\n\t\"greek\",\r\n\t\"indian\",\r\n\t\"italian\",\r\n\t\"japanese\",\r\n\t\"korean\",\r\n\t\"kosher\",\r\n\t\"mediterranean\",\r\n\t\"mexican\",\r\n\t\"middle eastern\",\r\n\t\"nordic\",\r\n\t\"south american\",\r\n\t\"south east asia\",\r\n\t\"world\",\r\n];\r\n\r\nexport default {\r\n\tdiet: DIETS,\r\n\thealth: HEALTHS,\r\n\tmealType: MEALTYPES,\r\n    dishType: DISHTYPES,\r\n    cuisineType: CUISINETYPES\r\n};\r\n","import { Text } from \"react-native\";\r\n\r\n/**\r\n * Displays an error message.\r\n *\r\n * @param {{\r\n *      style:*,\r\n * \t\tmessage: string,\r\n *      hasError: boolean\r\n * }} props\r\n *\r\n * @returns Error display message or none.\r\n */\r\nexport default function TextError(props) {\r\n\treturn props.hasError ? (\r\n\t\t<Text style={props.style}>{props.message}</Text>\r\n\t) : null;\r\n}\r\n","import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tFlatList,\r\n\tImage,\r\n\tPlatform,\r\n\tPressable,\r\n\tSectionList,\r\n\tText,\r\n\tTextInput,\r\n\tuseWindowDimensions,\r\n\tView,\r\n} from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport RecipeOption from \"../../components/RecipeOption/RecipeOption\";\r\nimport RecipeResultsCtx from \"../../context/Context\";\r\nimport { SearchOptionsStyle } from \"./SearchOptionsStyle\";\r\nimport RecipeMetaOptions from \"../../RecipeMetaOptions\";\r\nimport TextError from \"../../components/TextError/TextError\";\r\nimport BackEndIP from \"../../ipaddressesports/BackEndIP\";\r\nimport accountCtx from \"../../context/account\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport LogOutButton from \"../../components/Buttons/LogOutButton\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport CsrfCtx from \"../../context/CsrfToken\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\n/**\r\n * Renders a page that has options to search recipes\r\n *\r\n * @param {{ navigation: * }} props\r\n * @returns Search Options Page\r\n */\r\nexport default function SearchOptions({ navigation }) {\r\n\tconst ctx = useContext(RecipeResultsCtx);\r\n\tconst accCtx = useContext(accountCtx);\r\n\tconst authCtx = useContext(CsrfCtx);\r\n\t\r\n\t// collection of arrays of optional values\r\n\tconst [options, setOptions] = useState({\r\n\t\tdiet: [],\r\n\t\thealth: [],\r\n\t\tcuisineType: [],\r\n\t\tmealType: [],\r\n\t\tdishType: [],\r\n\t});\r\n\tconst [optionTypes, setNumOptions] = useState(() => {\r\n\t\tlet num = [];\r\n\t\tfor (const i in options) {\r\n\t\t\tnum.push(i);\r\n\t\t}\r\n\t\treturn num;\r\n\t});\r\n\tconst [optionType, setOptionType] = useState(optionTypes[0]);\r\n\tconst [inputIg, setinputIg] = useState(\"\"); // string of ingredients inputted by user\r\n\tconst [inputExclude, setInputExclude] = useState(\"\");\r\n\tconst [exclude, setExclude] = useState([]);\r\n\tconst [hasError, setHasError] = useState(false); // checks if the user hasn't inputted/selected ingredients\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\tconst [mount, setMount] = useState(true);\r\n\t\r\n\t// Calls when `Form` component is mounted\r\n\tuseEffect(() => {accCtx.checkCred(authCtx, BACKEND)}, [mount]);\r\n\t\r\n\t// Changes the navigation bar if the user is logged in or not.\r\n\tuseEffect(() => {\r\n\t\tif (accCtx.loggedIn) {\r\n\t\t\tnavigation.setOptions({\r\n\t\t\t\theaderLeft: () => (\r\n\t\t\t\t\t<NavBar>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Profile\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Profile</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Text style={styles.usernameText}>Username: {accCtx.username}</Text>\r\n\t\t\t\t\t</NavBar>\r\n\t\t\t\t),\r\n\t\t\t\theaderRight: () => (\r\n\t\t\t\t\t\t<LogOutButton />\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnavigation.setOptions({\r\n\t\t\t\theaderLeft: () => (\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t),\r\n\t\t\t\theaderRight: () => (\r\n\t\t\t\t\t<NavBar>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{ screen: \"Login\", params: {toLogin: true} }}\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Login</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{ screen: \"SignUp\", params: {toLogin: false} }}\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</NavBar>\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [accCtx.loggedIn]);\r\n\r\n\t/**\r\n\t * Updates the selected options\r\n\t *\r\n\t * @param {string} type\r\n\t * @param {Array<string>} optionsArray\r\n\t */\r\n\tfunction updateOptions(type, optionsArray) {\r\n\t\tsetOptions((preveState) => {\r\n\t\t\tlet newState = { ...preveState };\r\n\t\t\tnewState[type] = optionsArray;\r\n\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if all the options array are empty\r\n\t *\r\n\t * @returns true if all options are empty, false otherwise.\r\n\t */\r\n\tfunction isOptionsEmpty() {\r\n\t\tlet emptyCount = 0;\r\n\t\tfor (const option in options) {\r\n\t\t\tif (options[option].length <= 0) {\r\n\t\t\t\temptyCount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn emptyCount >= optionTypes.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Fetches recipes using the options object and inputIg\r\n\t */\r\n\tasync function fetchFood() {\r\n\t\tif (inputIg.length <= 0 && isOptionsEmpty() && exclude.length <= 0) {\r\n\t\t\tsetHasError(true);\r\n\t\t\tsetErrorMsg(\"Please enter food name/ingredients\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetHasError(false);\r\n\r\n\t\tlet query = \"\";\r\n\r\n\t\tif (!isOptionsEmpty()) {\r\n\t\t\tlet i = 0;\r\n\t\t\tfor (const option in options) {\r\n\t\t\t\tif (query.length > 0 && (i < optionTypes.length - 1) && (options[option].length > 0)) {\r\n\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t}\r\n\t\t\t\toptions[option].forEach((item, index) => {\r\n\t\t\t\t\tquery += `${option}=${item}`;\r\n\t\t\t\t\tif (index < options[option].length - 1) {\r\n\t\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\ti += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (exclude.length > 0) {\r\n\t\t\tctx.updateExclusions(exclude);\r\n\t\t\tif (query.length > 0) {\r\n\t\t\t\tquery += \"&\";\r\n\t\t\t}\r\n\t\t\texclude.forEach((item, i) => {\r\n\t\t\t\tquery += `excluded=${item.trim()}`;\r\n\t\t\t\tif (i < exclude.length - 1) {\r\n\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (inputIg.trim().length > 0) {\r\n\t\t\tif (query.length > 0) {\r\n\t\t\t\tquery += \"&\";\r\n\t\t\t}\r\n\t\t\tquery += `ingredients=${inputIg.trim()}`;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet response = await axios({\r\n\t\t\t\tmethod: \"get\",\r\n\t\t\t\turl: `${BackEndIP}/api/fetchRecipes/?${query}`,\r\n\t\t\t\tresponseType: \"json\",\r\n\t\t\t});\r\n\r\n\t\t\tlet content = await response.data;\r\n\r\n\t\t\tctx.getRecipes(content.results);\r\n\t\t\tctx.setAddRecipesLink(content.addRecipesLink);\r\n\r\n\t\t\tctx.setIsLoading(true);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t} catch (error) {\r\n\t\t\tsetHasError(true);\r\n\t\t\tsetErrorMsg(\"Unable to retrieve any recipes\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the inputIg with the text entered\r\n\t * by user.\r\n\t *\r\n\t * @param {string} igs\r\n\t */\r\n\tfunction inputIngredients(igs) {\r\n\t\tsetinputIg(igs);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates `inputExclude` by the text entered by the user\r\n\t * \r\n\t * @param {string} excluded \r\n\t */\r\n\tfunction inputExcludeHandler(excluded) {\r\n\t\tsetInputExclude(excluded)\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an excluded ingredient\r\n\t */\r\n\tfunction addExcludeHandler() {\r\n\t\tif (inputExclude !== \"\") {\r\n\t\t\tsetExclude(preveState => [...preveState, inputExclude])\r\n\t\t\tsetInputExclude(\"\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the available option.\r\n\t * \r\n\t * @param {{item: string}} param \r\n\t * @returns Button that toggles the option\r\n\t */\r\n\tfunction renderOptionTypes({ item }) {\r\n\t\treturn (\r\n\t\t\t<Pressable\r\n\t\t\t\tstyle={SearchOptionsStyle.optionTypes}\r\n\t\t\t\tonPress={() => setOptionType(item)}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{fontWeight:\"bold\"}}>{item}</Text>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders an excluded ingredient that the user doesn't want to be\r\n\t * displayed in the recipe results. \r\n\t * \r\n\t * @param {{ item: string}} param\r\n\t * @returns An excluded ingredient\r\n\t */\r\n\tfunction renderExclusions({item}) {\r\n\t\treturn (\r\n\t\t\t<Pressable>\r\n\t\t\t\t<Text style={{textAlign: \"center\"}}>{item}</Text>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders a list of selected options in their sections\r\n\t * \r\n\t * @returns A list of selected options in their sections\r\n\t */\r\n\tfunction SelectedOptions() {\r\n\t\tconst OPTIONLISTWIDTH = \"100%\";\r\n\t\tlet optionObjArray = []\r\n\r\n\t\tfor (const option in options) {\r\n\t\t\toptionObjArray.push({\r\n\t\t\t\toptionType: option,\r\n\t\t\t\tdata: options[option]\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<View style={{...SearchOptionsStyle.selectedOptionsContainer, width: OPTIONLISTWIDTH}}>\r\n\t\t\t\t<Text style={{...SearchOptionsStyle.text, ...SearchOptionsStyle.selectedMetaText, fontWeight: \"bold\"}}>Selected Options</Text>\r\n\t\t\t\t<SectionList\r\n\t\t\t\tstyle={{width: \"100%\"}}\r\n\t\t\t\t\tsections={optionObjArray}\r\n\t\t\t\t\trenderItem={({item}) => <Text style={{...SearchOptionsStyle.text}}>{item}</Text>}\r\n\t\t\t\t\trenderSectionHeader={({section: {optionType}}) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Text style={{...SearchOptionsStyle.optionTypeHeader, ...SearchOptionsStyle.selectedMetaText, ...SearchOptionsStyle.text}}>\r\n\t\t\t\t\t\t\t\t{optionType}\r\n\t\t\t\t\t\t\t</Text>);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View\r\n\t\t\tstyle={{\r\n\t\t\t\t...SearchOptionsStyle.container,\r\n\t\t\t\t...styles.pageContainer,\r\n\t\t\t\twidth: useWindowDimensions().width < 700 ? \"100%\" : \"70%\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<View style={SearchOptionsStyle.textButtonContainer}>\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={SearchOptionsStyle.imgContainer}\r\n\t\t\t\t\tonPress={fetchFood}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tstyle={SearchOptionsStyle.searchIcon}\r\n\t\t\t\t\t\tsource={require(\"../../../assets/searchIcon.png\")}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tSearchOptionsStyle.input,\r\n\t\t\t\t\t\t{ borderColor: hasError ? \"red\" : \"black\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChangeText={inputIngredients}\r\n\t\t\t\t\tplaceholder=\"Enter recipe names/ingredients\"\r\n\t\t\t\t\tonSubmitEditing={fetchFood}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t\t<View style={SearchOptionsStyle.textButtonContainer}>\r\n\t\t\t\t<Pressable onPress={addExcludeHandler} style={{paddingTop:10}}>\r\n\t\t\t\t\t<Text style={{fontWeight: \"bold\"}}>Exclude</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tSearchOptionsStyle.input,\r\n\t\t\t\t\t\t{ borderColor: hasError ? \"red\" : \"black\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChangeText={inputExcludeHandler}\r\n\t\t\t\t\tvalue={inputExclude}\r\n\t\t\t\t\tplaceholder=\"Enter ingredients to exclude\"\r\n\t\t\t\t\tonSubmitEditing={addExcludeHandler}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\r\n\t\t\t<TextError\r\n\t\t\t\thasError={hasError}\r\n\t\t\t\tstyle={styles.errorMsg}\r\n\t\t\t\tmessage={errorMsg}\r\n\t\t\t/>\r\n\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...SearchOptionsStyle.optionsContainer,\r\n\t\t\t\t\tmaxHeight: useWindowDimensions().height / 2.5,\r\n\t\t\t\t\tflexDirection: \"row\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\r\n\t\t\t\t<View>\r\n\t\t\t\t\t<FlatList\r\n\t\t\t\t\tdata={exclude}\r\n\t\t\t\t\trenderItem={renderExclusions}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<SelectedOptions/>\r\n\t\t\t\t<View style={{ borderWidth: 2, marginBottom: 5, height: 99 }}>\r\n\t\t\t\t\t<FlatList\r\n\t\t\t\t\t\tdata={optionTypes}\r\n\t\t\t\t\t\trenderItem={renderOptionTypes}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<RecipeOption\r\n\t\t\t\t\tstyle={{height: 99 }}\r\n\t\t\t\t\ttype={optionType}\r\n\t\t\t\t\tdata={RecipeMetaOptions[optionType]}\r\n\t\t\t\t\tselectedData={options[optionType]}\r\n\t\t\t\t\tupdateData={updateOptions}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { Text, TextInput, View } from \"react-native\";\r\n\r\n/**\r\n * Renders a form field\r\n *\r\n * @param { {\r\n *      label: string,\r\n *      placeholder: string,\r\n *      isPassword: boolean,\r\n *      onChangeTextHandler: (text: string) => void,\r\n *      inputStyle: *,\r\n *      labelStyle: *,\r\n *      containerStyle: *,\r\n *  }\r\n * } props\r\n *\r\n * @returns A text label with text field\r\n */\r\nexport default function FormField({\r\n\tlabel,\r\n\tplaceholder = \"\",\r\n\tisPassword = false,\r\n\tonChangeTextHandler = undefined,\r\n\tinputStyle = {},\r\n\tlabelStyle = {},\r\n\tcontainerStyle = {},\r\n}) {\r\n\treturn (\r\n\t\t<View style={{ ...containerStyle }}>\r\n\t\t\t<Text style={{ ...labelStyle }}>{label}</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\tstyle={{ ...inputStyle }}\r\n\t\t\t\tsecureTextEntry={isPassword}\r\n\t\t\t\tonChangeText={onChangeTextHandler}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import FormField from \"../FormField/FormField\";\r\n\r\n/**\r\n * Renders a username and email field or just username for\r\n * sign up or login respectively.\r\n *\r\n * @param {{\r\n *      toLogin :boolean,\r\n *      usernameHandler: (newUsername: string) => void,\r\n *      emailHandler: (newEmail: string) => void,\r\n *      inputStyle: *,\r\n *      labelStyle: *,\r\n *      containerStyle: *,\r\n *  }} props\r\n *\r\n * @returns Username and Email fields for sign up or\r\n * only a username field for login\r\n */\r\nexport default function UserEmailForms(props) {\r\n\tif (props.toLogin) {\r\n\t\treturn (\r\n\t\t\t<FormField\r\n\t\t\t\tlabel={\"Username:\"}\r\n\t\t\t\tplaceholder={\"Enter username:\"}\r\n\t\t\t\tonChangeTextHandler={props.usernameHandler}\r\n\t\t\t\tcontainerStyle={props.containerStyle}\r\n\t\t\t\tlabelStyle={props.labelStyle}\r\n\t\t\t\tinputStyle={props.inputStyle}\r\n\t\t\t/>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<FormField\r\n\t\t\t\t\tlabel={\"Username:\"}\r\n\t\t\t\t\tplaceholder={\"Please enter username:\"}\r\n\t\t\t\t\tonChangeTextHandler={props.usernameHandler}\r\n\t\t\t\t\tcontainerStyle={props.containerStyle}\r\n\t\t\t\t\tlabelStyle={props.labelStyle}\r\n\t\t\t\t\tinputStyle={props.inputStyle}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormField\r\n\t\t\t\t\tlabel={\"Email:\"}\r\n\t\t\t\t\tplaceholder={\"Please enter email:\"}\r\n\t\t\t\t\tonChangeTextHandler={props.emailHandler}\r\n\t\t\t\t\tcontainerStyle={props.containerStyle}\r\n\t\t\t\t\tlabelStyle={props.labelStyle}\r\n\t\t\t\t\tinputStyle={props.inputStyle}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nexport const FormStyle = StyleSheet.create(\r\n    {\r\n        formInput: {\r\n            padding: 5,\r\n            marginTop: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 20\r\n        },\r\n\r\n        formLabel: {\r\n            marginRight: 10,\r\n            textAlign: \"left\",\r\n            fontWeight: \"bold\",\r\n        },\r\n\r\n        submitButton: {\r\n            padding: 10,\r\n            margin: 10,\r\n            borderRadius: 15, \r\n            backgroundColor: \"#fd5d00\"\r\n        },\r\n    }\r\n);\r\n","import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Platform, Pressable, Text, View } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport FormField from \"../../components/FormField/FormField\";\r\nimport TextError from \"../../components/TextError/TextError\";\r\nimport CsrfCtx from \"../../context/CsrfToken\";\r\nimport BackEndIP from \"../../ipaddressesports/BackEndIP\";\r\nimport AccountCtx from \"../../context/account\";\r\nimport UserEmailForms from \"../../components/UserEmailForms/UserEmailForms\";\r\nimport { FormStyle } from \"./FormStyles\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\n\r\nconst emailRegExp = /^([a-zA-Z0-9]+\\.?[a-zA-Z0-9]*)@[a-zA-Z0-9^\\.]+\\.([a-zA-Z]+\\.?[a-zA-Z]*)$/\r\n\r\n/**\r\n * Renders the Text Form with multiple fields\r\n * It can be either login or sign up form\r\n *\r\n * @param {\r\n * \t{\r\n * \t\tnavigation: *,\r\n * \t\troute: *\r\n * \t}} props\r\n * @returns Text Form\r\n */\r\nexport default function Form({ route, navigation }) {\r\n\t\r\n\tconst authCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\r\n\tconst [toLogin, setToLogin] = useState(route.params.toLogin);\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPasword] = useState(\"\");\r\n    const [formValid, setFormValid] = useState(true);\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\tconst [mount, setMount] = useState(true);\r\n\tconst [fieldWidth, setFieldWidth] = useState({\r\n\t\twidth: \"25%\",\r\n        minWidth: \"25%\",\r\n        maxWidth: \"25%\",\r\n\t});\r\n\t\r\n\t// Calls when `Form` component is mounted\r\n\tuseEffect(() => {\r\n\t\taccCtx.checkCred(authCtx, BACKEND);\r\n\t\t\r\n\t\tif (Platform.OS != \"web\") {\r\n\t\t\tsetFieldWidth({\r\n\t\t\t\twidth: \"50%\",\r\n        \t\tminWidth: \"50%\",\r\n        \t\tmaxWidth: \"50%\",\r\n\t\t\t});\r\n\t\t}\r\n\t}, [mount]);\r\n\r\n\t/**\r\n\t * Updates the `username` state with `newUsername`\r\n\t *\r\n\t * @param {string} newUsername\r\n\t */\r\n\tfunction usernameHandler(newUsername) {\r\n\t\tif (newUsername.length > 50) {\r\n\t\t\tsetFormValid(false);\r\n\t\t\tsetErrorMsg(\"Username too long\");\r\n\t\t} else {\r\n\t\t\tsetFormValid(true);\r\n\t\t\tsetUsername(newUsername);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the `email` state with `newEmail` if it's valid\r\n\t *\r\n\t * @param {string} newEmail\r\n\t */\r\n\tfunction emailHandler(newEmail) {\r\n\t\tif (\r\n\t\t\tnewEmail.match(emailRegExp) != null\r\n\t\t) {\r\n\t\t\tsetEmail(newEmail);\r\n\t\t} else {\r\n\t\t\tsetEmail(\"\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the `password` state with `newPassword`\r\n\t *\r\n\t * @param {string} newPassword\r\n\t */\r\n\tfunction passwordHandler(newPassword) {\r\n\t\tsetPasword(newPassword);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Submits the sign up & login form with the user\r\n\t */\r\n    async function onSubmitHandler() {\r\n        if (toLogin && (username.length <= 0 || password <= 0)) {\r\n\t\t\tsetErrorMsg(\"Please fill all the fields/ enter corretly.\");\r\n            setFormValid(false);\r\n        }\r\n\t\telse if (!toLogin && (username.length <= 0 || email.length <=0 || password <= 0)) {\r\n\t\t\tsetErrorMsg(\"Please fill all the fields/ enter corretly.\");\r\n            setFormValid(false);\r\n\t\t}\r\n\t\telse {\r\n            setFormValid(true);\r\n\t\t\tlet method = \"post\";\r\n\t\t\tlet path = \"signup/\";\r\n\t\t\tif (toLogin) {\r\n\t\t\t\tmethod = \"put\";\r\n\t\t\t\tpath = \"login/\";\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlet response = await axios(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmethod: method,\r\n\t\t\t\t\t\theaders: {\"X-CSRFToken\": authCtx.token, \"credentials\": \"include\"},\r\n\t\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\t\turl: `${BackEndIP}/api/${path}`,\r\n\t\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\t\temail: email,\r\n\t\t\t\t\t\t\tpassword: password\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\tlet content = await response.data;\r\n\t\t\t\tif (content.signUpSuccess) {\r\n\t\t\t\t\taccCtx.setLoginStatus(true);\r\n\t\t\t\t\taccCtx.setUsername(username);\r\n\t\t\t\t\taccCtx.setEmail(email);\r\n\t\t\t\t\tnavigation.navigate(\"Home\");\r\n\t\t\t\t}\r\n\t\t\t\telse if (content.loginSuccess) {\r\n\t\t\t\t\taccCtx.setLoginStatus(true);\r\n\t\t\t\t\taccCtx.setUsername(content.user.username);\r\n\t\t\t\t\taccCtx.setEmail(content.user.email);\r\n\t\t\t\t\tnavigation.navigate(\"Home\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetErrorMsg(error.response.data.message);\r\n\t\t\t\tsetFormValid(false)\r\n\t\t\t}\r\n        }\r\n    }\r\n\r\n\tfunction SubmitButton() {\r\n\t\treturn (\r\n\t\t\t<Pressable style={FormStyle.submitButton} onPress={onSubmitHandler}>\r\n\t\t\t\t<Text style={{fontWeight: \"bold\",}}>{toLogin ? \"Login\" : \"Sign Up\"}</Text>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={{ ...styles.pageContainer, alignItems: \"center\"}}>\r\n\t\t\t<UserEmailForms\r\n\t\t\t\ttoLogin={toLogin}\r\n\t\t\t\tusernameHandler={usernameHandler}\r\n\t\t\t\temailHandler={emailHandler}\r\n\t\t\t\tcontainerStyle={fieldWidth}\r\n\t\t\t\tlabelStyle={FormStyle.formLabel}\r\n\t\t\t\tinputStyle={{...FormStyle.formInput, borderColor: formValid ? \"black\" : \"red\"}}\r\n\t\t\t/>\r\n\t\t\t<FormField\r\n\t\t\t\tlabel={\"Password:\"}\r\n\t\t\t\tplaceholder={\"Please enter password:\"}\r\n\t\t\t\tisPassword={true}\r\n\t\t\t\tonChangeTextHandler={passwordHandler}\r\n                containerStyle={fieldWidth}\r\n                labelStyle={FormStyle.formLabel}\r\n                inputStyle={{...FormStyle.formInput, borderColor: formValid ? \"black\" : \"red\"}}\r\n\t\t\t/>\r\n\t\t\t<SubmitButton />\r\n\r\n\t\t\t<TextError\r\n\t\t\t\thasError={!formValid}\r\n\t\t\t\tstyle={styles.errorMsg}\r\n\t\t\t\tmessage={errorMsg}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\n","import {\r\n\tPressable,\r\n\tText,\r\n\tTextInput,\r\n\tuseWindowDimensions,\r\n\tView,\r\n} from \"react-native\";\r\n\r\n/**\r\n * Renders a form with a single input text with submit button\r\n *\r\n * @param {{\r\n *      containerStyle: *,\r\n *      label: string,\r\n *      labelValueHidden: boolean,\r\n *      labelValue?: string,\r\n *      submitText: string,\r\n *      labelStyle: *,\r\n *      labelValueStyle?: *,\r\n *      inputPromptStyle: *,\r\n *      placeholder: string,\r\n *      onChangeText: (text: string) => void,\r\n *      submitHandler: () => void,\r\n *      submitStyle: *\r\n * }} props\r\n * @returns Form with 1 input text and a button\r\n */\r\nexport default function IndiviudalForm(props) {\r\n\tfunction DisplayValue() {\r\n\t\tif (!props.labelValueHidden) {\r\n\t\t\treturn (\r\n\t\t\t\t<Text style={props.labelValueStyle}>{props.labelValue}</Text>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <Text />;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={props.containerStyle}>\r\n\t\t\t<Text style={props.labelStyle}>{props.label}</Text>\r\n\t\t\t<DisplayValue />\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tflexDirection:\r\n\t\t\t\t\t\tuseWindowDimensions().width < 700 ? \"column\" : \"row\",\r\n\t\t\t\t\tjustifyContent: \"center\",\r\n                    width: \"200%\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={props.inputPromptStyle}\r\n\t\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\t\tonChangeText={props.onChangeText}\r\n\t\t\t\t/>\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={props.submitStyle}\r\n\t\t\t\t\tonPress={props.submitHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text>{props.submitText}</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const profileStyles = StyleSheet.create({\r\n\tuserField: {\r\n\t\ttextAlign: \"center\",\r\n\t\tfontSize: 25,\r\n\t},\r\n\r\n\tsubmitButton: {\r\n\t\tbackgroundColor: \"#ff9100\",\r\n\t\tfontWeight: \"bold\",\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\tborderRadius: 15,\r\n\t\tbackgroundColor: \"#fd5d00\",\r\n        width: 150\r\n\t},\r\n});\r\n","import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Text, TextInput, useWindowDimensions, View } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport IndiviudalForm from \"../../components/IndividualForm/IndividualForm\";\r\nimport AccountCtx from \"../../context/account\";\r\nimport CsrfCtx from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport { FormStyle } from \"../Form/FormStyles\";\r\nimport { profileStyles } from \"./ProfileStyles\";\r\n\r\nconst emailRegExp = /^([a-zA-Z0-9]+\\.?[a-zA-Z0-9]*)@[a-zA-Z0-9^\\.]+\\.([a-zA-Z]+\\.?[a-zA-Z]*)$/\r\n\r\nexport default function Profile({route, navigation }) {\r\n\r\n    const authCtx = useContext(CsrfCtx);\r\n    const accCtx = useContext(AccountCtx);\r\n\r\n    const [newUsername, setNewUserName] = useState(\"\");\r\n    const [newEmail, setNewEmail] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [mount, setMount] = useState(true);\r\n\r\n    // Calls when `Form` component is mounted\r\n    useEffect(() => {accCtx.checkCred(authCtx, BACKEND)}, [mount]);\r\n\r\n    /**\r\n     * Sets the new username\r\n     * \r\n     * @param {string} usernameTxt \r\n     */\r\n    function updateUsernameHandler(usernameTxt) {\r\n        setNewUserName(usernameTxt);\r\n    }\r\n\r\n    /**\r\n     * Sets the new email\r\n     * \r\n     * @param {string} emailTxt \r\n     */\r\n    function updateEmailHander(emailTxt) {\r\n        if (emailTxt.match(emailRegExp) != null) {\r\n            setNewEmail(emailTxt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets then new password\r\n     * \r\n     * @param {string} passwordTxt \r\n     */\r\n    function updatePaswordHandler(passwordTxt) {\r\n        setNewPassword(passwordTxt);\r\n    }\r\n\t\r\n    /**\r\n     * Submits the updated username\r\n     */\r\n    async function submitUsername() {\r\n        try {\r\n            await axios.put(BACKEND, {username: newUsername})\r\n            accCtx.setUsername(newUsername)\r\n        } catch (error) {\r\n            console.log(`error status: ${error.response.status}`)\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Submits the updated email\r\n     */\r\n    async function submitEmail() {\r\n        try {\r\n            await axios.put(BACKEND, {email: newEmail})\r\n            accCtx.setEmail(newEmail)\r\n        } catch (error) {\r\n            console.log(`error status: ${error.response.status}`)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Submits the updated password\r\n     */\r\n    async function submitPassword() {\r\n        try {\r\n            let response = await axios.put(BACKEND, {password: newPassword})\r\n            let content = await response.data\r\n            \r\n            if (content.successful) {\r\n                console.log(\"Password Updated\")\r\n            } else {\r\n                console.lo(\"Password not updated\")\r\n            }\r\n        } catch (error) {\r\n            console.log(`error status: ${error.response.status}`)\r\n        }\r\n    }\r\n\r\n    let customFormInput = {\r\n        width: useWindowDimensions().width < 700 ? \"70%\" : \"30%\",\r\n    };\r\n\r\n    return (\r\n        <View style={{...styles.pageContainer, alignItems: \"center\"}}>\r\n            <IndiviudalForm\r\n                containerStyle={{alignItems: \"center\"}}\r\n                label=\"Username:\"\r\n                labelStyle={{...profileStyles.userField, fontWeight: \"bold\"}}\r\n                labelValueHidden={false}\r\n                labelValue={accCtx.username}\r\n                labelValueStyle={profileStyles.userField}\r\n                placeholder=\"Please enter new username\"\r\n                onChangeText={updateUsernameHandler}\r\n                inputPromptStyle={{...FormStyle.formInput, ...customFormInput}}\r\n                submitText=\"Update Username\"\r\n                submitHandler={submitUsername}\r\n                submitStyle={profileStyles.submitButton}\r\n            />\r\n            <IndiviudalForm\r\n                containerStyle={{alignItems: \"center\"}}\r\n                label=\"Email:\"\r\n                labelStyle={{...profileStyles.userField, fontWeight: \"bold\"}}\r\n                labelValueHidden={false}\r\n                labelValue={accCtx.email}\r\n                labelValueStyle={profileStyles.userField}\r\n                placeholder=\"Please enter new email\"\r\n                onChangeText={updateEmailHander}\r\n                inputPromptStyle={{...FormStyle.formInput, ...customFormInput}}\r\n                submitText=\"Update Email\"\r\n                submitHandler={submitEmail}\r\n                submitStyle={profileStyles.submitButton}\r\n            />\r\n            <IndiviudalForm\r\n                containerStyle={{alignItems: \"center\"}}\r\n                label=\"Password:\"\r\n                labelStyle={{...profileStyles.userField, fontWeight: \"bold\"}}\r\n                labelValueHidden={true}\r\n                placeholder=\"Please enter new Password\"\r\n                onChangeText={updatePaswordHandler}\r\n                inputPromptStyle={{...FormStyle.formInput, ...customFormInput}}\r\n                submitText=\"Update Password\"\r\n                submitHandler={submitPassword}\r\n                submitStyle={profileStyles.submitButton}\r\n            />\r\n        </View>\r\n    );\r\n}","import { View } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\n\r\nexport default function RecipeInfo() {\r\n    return (\r\n        <View style={{...styles.pageContainer}}>\r\n\r\n        </View>\r\n    );\r\n}","import { registerRootComponent } from 'expo';\n\nimport App from './src/App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { Link, NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Search from \"./pages/Search/Search\";\nimport SearchOptions from \"./pages/SearchOptions/SearchOptions\";\nimport { ContextProvider } from \"./context/Context\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport SearchButton from \"./components/Buttons/SearchButton\";\nimport Form from \"./pages/Form/Form\";\nimport Profile from \"./pages/Profile/Profile\";\nimport { styles } from \"./AppStyles\";\nimport { Text } from \"react-native\";\nimport RecipeInfo from \"./pages/RecipeInfo/RecipeInfo\";\n\n\n/**\n * Render the enter APP UI and use React navigation to\n * navigate different screens and update urls on browser\n *\n * @returns {JSX.Element} The whole app UI\n */\nexport default function App() {\n\n\tconst Stack = createNativeStackNavigator();\n\tconst Linking = {\n\t\tconfig: {\n\t\t\tscreens: {\n\t\t\t\tHome: \"Home\",\n\t\t\t\tSearch: \"Search\",\n\t\t\t\tRecipeInfo: \"RecipeInfo\",\n\t\t\t\tSignIn: \"SignUp\",\n\t\t\t\tLogin: \"Login\",\n\t\t\t\tProfile: \"Profile\"\n\t\t\t},\n\t\t},\n\t};\n\n\n\treturn (\n\t\t<ContextProvider>\n\t\t\t<NavigationContainer linking={Linking}>\n\t\t\t\t<Stack.Navigator\n\t\t\t\t\tscreenOptions={{\n\t\t\t\t\t\theaderStyle: { backgroundColor: \"#fd5d00\" },\n\t\t\t\t\t\theaderTitle: () => undefined,\n\t\t\t\t\t\theaderLeft: () => undefined,\n\t\t\t\t\t\theaderRight: () => (\n\t\t\t\t\t\t\t<NavBar>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={{ screen: \"Login\", params: {toLogin: true} }}\n\t\t\t\t\t\t\t\t\tstyle={styles.navLink}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style={styles.navText}>Login</Text>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={{ screen: \"SignUp\", params: {toLogin: false} }}\n\t\t\t\t\t\t\t\t\tstyle={styles.navLink}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t<SearchButton />\n\t\t\t\t\t\t\t</NavBar>\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\tname=\"Home\"\n\t\t\t\t\t\tcomponent={Search}\n\t\t\t\t\t/>\n\t\t\t\t\t<Stack.Group\n\t\t\t\t\t\tscreenOptions={({ route, navigation }) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\theaderLeft: () => (\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tstyle={styles.navLink}\n\t\t\t\t\t\t\t\t\t\tto={{ screen: \"Home\" }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Stack.Group\n\t\t\t\t\t\t\tscreenOptions={{\n\t\t\t\t\t\t\t\theaderRight: () => (\n\t\t\t\t\t\t\t\t\t<NavBar>\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto={{ screen: \"Login\", params: {toLogin: true} }}\n\t\t\t\t\t\t\t\t\t\t\tstyle={styles.navLink}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Text style={styles.navText}>Login</Text>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto={{ screen: \"SignUp\", params: {toLogin: false} }}\n\t\t\t\t\t\t\t\t\t\t\tstyle={styles.navLink}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t<SearchButton />\n\t\t\t\t\t\t\t\t\t</NavBar>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\t\tname=\"Search\"\n\t\t\t\t\t\t\t\tcomponent={SearchOptions}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\t\tname=\"RecipeInfo\"\n\t\t\t\t\t\t\t\tcomponent={RecipeInfo}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Stack.Group>\n\n\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\tname=\"SignUp\"\n\t\t\t\t\t\t\tcomponent={Form}\n\t\t\t\t\t\t\toptions={{headerRight: () => (\n\t\t\t\t\t\t\t\t<NavBar>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={{ screen: \"Login\", params: {toLogin: true} }}\n\t\t\t\t\t\t\t\t\t\tstyle={styles.navLink}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text style={styles.navText}>Login</Text>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<SearchButton/>\n\t\t\t\t\t\t\t\t\t</NavBar>\n\t\t\t\t\t\t\t)}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\tname=\"Login\"\n\t\t\t\t\t\t\tcomponent={Form}\n\t\t\t\t\t\t\toptions={{headerRight: () => (\n\t\t\t\t\t\t\t\t<NavBar>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={{ screen: \"SignUp\", params: {toLogin: false} }}\n\t\t\t\t\t\t\t\t\t\tstyle={styles.navLink}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<SearchButton/>\n\t\t\t\t\t\t\t\t</NavBar>\n\t\t\t\t\t\t\t)}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\tname=\"Profile\"\n\t\t\t\t\t\tcomponent={Profile}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\theaderRight: () => <SearchButton/>\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t</Stack.Group>\n\n\n\t\t\t\t</Stack.Navigator>\n\t\t\t</NavigationContainer>\n\t\t\t<StatusBar />\n\t\t</ContextProvider>\n\t);\n}\n"],"sourceRoot":""}