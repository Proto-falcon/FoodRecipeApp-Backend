{"version":3,"sources":["src/AppStyles.js","src/ipaddressesports/BackEndIP.js","src/components/NavBar/NavBarStyle.js","src/pages/Search/SearchStyle.js","src/components/Buttons/LogOutButton.js","src/components/Buttons/SearchButton.js","src/components/NavBar/NavBar.js","src/pages/Search/Search.js"],"names":["styles","StyleSheet","create","searchIcon","height","width","resizeMode","marginRight","navLink","padding","navText","color","fontSize","fontWeight","marginLeft","usernameText","marginTop","pageContainer","flex","backgroundColor","errorMsg","borderRadius","BACKEND","NavBarStyle","container","flexDirection","flexBasis","justifyContent","alignItems","navBarHeight","platformStyles","Platform","OS","maxHeight","minHeight","changeNavBarPaddingTop","SearchStyle","imgContainer","margin","listHeaderContainer","listHeader","textAlign","chosenList","LogOutButton","tokenCtx","useContext","CsrfCtx","accCtx","AccountCtx","navigation","useNavigation","response","axios","get","content","data","loggedOut","logOut","setUsername","setEmail","setCsrfToken","token","navigate","Pressable","style","onPress","Text","SearchButton","show","Link","to","screen","icon","size","NavBar","props","LoginButton","params","toLogin","SignUpButton","View","paddingTop","loggedIn","username","useWindowDimensions","routeName","isLoggedIn","route","RecipeList","lazy","WrappingItems","Search","ctx","RecipeResultsCtx","csrfCtx","useState","isMounted","NoMoreRecipes","name","recentRecipes","setRecentRecipes","ratedRecipes","setRatedRecipes","recommendRecipes","setRecommendRecipes","results","recipes","setRecipes","recipeListName","setRecipeListName","buttons","setButtons","recipeLists","type","list","undefined","getRecipeResults","apiEndPoint","setData","defaultRecipes","length","error","useEffect","setIsLoading","isLoading","checkCred","moreRecipesLink","navBarPadding","fallback","items","renderItems","item","index","title","forEach","recipeList","canLoad","addRecipes","recipeLink"],"mappings":"yIAEaA,E,KAASC,QAAWC,OAAO,CACvCC,WAAY,CACXC,OAAQ,GACRC,MAAO,GACPC,WAAY,UACZC,YAAa,IAGdC,QAAS,CACRC,QAAS,GAGVC,QAAS,CACRC,MAAO,QACPC,SAAU,GACVC,WAAY,MACZC,WAAY,IAGbC,aAAc,CACbJ,MAAO,QACPC,SAAU,GACVC,WAAY,OACZC,WAAY,GACZE,UAAW,GAGZC,cAAe,CACdC,KAAM,EACNC,gBAAiB,WAGlBC,SAAU,CACTT,MAAO,QACPQ,gBAAiB,MACjBV,QAAS,GACTI,WAAY,OACZD,SAAU,GACVS,aAAc,O,iCCxChB,OAOeC,UALF,I,mPCAAC,E,KAActB,QAAWC,OAAO,CAC5CsB,UAAW,CACVL,gBAAiB,UACjBM,cAAe,SACfC,UAAW,GACXjB,QAAS,GACTkB,eAAgB,SAChBC,WAAY,gBAIDC,EAAe,IAEfC,EAAiC,QAAhBC,UAASC,GAAe,CACrDC,UAAWJ,EAAcK,UAAUL,GAChC,GAQG,SAASM,IACZ,MAAuB,QAAhBJ,UAASC,GAAe,GAAK,K,wFCxB3BI,E,KAAcnC,QAAWC,OAClC,CACIsB,UAAW,CACPI,WAAY,UAGhBS,aAAc,CACVC,OAAQ,GAGZC,oBAAqB,CACjBlB,aAAc,IAGlBmB,WAAY,CACRnC,MAAO,IACPO,SAAU,GACVC,WAAY,OACZ4B,UAAW,SACXhC,QAAS,IAGbiC,WAAY,CACjBvB,gBAAiB,UACjBR,MAAO,UACPU,aAAc,O,qOCbF,SAASsB,IACvB,IAAMC,EAAWC,qBAAWC,WACtBC,EAASF,qBAAWG,cACpBC,EAAaC,0BAKS,aAW3B,OAX2B,OAA5B,YACC,IAAIC,QAAiBC,UAAMC,IAAO/B,UAAO,gBACrCgC,QAAgBH,EAASI,KAEzBD,EAAQE,YACXT,EAAOU,SACPV,EAAOW,YAAY,IACnBX,EAAOY,SAAS,IAChBf,EAASgB,aAAaN,EAAQO,OAC9BZ,EAAWa,SAAS,aAErB,sBAED,OACC,cAACC,EAAA,QAAS,CACTC,MAAO,CAAEvD,QAAS,GAClBwD,QArBiC,WAKP,gCAgBH,SAEvB,cAACC,EAAA,QAAI,CAACF,MAAOhE,SAAOU,QAAQ,wB,sBC7BhB,SAASyD,EAAa,GAEpC,OAF0C,EAAJC,KAIpC,cAACC,EAAA,QAAI,CACJC,GAAI,CAAEC,OAAQ,UACdP,MAAO5B,cAAYC,aAAa,SAEhC,cAAC,kBAAe,CAACmC,KAAM,mBAAoBC,KAAM,YAInD,E,8kBCLa,SAASC,EAAOC,GAC9B,IAAM5B,EAASF,qBAAWG,cAS1B,SAAS4B,EAAY,GACpB,OAD0B,EAAJR,KAGpB,cAACC,EAAA,QAAI,CACJC,GAAI,CAAEC,OAAQ,QAASM,OAAQ,CAAEC,SAAS,IAC1Cd,MAAOhE,SAAOQ,QAAQ,SAEtB,cAAC0D,EAAA,QAAI,CAACF,MAAOhE,SAAOU,QAAQ,0BAI9B,EAUF,SAASqE,EAAa,GACrB,OAD2B,EAAJX,KAGrB,cAACC,EAAA,QAAI,CACJC,GAAI,CAAEC,OAAQ,SAAUM,OAAQ,CAAEC,SAAS,IAC3Cd,MAAOhE,SAAOQ,QAAQ,SAEtB,cAAC0D,EAAA,QAAI,CAACF,MAAOhE,SAAOU,QAAQ,4BAI9B,EA4BF,OACC,eAACsE,EAAA,QAAI,CAAChB,MAAK,OAAMW,EAAMX,OAAK,IAAEiB,WAAY9C,oCAA6BL,kBAAgB,UACtF,cAACkD,EAAA,QAAI,UACHjC,EAAOmC,UAAY,eAAChB,EAAA,QAAI,CAACF,MAAOhE,SAAOe,aAAa,uBACzCgC,EAAOoC,cAGpB,eAACH,EAAA,QAAI,CAAChB,MAAO,CAACvC,cAAc,OAAO,UAClC,eAACuD,EAAA,QAAI,CAAChB,MAAO,CAAEvC,cAAe,MAAOpB,MAAmC,GAA5B+E,oBAAsB/E,OAAW,UACvD,SAApBsE,EAAMU,WACN,cAAChB,EAAA,QAAI,CACJL,MAAOhE,SAAOQ,QACd8D,GAAI,CAAEC,OAAQ,QAAS,SAEvB,cAACL,EAAA,QAAI,CAACF,MAAOhE,SAAOU,QAAQ,oBAG7BqC,EAAOmC,UAAgC,YAApBP,EAAMU,WAC1B,cAAChB,EAAA,QAAI,CACJL,MAAOhE,SAAOQ,QACd8D,GAAI,CAAEC,OAAQ,WAAY,SAE1B,cAACL,EAAA,QAAI,CAACF,MAAOhE,SAAOU,QAAQ,0BAI9B,eAACsE,EAAA,QAAI,CAAChB,MAAO,CAAEvC,cAAe,MAAOE,eAAgB,WAAYtB,MAAkC,IAA5B+E,oBAAsB/E,OAAY,UACxG,eAxCJ,SAAqBsE,GACpB,OAAKA,EAAMW,WAQH,cAAC3C,EAAY,IANnB,qCACC,cAACiC,EAAW,CAACR,KAAsB,UAAhBO,EAAMY,QACzB,cAACR,EAAY,CAACX,KAAsB,WAAhBO,EAAMY,aAmCd,CAACD,WAAYvC,EAAOmC,SAAUK,MAAOZ,EAAMU,YACvD,cAAClB,EAAY,CAACC,KAA0B,WAApBO,EAAMU,uB,01BCxG/B,IAAMG,EAAaC,gBAAK,kBAAM,kCACxBC,EAAgBD,gBAAK,kBAAM,iCAQlB,SAASE,EAAO,GAAwB,IAAtBJ,EAAK,EAALA,MAC1BK,GAD2C,EAAV3C,WAC3BJ,qBAAWgD,qBACjBC,EAAUjD,qBAAWC,WACrBC,EAASF,qBAAWG,cAE1B,EAAkC+C,oBAAS,GAAK,WAAzCC,EAAS,KAEhB,GAF8B,KAEYD,mBAAS,CAAC,EAAD,KAAKE,iBAAa,IAAEC,KAAM,4BAAyB,WAA/FC,EAAa,KAAEC,EAAgB,KACtC,EAAwCL,mBAAS,CAAC,EAAD,KAAKE,iBAAa,IAAEC,KAAM,2BAAyB,WAA7FG,EAAY,KAAEC,EAAe,KACpC,EAAgDP,mBAAS,CAAC,EAAD,KAAKE,iBAAa,IAAEC,KAAM,2BAAyB,WAArGK,EAAgB,KAAEC,EAAmB,KAE5C,EAA8BT,mBAASH,EAAIa,SAAQ,WAA5CC,EAAO,KAAEC,EAAU,KAC1B,EAA4CZ,mBAAS,eAAc,WAA5Da,EAAc,KAAEC,EAAiB,KACxC,EAA8Bd,mBAC7B,CACC,mBAED,WAJMe,EAAO,KAAEC,EAAU,KAMpBC,GAAc,CACnB,CAACC,KAAM,iBAAkBC,UAAMC,GAC/B,CAACF,KAAM,cAAeC,KAAMX,GAC5B,CAACU,KAAM,cAAeC,KAAMf,GAC5B,CAACc,KAAM,aAAcC,KAAMb,IA6CI,SAUjBe,GAAiB,EAAD,mDAW9B,OAX8B,QAA/B,UAAgCC,EAAaC,EAASC,GACrD,IACC,IAAIpE,QAAiBC,UAAMC,IAAO/B,UAAO,QAAQ+F,GAC7C/D,QAAgBH,EAASI,KAEzBD,EAAiB,QAAEkE,QAAU,EAChCF,EAAQC,GAERD,EAAQhE,EAAiB,SAEzB,MAAOmE,SACT,sBA/DDC,qBAAU,kBAAM9B,EAAI+B,cAAa,KAAQ,CAAC/B,EAAIgC,YAG9CF,qBAAU,WACT3E,EAAO8E,UAAU/B,EAASxE,WAEtBsE,EAAIgC,YACPjB,EAAWf,EAAIa,SACfI,EAAkB,qBAGjB,CAACb,EAAWJ,EAAIgC,UAAWrC,EAAMW,OAGpCwB,qBAAU,WACTf,EAAWf,EAAIa,WACb,CAACb,EAAIkC,kBAIRJ,qBAAU,WACL3E,EAAOmC,UACVkC,GAAiB,oBAAqBhB,EAAkB,CAAC,EAAD,KAAKH,iBAAa,IAAEC,KAAM,2BAClFkB,GAAiB,uBAAwBd,EAAiB,CAAC,EAAD,KAAKL,iBAAa,IAAEC,KAAM,2BACpFkB,GAAiB,aAAcZ,EAAqB,CAAC,EAAD,KAAKP,iBAAa,IAAEC,KAAM,2BAE9ES,EAAWJ,GACXM,EAAkB,eAClBE,EACC,CACC,iBACA,cACA,cACA,iBAKFJ,EAAWf,EAAIa,SACfI,EAAkB,kBAClBE,EAAW,OAEV,CAACf,EAAWjD,EAAOmC,WAiEtB,IAAI6C,GAAgB,EAMpB,MAJuB,mBAAnBnB,IACHmB,IAAkB5F,oCAIlB,eAAC,UAAI,CAAC6B,MAAOhE,SAAOiB,cAAc,UACjC,cAAC,UAAM,CACNoE,UAAWE,EAAMW,KACjBlC,MAAK,KACDzC,cAAYC,aAGjB,cAAC,WAAQ,CAACwG,SAAU,cAAC,UAAiB,CAACvD,KAAK,UAAW,SACtD,eAAC,UAAI,CACJT,MAAK,OACD5B,cAAYZ,WAAS,IACxBpB,OAAQgF,oBAAsBhF,QAAUyB,eAAekG,MACtD,UAEF,cAACrC,EAAa,CACb1B,MAAO,CAACrC,eAAgB,gBACxBsG,MAAOnB,EACPoB,YAnCL,SAAuB,GAAgB,IAAfC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAC7B,OACC,cAAC,UAAS,CAAanE,QAAS,kBA5BXoE,EA4B+BF,EA1BrDnB,GAAYsB,SAAQ,SAACC,GAChBA,EAAWtB,OAASoB,SACClB,IAApBoB,EAAWrB,KACdP,EAAWf,EAAIa,SAGfE,EAAW4B,EAAWrB,eAKzBL,EAAkBwB,GAbnB,IAAuBA,GA4BsCrE,MAAO5B,cAAYG,oBAAoB,SACjG,cAAC,UAAI,CAACyB,MAAQ4C,IAAmBuB,EAAI,OAAO/F,cAAYI,YAAeJ,cAAYM,YAAU,KACvFN,cAAYI,YAAa,SAC7B2F,KAHaC,OAmCZxC,EAAIgC,WACL,cAACpC,EAAU,CACVkB,QAASA,EACT8B,QAA4B,mBAAnB5B,EACTU,QAAS1B,EAAI6C,WACbC,WAAY9C,EAAIkC","file":"static/js/10.c23748bd.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles = StyleSheet.create({\r\n\tsearchIcon: {\r\n\t\theight: 20,\r\n\t\twidth: 20,\r\n\t\tresizeMode: \"contain\",\r\n\t\tmarginRight: 10\r\n\t},\r\n\r\n\tnavLink: {\r\n\t\tpadding: 5\r\n\t},\r\n\r\n\tnavText: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"500\",\r\n\t\tmarginLeft: 10,\r\n\t},\r\n\r\n\tusernameText: {\r\n\t\tcolor: \"black\",\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: \"bold\",\r\n\t\tmarginLeft: 10,\r\n\t\tmarginTop: 5\r\n\t},\r\n\r\n\tpageContainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#ffffff\"\r\n\t},\r\n\r\n\terrorMsg: {\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"red\",\r\n\t\tpadding: 10,\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 20,\r\n\t\tborderRadius: 20,\r\n\t},\r\n});","const BACKENDLOCAL = \"http://localhost:8000\";\r\nconst BACKENDIPHOME = \"http://192.168.0.30:8000\";\r\nlet domain = \"\";\r\nif (__DEV__) {\r\n\tdomain = BACKENDIPHOME;\r\n}\r\nconst BACKEND = domain;\r\nexport default BACKEND;","import { Platform, StyleSheet } from \"react-native\";\r\n\r\nexport const NavBarStyle = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: \"#fd5d00\",\r\n\t\tflexDirection: \"column\",\r\n\t\tflexBasis: 75,\r\n\t\tpadding: 10,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"flex-start\"\r\n\t},\r\n});\r\n\r\nexport const navBarHeight = 100;\r\n\r\nexport const platformStyles = Platform.OS !== \"web\" ? {\r\n\tmaxHeight: navBarHeight, minHeight:navBarHeight\r\n} : {};\r\n\r\n/**\r\n * Changes the size of the top padding depending on whether it's on \r\n * `web` or `android`.\r\n * @returns Padding Top Size\r\n * \r\n */\r\nexport function changeNavBarPaddingTop() {\r\n    return Platform.OS !== \"web\" ? 40 : 10\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const SearchStyle = StyleSheet.create(\r\n    {\r\n        container: {\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        imgContainer: {\r\n            margin: 7\r\n        },\r\n\r\n        listHeaderContainer: {\r\n            borderRadius: 10\r\n        },\r\n\r\n        listHeader: {\r\n            width: 165,\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            padding: 10\r\n        },\r\n\r\n        chosenList: {\r\n\t\t\tbackgroundColor: \"#0098ff\",\r\n\t\t\tcolor: \"#ffffff\",\r\n\t\t\tborderRadius: 10\r\n\t\t}\r\n    });","import { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { Pressable, Text } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\n\r\n/**\r\n * Renders the Logout Button\r\n *\r\n * @returns Logut Button\r\n */\r\nexport default function LogOutButton() {\r\n\tconst tokenCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\tconst navigation = useNavigation();\r\n\r\n\t/**\r\n\t * Logs the user out from the backend server `session`.\r\n\t */\r\n\tasync function LogOutHandler() {\r\n\t\tlet response = await axios.get(`${BACKEND}/api/logout/`);\r\n\t\tlet content = await response.data;\r\n\r\n\t\tif (content.loggedOut) {\r\n\t\t\taccCtx.logOut();\r\n\t\t\taccCtx.setUsername(\"\");\r\n\t\t\taccCtx.setEmail(\"\");\r\n\t\t\ttokenCtx.setCsrfToken(content.token);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Pressable\r\n\t\t\tstyle={{ padding: 5 }}\r\n\t\t\tonPress={LogOutHandler}\r\n\t\t>\r\n\t\t\t<Text style={styles.navText}>Sign Out</Text>\r\n\t\t</Pressable>\r\n\t);\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { SearchStyle } from \"../../pages/Search/SearchStyle\";\r\n\r\n/**\r\n * Renders the Search Button\r\n * \r\n * @param {{ show: boolean }} props\r\n * \r\n * @returns Button that links to the Search Options page\r\n */\r\nexport default function SearchButton({ show }) {\r\n\r\n\tif (show) {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\tto={{ screen: \"Search\" }}\r\n\t\t\t\tstyle={SearchStyle.imgContainer}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={\"magnifying-glass\"} size={20} />\r\n\t\t\t</Link>\r\n\t\t);\r\n\t} else {\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n}\r\n","import { Link } from \"@react-navigation/native\";\r\nimport { useContext } from \"react\";\r\nimport { Text, View, useWindowDimensions } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport LogOutButton from \"../Buttons/LogOutButton\";\r\nimport SearchButton from \"../Buttons/SearchButton\";\r\nimport { changeNavBarPaddingTop, platformStyles } from \"./NavBarStyle\";\r\n\r\n/**\r\n * Renders a NavBar\r\n *\r\n * @param {{\r\n * \t\tstyle?: any,\r\n * \t\trouteName: string,\r\n * }} props\r\n * @returns Row of buttons that facilitate in navigating the application\r\n */\r\nexport default function NavBar(props) {\r\n\tconst accCtx = useContext(AccountCtx);\r\n\t\r\n\r\n\t/**\r\n\t * Renders the login Button\r\n\t *\r\n\t * @param {{show: boolean}} props\r\n\t * @returns Login button when `show` is true, none otherwise\r\n\t */\r\n\tfunction LoginButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"Login\", params: { toLogin: true } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Login</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Sign up Button\r\n\t * \r\n\t * @param {{show: boolean}} props \r\n\t * @returns Sign up button when `show` is true, none otherwise\r\n\t */\r\n\tfunction SignUpButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"SignUp\", params: { toLogin: false } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Login & Sign up buttons when not logged or\r\n\t * Sign out button when logged in\r\n\t *\r\n\t * @param {{\r\n\t * \t\tisLoggedIn: boolean,\r\n\t * \t\troute: string\r\n\t * }} props\r\n\t * @returns {JSX.Element} Login & signup when `isLoggedIn` `true` or\r\n\t * sign out for otherwise\r\n\t */\r\n\tfunction SignInOrOut(props) {\r\n\t\tif (!props.isLoggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<LoginButton show={props.route !== \"Login\"} />\r\n\t\t\t\t\t<SignUpButton show={props.route !== \"SignUp\"} />\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <LogOutButton />;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={{...props.style, paddingTop: changeNavBarPaddingTop(), ...platformStyles}}>\r\n\t\t\t<View>\r\n\t\t\t\t{accCtx.loggedIn && <Text style={styles.usernameText}>\r\n\t\t\t\t\tUsername: {accCtx.username}\r\n\t\t\t\t</Text>}\r\n\t\t\t</View>\r\n\t\t\t<View style={{flexDirection:\"row\"}}>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", width: useWindowDimensions().width*0.5}}>\r\n\t\t\t\t\t{props.routeName !== \"Home\" &&\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{accCtx.loggedIn && props.routeName !== \"Profile\" &&\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\tto={{ screen: \"Profile\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.navText}>Profile</Text>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", justifyContent: \"flex-end\", width:useWindowDimensions().width*0.48}}>\r\n\t\t\t\t\t<SignInOrOut isLoggedIn={accCtx.loggedIn} route={props.routeName} />\r\n\t\t\t\t\t<SearchButton show={props.routeName !== \"Search\"} />\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { lazy, Suspense, useContext, useEffect, useState } from \"react\";\r\nimport { ActivityIndicator, Pressable, Text, useWindowDimensions, View } from \"react-native\";\r\nimport { RecipeResultsCtx } from \"../../context/Context\";\r\nimport { SearchStyle } from \"./SearchStyle\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport { changeNavBarPaddingTop, navBarHeight, NavBarStyle } from \"../../components/NavBar/NavBarStyle\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport { NoMoreRecipes } from \"../../Constants\";\r\nimport axios from \"axios\";\r\nconst RecipeList = lazy(() => import(\"../../components/RecipeList/RecipeList\"));\r\nconst WrappingItems = lazy(() => import(\"../../components/WrappingItems/WrappingItems\"));\r\n\r\n/**\r\n * Renders the page with recipe results depending on\r\n * the options selected in Search Options page\r\n *\r\n * @returns Search Results Page\r\n */\r\nexport default function Search({ route, navigation }) {\r\n\tconst ctx = useContext(RecipeResultsCtx);\r\n\tconst csrfCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\r\n\tconst [isMounted, setIsMounted] = useState(true);\r\n\r\n\tconst [recentRecipes, setRecentRecipes] = useState([{...NoMoreRecipes, name: \"No recipes viewd Yet\"}]);\r\n\tconst [ratedRecipes, setRatedRecipes] = useState([{...NoMoreRecipes, name: \"No recipes rated Yet\"}]);\r\n\tconst [recommendRecipes, setRecommendRecipes] = useState([{...NoMoreRecipes, name: \"No recipes rated Yet\"}]);\r\n\r\n\tconst [recipes, setRecipes] = useState(ctx.results);\r\n\tconst [recipeListName, setRecipeListName] = useState(\"Recommended\");\r\n\tconst [buttons, setButtons] = useState(\r\n\t\t[\r\n\t\t\t\"Search Results\"\r\n\t\t]\r\n\t);\r\n\r\n\tconst recipeLists = [\r\n\t\t{type: \"Search Results\", list: undefined},\r\n\t\t{type: \"Recommended\", list: recommendRecipes},\r\n\t\t{type: \"Most Recent\", list: recentRecipes},\r\n\t\t{type: \"Most Rated\", list: ratedRecipes},\r\n\t];\r\n\r\n\tuseEffect(() => ctx.setIsLoading(false), [ctx.isLoading]);\r\n\r\n\t// Checks the user has logged in when the app boots up\r\n\tuseEffect(() => {\r\n\t\taccCtx.checkCred(csrfCtx, BACKEND);\r\n\r\n\t\tif (ctx.isLoading) {\r\n\t\t\tsetRecipes(ctx.results);\r\n\t\t\tsetRecipeListName(\"Search Results\");\r\n\t\t}\r\n\r\n\t}, [isMounted, ctx.isLoading, route.name]);\r\n\r\n\t// updates the search results when user does a search or \r\n\tuseEffect(() => {\r\n\t\tsetRecipes(ctx.results);\r\n\t}, [ctx.moreRecipesLink]);\r\n\r\n\t// Fetches the recipes from Server and\r\n\t// sets current recipe list to be displayed\r\n\tuseEffect(() => {\r\n\t\tif (accCtx.loggedIn) {\r\n\t\t\tgetRecipeResults(\"getRecentRecipes/\", setRecentRecipes, [{...NoMoreRecipes, name: \"No recipes viewd Yet\"}]);\r\n\t\t\tgetRecipeResults(\"getMostRatedRecipes/\", setRatedRecipes, [{...NoMoreRecipes, name: \"No recipes rated Yet\"}]);\r\n\t\t\tgetRecipeResults(\"recommend/\", setRecommendRecipes, [{...NoMoreRecipes, name: \"No recipes rated Yet\"}]);\r\n\r\n\t\t\tsetRecipes(recommendRecipes);\r\n\t\t\tsetRecipeListName(\"Recommended\");\r\n\t\t\tsetButtons(\r\n\t\t\t\t[\r\n\t\t\t\t\t\"Search Results\",\r\n\t\t\t\t\t\"Recommended\",\r\n\t\t\t\t\t\"Most Recent\",\r\n\t\t\t\t\t\"Most Rated\",\r\n\t\t\t\t]\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetRecipes(ctx.results);\r\n\t\t\tsetRecipeListName(\"Search Results\");\r\n\t\t\tsetButtons([]);\r\n\t\t}\r\n\t}, [isMounted, accCtx.loggedIn])\r\n\r\n\t/**\r\n\t * Gets an array of recipe results from backend given an api endpoint and\r\n\t * updates a state given a `React.Dispatch<React.SetStateAction<recipe[]>>`.\r\n\t * \r\n\t * @param {string} apiEndPoint \r\n\t * @param {React.Dispatch<React.SetStateAction<import(\"../../Constants\").recipe[]>>} setData \r\n\t * @param {import(\"../../Constants\").recipe[]} defaultRecipes\r\n\t */\r\n\tasync function getRecipeResults(apiEndPoint, setData, defaultRecipes) {\r\n\t\ttry {\r\n\t\t\tlet response = await axios.get(`${BACKEND}/api/${apiEndPoint}`);\r\n\t\t\tlet content = await response.data;\r\n\r\n\t\t\tif (content[\"results\"].length <= 0) {\r\n\t\t\t\tsetData(defaultRecipes);\r\n\t\t\t} else {\r\n\t\t\t\tsetData(content[\"results\"]);\r\n\t\t\t}\r\n\t\t} catch (error) {}\r\n\t}\r\n\r\n\t/**\r\n\t * Instantly changes to different list of recipes.\r\n\t * \r\n\t * @param {string} title \r\n\t */\r\n\tfunction changeRecipes(title) {\r\n\r\n\t\trecipeLists.forEach((recipeList) => {\r\n\t\t\tif (recipeList.type === title) {\r\n\t\t\t\tif (recipeList.list === undefined) {\r\n\t\t\t\t\tsetRecipes(ctx.results);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetRecipes(recipeList.list)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tsetRecipeListName(title);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Render button to change recipe lists\r\n\t * \r\n\t * @param {{\r\n\t * \t\titem : string,\r\n\t * \t\tindex : number\r\n\t * }} param\r\n\t * @returns Button to change recipe list\r\n\t */\r\n\tfunction renderButtons({item, index}) {\r\n\t\treturn (\r\n\t\t\t<Pressable key={index} onPress={() => changeRecipes(item)} style={SearchStyle.listHeaderContainer}>\r\n\t\t\t\t<Text style={ recipeListName === item ? {...SearchStyle.listHeader, ...SearchStyle.chosenList }\r\n\t\t\t\t: {...SearchStyle.listHeader }}>\r\n\t\t\t\t\t{item}\r\n\t\t\t\t</Text>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\tlet navBarPadding = 0;\r\n\r\n\tif (recipeListName === \"Search Results\") {\r\n\t\tnavBarPadding = - changeNavBarPaddingTop();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={styles.pageContainer}>\r\n\t\t\t<NavBar\r\n\t\t\t\trouteName={route.name}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...NavBarStyle.container,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Suspense fallback={<ActivityIndicator size=\"large\" />}>\r\n\t\t\t\t<View\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t...SearchStyle.container,\r\n\t\t\t\t\t\theight: useWindowDimensions().height - (navBarHeight + navBarPadding)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<WrappingItems\r\n\t\t\t\t\t\tstyle={{justifyContent: \"space-evenly\"}}\r\n\t\t\t\t\t\titems={buttons}\r\n\t\t\t\t\t\trenderItems={renderButtons}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{!ctx.isLoading && (\r\n\t\t\t\t\t\t<RecipeList\r\n\t\t\t\t\t\t\trecipes={recipes}\r\n\t\t\t\t\t\t\tcanLoad={recipeListName === \"Search Results\"}\r\n\t\t\t\t\t\t\tsetData={ctx.addRecipes}\r\n\t\t\t\t\t\t\trecipeLink={ctx.moreRecipesLink}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</View>\r\n\t\t\t</Suspense>\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"sourceRoot":""}