{"version":3,"sources":["src/AppStyles.js","src/ipaddressesports/BackEndIP.js","src/components/NavBar/NavBarStyle.js","src/pages/Search/SearchStyle.js","src/components/Buttons/LogOutButton.js","src/components/Buttons/SearchButton.js","src/components/NavBar/NavBar.js","src/pages/SearchOptions/SearchOptionsStyle.js","src/RecipeMetaOptions.js","src/pages/SearchOptions/SearchOptions.js"],"names":["styles","StyleSheet","create","searchIcon","height","width","resizeMode","marginRight","navLink","padding","navText","color","fontSize","fontWeight","marginLeft","usernameText","marginTop","pageContainer","flex","backgroundColor","errorMsg","borderRadius","BACKEND","NavBarStyle","container","flexDirection","flexBasis","justifyContent","alignItems","navBarHeight","platformStyles","Platform","OS","maxHeight","minHeight","changeNavBarPaddingTop","SearchStyle","imgContainer","margin","listHeaderContainer","listHeader","textAlign","chosenList","LogOutButton","tokenCtx","useContext","CsrfCtx","accCtx","AccountCtx","navigation","useNavigation","response","axios","get","content","data","loggedOut","logOut","setUsername","setEmail","setCsrfToken","token","navigate","Pressable","style","onPress","Text","SearchButton","show","Link","to","screen","icon","size","NavBar","props","LoginButton","params","toLogin","SignUpButton","View","paddingTop","loggedIn","username","useWindowDimensions","routeName","isLoggedIn","route","SearchOptionsStyle","textButtonContainer","input","paddingBottom","borderColor","borderWidth","exclude","paddingLeft","marginBottom","excludedHeader","excludeList","excluded","borderTopWidth","borderLeftWidth","borderRightWidth","optionsContainer","flexWrap","minWidth","optionTypesContainer","optionTypes","text","optionTypeHeader","selectedMetaText","selectedOptionsContainer","diet","health","mealType","dishType","cuisineType","RecipeOption","lazy","TextError","SelectedOptions","WrappingItems","SearchOptions","ctx","RecipeResultsCtx","authCtx","useState","options","setOptions","num","i","push","optionType","setOptionType","inputIg","setinputIg","inputExclude","setInputExclude","setExclude","hasError","setHasError","setErrorMsg","mount","isOptionsEmpty","emptyCount","option","length","fetchFood","query","forEach","item","index","trim","method","url","responseType","getRecipes","results","setAddRecipesLink","addRecipesLink","setIsLoading","error","addExcludeHandler","preveState","useEffect","checkCred","name","fallback","ActivityIndicator","TextInput","onChangeText","igs","placeholder","onSubmitEditing","value","message","borderBottomWidth","items","renderItems","newState","element","removeExlcusions","FlatList","renderItem","type","RecipeMetaOptions","selectedData","updateData","optionsArray"],"mappings":"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kB,CACjBlG,SAAU,IAGXmG,yBAA0B,CACzB3G,OAlGa,MAmGb8B,UAnGa,MAoGbD,UApGa,MAqGb4D,YAAa,EACbG,aAAc,M,0RCED,GACdgB,KA1Ga,CACb,WACA,aACA,eACA,WACA,UACA,cAqGAC,OAnGe,CACf,mBACA,eACA,cACA,kBACA,aACA,OACA,WACA,YACA,cACA,cACA,oBACA,gBACA,kBACA,SACA,gBACA,YACA,cACA,gBACA,eACA,eACA,eACA,QACA,cACA,cACA,YACA,gBACA,cACA,iBACA,WACA,kBACA,eACA,gBACA,QACA,aACA,cAiEAC,SA9DiB,CACjB,YACA,SACA,eACA,QACA,WA0DGC,SAvDc,CACjB,mBACA,uBACA,QACA,UACA,wBACA,WACA,SACA,MACA,wBACA,cACA,UACA,QACA,SACA,iBACA,QACA,QACA,WACA,QACA,aACA,UACA,YACA,OACA,oBACA,WAgCGC,YA7BiB,CACpB,WACA,QACA,UACA,YACA,iBACA,iBACA,UACA,SACA,QACA,SACA,UACA,WACA,SACA,SACA,gBACA,UACA,iBACA,SACA,iBACA,kBACA,U,omBChFD,IAAMC,EAAeC,gBAAK,kBACzB,kCAEKC,EAAYD,gBAAK,kBAAM,iCACvBE,EAAkBF,gBAAK,kBAC5B,kCAEKG,EAAgBH,gBAAK,kBAC1B,iCASc,SAASI,EAAc,GAAwB,IAAtBnC,EAAK,EAALA,MAAOtC,EAAU,EAAVA,WACxC0E,EAAM9E,qBAAW+E,oBACjB7E,EAASF,qBAAWG,cACpB6E,EAAUhF,qBAAWC,WAG3B,EAA0BgF,mBAAS1C,oBAAsB/E,OAAM,WAAxDA,EAAK,KAGZ,GAHsB,KAGQyH,mBAAS,CACtCd,KAAM,GACNC,OAAQ,GACRG,YAAa,GACbF,SAAU,GACVC,SAAU,MACT,WANKY,EAAO,KAAEC,EAAU,KAO1B,EAAqCF,oBAAS,WAC7C,IAAIG,EAAM,GACV,IAAK,IAAMC,KAAKH,EACfE,EAAIE,KAAKD,GAEV,OAAOD,KACN,WANKtB,EAAW,KAOlB,GAPiC,KAOGmB,mBAASnB,EAAY,KAAG,WAArDyB,EAA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","file":"static/js/9.a5a3d7b3.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles = StyleSheet.create({\r\n\tsearchIcon: {\r\n\t\theight: 20,\r\n\t\twidth: 20,\r\n\t\tresizeMode: \"contain\",\r\n\t\tmarginRight: 10\r\n\t},\r\n\r\n\tnavLink: {\r\n\t\tpadding: 5\r\n\t},\r\n\r\n\tnavText: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"500\",\r\n\t\tmarginLeft: 10,\r\n\t},\r\n\r\n\tusernameText: {\r\n\t\tcolor: \"black\",\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: \"bold\",\r\n\t\tmarginLeft: 10,\r\n\t\tmarginTop: 5\r\n\t},\r\n\r\n\tpageContainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#ffffff\"\r\n\t},\r\n\r\n\terrorMsg: {\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"red\",\r\n\t\tpadding: 10,\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 20,\r\n\t\tborderRadius: 20,\r\n\t},\r\n});","const BACKENDLOCAL = \"http://localhost:8000\";\r\nconst BACKENDIPHOME = \"http://192.168.0.30:8000\";\r\nlet domain = \"\";\r\nif (__DEV__) {\r\n\tdomain = BACKENDIPHOME;\r\n}\r\nconst BACKEND = domain;\r\nexport default BACKEND;","import { Platform, StyleSheet } from \"react-native\";\r\n\r\nexport const NavBarStyle = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: \"#fd5d00\",\r\n\t\tflexDirection: \"column\",\r\n\t\tflexBasis: 75,\r\n\t\tpadding: 10,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"flex-start\"\r\n\t},\r\n});\r\n\r\nexport const navBarHeight = 100;\r\n\r\nexport const platformStyles = Platform.OS !== \"web\" ? {\r\n\tmaxHeight: navBarHeight, minHeight:navBarHeight\r\n} : {};\r\n\r\n/**\r\n * Changes the size of the top padding depending on whether it's on \r\n * `web` or `android`.\r\n * @returns Padding Top Size\r\n * \r\n */\r\nexport function changeNavBarPaddingTop() {\r\n    return Platform.OS !== \"web\" ? 40 : 10\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const SearchStyle = StyleSheet.create(\r\n    {\r\n        container: {\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        imgContainer: {\r\n            margin: 7\r\n        },\r\n\r\n        listHeaderContainer: {\r\n            borderRadius: 10\r\n        },\r\n\r\n        listHeader: {\r\n            width: 160,\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            padding: 10\r\n        },\r\n\r\n        chosenList: {\r\n\t\t\tbackgroundColor: \"#0098ff\",\r\n\t\t\tcolor: \"#ffffff\",\r\n\t\t\tborderRadius: 10\r\n\t\t}\r\n    });","import { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { Pressable, Text } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\n\r\n/**\r\n * Renders the Logout Button\r\n *\r\n * @returns Logut Button\r\n */\r\nexport default function LogOutButton() {\r\n\tconst tokenCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\tconst navigation = useNavigation();\r\n\r\n\t/**\r\n\t * Logs the user out from the backend server `session`.\r\n\t */\r\n\tasync function LogOutHandler() {\r\n\t\tlet response = await axios.get(`${BACKEND}/api/logout/`);\r\n\t\tlet content = await response.data;\r\n\r\n\t\tif (content.loggedOut) {\r\n\t\t\taccCtx.logOut();\r\n\t\t\taccCtx.setUsername(\"\");\r\n\t\t\taccCtx.setEmail(\"\");\r\n\t\t\ttokenCtx.setCsrfToken(content.token);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Pressable\r\n\t\t\tstyle={{ padding: 5 }}\r\n\t\t\tonPress={LogOutHandler}\r\n\t\t>\r\n\t\t\t<Text style={styles.navText}>Sign Out</Text>\r\n\t\t</Pressable>\r\n\t);\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { SearchStyle } from \"../../pages/Search/SearchStyle\";\r\n\r\n/**\r\n * Renders the Search Button\r\n * \r\n * @param {{ show: boolean }} props\r\n * \r\n * @returns Button that links to the Search Options page\r\n */\r\nexport default function SearchButton({ show }) {\r\n\r\n\tif (show) {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\tto={{ screen: \"Search\" }}\r\n\t\t\t\tstyle={SearchStyle.imgContainer}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={\"magnifying-glass\"} size={20} />\r\n\t\t\t</Link>\r\n\t\t);\r\n\t} else {\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n}\r\n","import { Link } from \"@react-navigation/native\";\r\nimport { useContext } from \"react\";\r\nimport { Text, View, useWindowDimensions } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport LogOutButton from \"../Buttons/LogOutButton\";\r\nimport SearchButton from \"../Buttons/SearchButton\";\r\nimport { changeNavBarPaddingTop, platformStyles } from \"./NavBarStyle\";\r\n\r\n/**\r\n * Renders a NavBar\r\n *\r\n * @param {{\r\n * \t\tstyle?: any,\r\n * \t\trouteName: string,\r\n * }} props\r\n * @returns Row of buttons that facilitate in navigating the application\r\n */\r\nexport default function NavBar(props) {\r\n\tconst accCtx = useContext(AccountCtx);\r\n\t\r\n\r\n\t/**\r\n\t * Renders the login Button\r\n\t *\r\n\t * @param {{show: boolean}} props\r\n\t * @returns Login button when `show` is true, none otherwise\r\n\t */\r\n\tfunction LoginButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"Login\", params: { toLogin: true } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Login</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Sign up Button\r\n\t * \r\n\t * @param {{show: boolean}} props \r\n\t * @returns Sign up button when `show` is true, none otherwise\r\n\t */\r\n\tfunction SignUpButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"SignUp\", params: { toLogin: false } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Login & Sign up buttons when not logged or\r\n\t * Sign out button when logged in\r\n\t *\r\n\t * @param {{\r\n\t * \t\tisLoggedIn: boolean,\r\n\t * \t\troute: string\r\n\t * }} props\r\n\t * @returns {JSX.Element} Login & signup when `isLoggedIn` `true` or\r\n\t * sign out for otherwise\r\n\t */\r\n\tfunction SignInOrOut(props) {\r\n\t\tif (!props.isLoggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<LoginButton show={props.route !== \"Login\"} />\r\n\t\t\t\t\t<SignUpButton show={props.route !== \"SignUp\"} />\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <LogOutButton />;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={{...props.style, paddingTop: changeNavBarPaddingTop(), ...platformStyles}}>\r\n\t\t\t<View>\r\n\t\t\t\t{accCtx.loggedIn && <Text style={styles.usernameText}>\r\n\t\t\t\t\tUsername: {accCtx.username}\r\n\t\t\t\t</Text>}\r\n\t\t\t</View>\r\n\t\t\t<View style={{flexDirection:\"row\"}}>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", width: useWindowDimensions().width*0.5}}>\r\n\t\t\t\t\t{props.routeName !== \"Home\" &&\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{accCtx.loggedIn && props.routeName !== \"Profile\" &&\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\tto={{ screen: \"Profile\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.navText}>Profile</Text>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", justifyContent: \"flex-end\", width:useWindowDimensions().width*0.48}}>\r\n\t\t\t\t\t<SignInOrOut isLoggedIn={accCtx.loggedIn} route={props.routeName} />\r\n\t\t\t\t\t<SearchButton show={props.routeName !== \"Search\"} />\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\nconst HEIGHT = \"80%\";\r\nexport const SearchOptionsStyle = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\talignItems: \"center\",\r\n\t\tpaddingTop: 10,\r\n\t\tmarginLeft: \"auto\",\r\n\t\tmarginRight: \"auto\",\r\n\t},\r\n\r\n\ttextButtonContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tflexBasis: 50,\r\n\t\tmaxHeight: 50,\r\n\t},\r\n\r\n\tsearchIcon: {\r\n\t\theight: 25,\r\n\t\tmarginTop: 7,\r\n\t\twidth: \"100%\",\r\n\t\tresizeMode: \"contain\",\r\n\t},\r\n\r\n\timgContainer: {\r\n\t\tflexBasis: 20,\r\n\t\theight: 30,\r\n\t\tjustifyContent: \"center\",\r\n\t\tpaddingTop: 10,\r\n\t},\r\n\r\n\tinput: {\r\n\t\theight: 40,\r\n\t\tmarginLeft: 10,\r\n\t\tpadding: 15,\r\n\t\tpaddingBottom: 10,\r\n\t\tborderColor: \"black\",\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 20,\r\n\t},\r\n\r\n\texclude: {\r\n\t\tflexDirection: \"row\",\r\n\t\tpadding: 5,\r\n\t\tpaddingLeft: 7,\r\n\t\tmarginLeft: 5,\r\n\t\tmarginTop: 5,\r\n\t\tmarginBottom: 5,\r\n\t\tbackgroundColor: \"#ff5c5c\",\r\n\t\tborderRadius: 10,\r\n\t},\r\n\r\n\texcludedHeader: {\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 20,\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\r\n\texcludeList: { paddingLeft: 5, justifyContent: \"center\" },\r\n\r\n\texcluded: {\r\n\t\twidth: \"100%\",\r\n\t\tborderTopWidth: 2,\r\n\t\tborderLeftWidth: 2,\r\n\t\tborderRightWidth: 2,\r\n\t},\r\n\r\n\toptionsContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tflexWrap: \"wrap\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\tminWidth: 400,\r\n\t\twidth: \"30%\",\r\n\t},\r\n\r\n\toptionTypesContainer: { borderWidth: 2, marginBottom: 5, height: 99 },\r\n\r\n\toptionTypes: {\r\n\t\twidth: 100,\r\n\t\tbackgroundColor: \"#ff9100\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\r\n\ttext: {\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: 5,\r\n\t},\r\n\r\n\toptionTypeHeader: {\r\n\t\tbackgroundColor: \"#ffee00\",\r\n\t\tfontWeight: \"bold\",\r\n\t},\r\n\r\n\tselectedMetaText: {\r\n\t\tfontSize: 25,\r\n\t},\r\n\r\n\tselectedOptionsContainer: {\r\n\t\theight: HEIGHT,\r\n\t\tminHeight: HEIGHT,\r\n\t\tmaxHeight: HEIGHT,\r\n\t\tborderWidth: 2,\r\n\t\tmarginBottom: 5,\r\n\t},\r\n});\r\n","const DIETS = [\r\n\t\"balanced\",\r\n\t\"high-fiber\",\r\n\t\"high-protein\",\r\n\t\"low-carb\",\r\n\t\"low-fat\",\r\n\t\"low-sodium\",\r\n];\r\nconst HEALTHS = [\r\n\t\"alcohol-cocktail\",\r\n\t\"alcohol-free\",\r\n\t\"celery-free\",\r\n\t\"crustacean-free\",\r\n\t\"dairy-free\",\r\n\t\"DASH\",\r\n\t\"egg-free\",\r\n\t\"fish-free\",\r\n\t\"fodmap-free\",\r\n\t\"gluten-free\",\r\n\t\"immuno-supportive\",\r\n\t\"keto-friendly\",\r\n\t\"kidney-friendly\",\r\n\t\"kosher\",\r\n\t\"low-potassium\",\r\n\t\"low-sugar\",\r\n\t\"lupine-free\",\r\n\t\"Mediterranean\",\r\n\t\"mollusk-free\",\r\n\t\"mustard-free\",\r\n\t\"No-oil-added\",\r\n\t\"paleo\",\r\n\t\"peanut-free\",\r\n\t\"Pescatarian\",\r\n\t\"pork-free\",\r\n\t\"red-meat-free\",\r\n\t\"sesame-free\",\r\n\t\"shellfish-free\",\r\n\t\"soy-free\",\r\n\t\"sugar-conscious\",\r\n\t\"sulfite-free\",\r\n\t\"tree-nut-free\",\r\n\t\"vegan\",\r\n\t\"vegetarian\",\r\n\t\"wheat-free\",\r\n];\r\n\r\nconst MEALTYPES = [\r\n\t\"breakfast\",\r\n\t\"brunch\",\r\n\t\"lunch/dinner\",\r\n\t\"snack\",\r\n\t\"teatime\",\r\n];\r\n\r\nconst DISHTYPES = [\r\n\t\"alcohol cocktail\",\r\n\t\"biscuits and cookies\",\r\n\t\"bread\",\r\n\t\"cereals\",\r\n\t\"condiments and sauces\",\r\n\t\"desserts\",\r\n\t\"drinks\",\r\n\t\"egg\",\r\n\t\"ice cream and custard\",\r\n\t\"main course\",\r\n\t\"pancake\",\r\n\t\"pasta\",\r\n\t\"pastry\",\r\n\t\"pies and tarts\",\r\n\t\"pizza\",\r\n\t\"preps\",\r\n\t\"preserve\",\r\n\t\"salad\",\r\n\t\"sandwiches\",\r\n\t\"seafood\",\r\n\t\"side dish\",\r\n\t\"soup\",\r\n\t\"special occasions\",\r\n\t\"starter\",\r\n];\r\n\r\nconst CUISINETYPES = [\r\n\t\"american\",\r\n\t\"asian\",\r\n\t\"british\",\r\n\t\"caribbean\",\r\n\t\"central europe\",\r\n\t\"eastern europe\",\r\n\t\"chinese\",\r\n\t\"french\",\r\n\t\"greek\",\r\n\t\"indian\",\r\n\t\"italian\",\r\n\t\"japanese\",\r\n\t\"korean\",\r\n\t\"kosher\",\r\n\t\"mediterranean\",\r\n\t\"mexican\",\r\n\t\"middle eastern\",\r\n\t\"nordic\",\r\n\t\"south american\",\r\n\t\"south east asia\",\r\n\t\"world\",\r\n];\r\n\r\nexport default {\r\n\tdiet: DIETS,\r\n\thealth: HEALTHS,\r\n\tmealType: MEALTYPES,\r\n    dishType: DISHTYPES,\r\n    cuisineType: CUISINETYPES\r\n};\r\n","import axios from \"axios\";\r\nimport { lazy, Suspense, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tActivityIndicator,\r\n\tFlatList,\r\n\tPlatform,\r\n\tPressable,\r\n\tText,\r\n\tTextInput,\r\n\tuseWindowDimensions,\r\n\tView,\r\n} from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { SearchOptionsStyle } from \"./SearchOptionsStyle\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport { RecipeResultsCtx } from \"../../context/Context\";\r\nimport RecipeMetaOptions from \"../../RecipeMetaOptions\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport { NavBarStyle } from \"../../components/NavBar/NavBarStyle\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nconst RecipeOption = lazy(() =>\r\n\timport(\"../../components/RecipeOption/RecipeOption\")\r\n);\r\nconst TextError = lazy(() => import(\"../../components/TextError/TextError\"));\r\nconst SelectedOptions = lazy(() =>\r\n\timport(\"../../components/SelectedOptions/SelectedOptions\")\r\n);\r\nconst WrappingItems = lazy(() =>\r\n\timport(\"../../components/WrappingItems/WrappingItems\")\r\n);\r\n\r\n/**\r\n * Renders a page that has options to search recipes\r\n *\r\n * @param {{ navigation: * }} props\r\n * @returns Search Options Page\r\n */\r\nexport default function SearchOptions({ route, navigation }) {\r\n\tconst ctx = useContext(RecipeResultsCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\tconst authCtx = useContext(CsrfCtx);\r\n\t// const navCtx = useContext(NavigationCtx);\r\n\r\n\tconst [width, setWidth] = useState(useWindowDimensions().width);\r\n\r\n\t// collection of arrays of optional values\r\n\tconst [options, setOptions] = useState({\r\n\t\tdiet: [],\r\n\t\thealth: [],\r\n\t\tcuisineType: [],\r\n\t\tmealType: [],\r\n\t\tdishType: [],\r\n\t});\r\n\tconst [optionTypes, setNumOptions] = useState(() => {\r\n\t\tlet num = [];\r\n\t\tfor (const i in options) {\r\n\t\t\tnum.push(i);\r\n\t\t}\r\n\t\treturn num;\r\n\t});\r\n\tconst [optionType, setOptionType] = useState(optionTypes[0]);\r\n\tconst [inputIg, setinputIg] = useState(\"\"); // string of ingredients inputted by user\r\n\tconst [inputExclude, setInputExclude] = useState(\"\");\r\n\tconst [exclude, setExclude] = useState([]);\r\n\tconst [hasError, setHasError] = useState(false); // checks if the user hasn't inputted/selected ingredients\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\tconst [mount, setMount] = useState(true);\r\n\r\n\t// Calls when `Form` component is mounted\r\n\tuseEffect(() => {\r\n\t\taccCtx.checkCred(authCtx, BACKEND);\r\n\t}, [mount]);\r\n\r\n\t// Updates route\r\n\t// useEffect(() => {navCtx.updateRoute(route.name)}, [route.name]);\r\n\r\n\t/**\r\n\t * Updates the selected options\r\n\t *\r\n\t * @param {string} type\r\n\t * @param {Array<string>} optionsArray\r\n\t */\r\n\tfunction updateOptions(type, optionsArray) {\r\n\t\tsetOptions((preveState) => {\r\n\t\t\tlet newState = { ...preveState };\r\n\t\t\tnewState[type] = optionsArray;\r\n\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if all the options array are empty\r\n\t *\r\n\t * @returns true if all options are empty, false otherwise.\r\n\t */\r\n\tfunction isOptionsEmpty() {\r\n\t\tlet emptyCount = 0;\r\n\t\tfor (const option in options) {\r\n\t\t\tif (options[option].length <= 0) {\r\n\t\t\t\temptyCount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn emptyCount >= optionTypes.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Fetches recipes using the options object and inputIg\r\n\t */\r\n\tasync function fetchFood() {\r\n\t\tif (inputIg.length <= 0 && isOptionsEmpty() && exclude.length <= 0) {\r\n\t\t\tsetHasError(true);\r\n\t\t\tsetErrorMsg(\"Please enter food name/ingredients\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetHasError(false);\r\n\r\n\t\tlet query = \"\";\r\n\r\n\t\tif (!isOptionsEmpty()) {\r\n\t\t\tlet i = 0;\r\n\t\t\tfor (const option in options) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tquery.length > 0 &&\r\n\t\t\t\t\toptions[option].length > 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t}\r\n\t\t\t\toptions[option].forEach((item, index) => {\r\n\t\t\t\t\tquery += `${option}=${item}`;\r\n\t\t\t\t\tif (index < options[option].length - 1) {\r\n\t\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\ti += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (exclude.length > 0) {\r\n\t\t\tif (query.length > 0) {\r\n\t\t\t\tquery += \"&\";\r\n\t\t\t}\r\n\t\t\texclude.forEach((item, i) => {\r\n\t\t\t\tquery += `excluded=${item.trim()}`;\r\n\t\t\t\tif (i < exclude.length - 1) {\r\n\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (inputIg.trim().length > 0) {\r\n\t\t\tif (query.length > 0) {\r\n\t\t\t\tquery += \"&\";\r\n\t\t\t}\r\n\t\t\tquery += `ingredients=${inputIg.trim()}`;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlet response = await axios({\r\n\t\t\t\tmethod: \"get\",\r\n\t\t\t\turl: `${BACKEND}/api/fetchRecipes/?${query}`,\r\n\t\t\t\tresponseType: \"json\",\r\n\t\t\t});\r\n\t\t\tlet content = await response.data;\r\n\t\t\tctx.getRecipes(content.results);\r\n\t\t\tctx.setAddRecipesLink(content.addRecipesLink);\r\n\r\n\t\t\tctx.setIsLoading(true);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t} catch (error) {\r\n\t\t\tsetHasError(true);\r\n\t\t\tsetErrorMsg(\"Unable to retrieve any recipes\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the inputIg with the text entered\r\n\t * by user.\r\n\t *\r\n\t * @param {string} igs\r\n\t */\r\n\tfunction inputIngredients(igs) {\r\n\t\tsetinputIg(igs);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates `inputExclude` by the text entered by the user\r\n\t *\r\n\t * @param {string} excluded\r\n\t */\r\n\tfunction inputExcludeHandler(excluded) {\r\n\t\tsetInputExclude(excluded);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an excluded ingredient\r\n\t */\r\n\tfunction addExcludeHandler() {\r\n\t\tif (inputExclude !== \"\") {\r\n\t\t\tsetExclude((preveState) => [...preveState, inputExclude]);\r\n\t\t\tsetInputExclude(\"\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the available option.\r\n\t *\r\n\t * @param {{item: string}} param\r\n\t * @returns Button that toggles the option\r\n\t */\r\n\tfunction renderOptionTypes({ item }) {\r\n\t\treturn (\r\n\t\t\t<Pressable\r\n\t\t\t\tstyle={SearchOptionsStyle.optionTypes}\r\n\t\t\t\tonPress={() => setOptionType(item)}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{ fontWeight: \"bold\" }}>{item}</Text>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction removeExlcusions(index) {\r\n\t\tsetExclude((preveState) => {\r\n\t\t\tlet newState = [];\r\n\t\t\tpreveState.forEach((element, i) => {\r\n\t\t\t\tif (i != index) {\r\n\t\t\t\t\tnewState.push(element);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Renders an excluded ingredient that the user doesn't want to be\r\n\t * displayed in the recipe results.\r\n\t *\r\n\t * @param {{\r\n\t * \t\titem: string,\r\n\t * \t\tindex: number\r\n\t * }} param\r\n\t * @returns An excluded ingredient\r\n\t */\r\n\tfunction renderExclusions({ item, index }) {\r\n\t\treturn (\r\n\t\t\t<View\r\n\t\t\t\tkey={index}\r\n\t\t\t\tstyle={SearchOptionsStyle.exclude}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{ textAlign: \"center\" }}>{item}</Text>\r\n\t\t\t\t<Pressable onPress={() => removeExlcusions(index)}>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon={\"xmark\"}\r\n\t\t\t\t\t\tsize={20}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Pressable>\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={styles.pageContainer}>\r\n\t\t\t<NavBar\r\n\t\t\t\trouteName={route.name}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...NavBarStyle.container,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t<Suspense fallback={<ActivityIndicator size=\"large\"/>}>\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...SearchOptionsStyle.container,\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: useWindowDimensions().height\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<View style={{...SearchOptionsStyle.textButtonContainer, width: width * 0.7}}>\r\n\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\tstyle={SearchOptionsStyle.imgContainer}\r\n\t\t\t\t\t\tonPress={fetchFood}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\ticon=\"magnifying-glass\"\r\n\t\t\t\t\t\t\tsize={20}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\tSearchOptionsStyle.input,\r\n\t\t\t\t\t\t\t{ borderColor: hasError ? \"red\" : \"black\" },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonChangeText={inputIngredients}\r\n\t\t\t\t\t\tplaceholder=\"Enter recipe names/ingredients\"\r\n\t\t\t\t\t\tonSubmitEditing={fetchFood}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={{...SearchOptionsStyle.textButtonContainer, width: width * 0.7}}>\r\n\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\tonPress={addExcludeHandler}\r\n\t\t\t\t\t\tstyle={{ paddingTop: 12 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\ticon={\"ban\"}\r\n\t\t\t\t\t\t\tsize={20}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\tSearchOptionsStyle.input,\r\n\t\t\t\t\t\t\t{ borderColor: hasError ? \"red\" : \"black\" },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonChangeText={inputExcludeHandler}\r\n\t\t\t\t\t\tvalue={inputExclude}\r\n\t\t\t\t\t\tplaceholder=\"Enter ingredients to exclude\"\r\n\t\t\t\t\t\tonSubmitEditing={addExcludeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<TextError\r\n\t\t\t\t\thasError={hasError}\r\n\t\t\t\t\tstyle={styles.errorMsg}\r\n\t\t\t\t\tmessage={errorMsg}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<View\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t...SearchOptionsStyle.optionsContainer,\r\n\t\t\t\t\t\tmaxHeight: useWindowDimensions().height / 2.5,\r\n\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<View style={SearchOptionsStyle.excluded}>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t...SearchOptionsStyle.excludedHeader,\r\n\t\t\t\t\t\t\t\tborderBottomWidth: exclude.length <= 0 ? 0 : 2,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tExcluded\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<WrappingItems\r\n\t\t\t\t\t\t\tstyle={SearchOptionsStyle.excludeList}\r\n\t\t\t\t\t\t\titems={exclude}\r\n\t\t\t\t\t\t\trenderItems={renderExclusions}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t<SelectedOptions options={options} />\r\n\t\t\t\t\t<View style={SearchOptionsStyle.optionTypesContainer}>\r\n\t\t\t\t\t\t<FlatList\r\n\t\t\t\t\t\t\tdata={optionTypes}\r\n\t\t\t\t\t\t\trenderItem={renderOptionTypes}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<RecipeOption\r\n\t\t\t\t\t\tstyle={{ height: 99 }}\r\n\t\t\t\t\t\ttype={optionType}\r\n\t\t\t\t\t\tdata={RecipeMetaOptions[optionType]}\r\n\t\t\t\t\t\tselectedData={options[optionType]}\r\n\t\t\t\t\t\tupdateData={updateOptions}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</Suspense>\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"sourceRoot":""}