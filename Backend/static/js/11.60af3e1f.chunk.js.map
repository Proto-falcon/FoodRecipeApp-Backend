{"version":3,"sources":["src/AppStyles.js","src/ipaddressesports/BackEndIP.js","src/pages/Search/SearchStyle.js","src/components/NavBar/NavBarStyle.js","src/components/Buttons/LogOutButton.js","src/components/Buttons/SearchButton.js","src/components/NavBar/NavBar.js","src/pages/Search/Search.js"],"names":["styles","StyleSheet","create","searchIcon","height","width","resizeMode","marginRight","navLink","padding","navText","color","fontSize","fontWeight","marginLeft","usernameText","marginTop","pageContainer","flex","backgroundColor","errorMsg","borderRadius","BACKEND","SearchStyle","container","alignItems","imgContainer","margin","NavBarStyle","flexDirection","flexBasis","LogOutButton","tokenCtx","useContext","CsrfCtx","accCtx","AccountCtx","navigation","useNavigation","response","axios","get","content","data","loggedOut","logOut","setUsername","setEmail","setCsrfToken","token","navigate","Pressable","style","onPress","Text","SearchButton","show","Link","to","screen","icon","size","NavBar","props","LoginButton","params","toLogin","SignUpButton","View","paddingTop","Platform","OS","loggedIn","username","useWindowDimensions","routeName","justifyContent","isLoggedIn","route","RecipeList","lazy","Search","ctx","RecipeResultsCtx","csrfCtx","useState","isMounted","useEffect","setIsLoading","isLoading","checkCred","name","fallback","recipes","results","setData","addRecipes","recipeLink","moreRecipesLink","showEnd"],"mappings":"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","file":"static/js/11.60af3e1f.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles = StyleSheet.create({\r\n\tsearchIcon: {\r\n\t\theight: 20,\r\n\t\twidth: 20,\r\n\t\tresizeMode: \"contain\",\r\n\t\tmarginRight: 10\r\n\t},\r\n\r\n\tnavLink: {\r\n\t\tpadding: 5\r\n\t},\r\n\r\n\tnavText: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"500\",\r\n\t\tmarginLeft: 10,\r\n\t},\r\n\r\n\tusernameText: {\r\n\t\tcolor: \"black\",\r\n\t\tfontSize: 12,\r\n\t\tfontWeight: \"400\",\r\n\t\tmarginLeft: 10,\r\n\t\tmarginTop: 5\r\n\t},\r\n\r\n\tpageContainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#ffffff\"\r\n\t},\r\n\r\n\terrorMsg: {\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"red\",\r\n\t\tpadding: 10,\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 20,\r\n\t\tborderRadius: 20,\r\n\t},\r\n});","const BACKENDLOCAL = \"http://localhost:8000\";\r\nconst BACKENDIPHOME = \"http://192.168.0.30:8000\";\r\n\r\nlet domain = \"\";\r\nif (__DEV__) {\r\n\tdomain = BACKENDIPHOME;\r\n}\r\nconst BACKEND = domain;\r\nexport default BACKEND;","import { StyleSheet } from \"react-native\";\r\n\r\nexport const SearchStyle = StyleSheet.create(\r\n    {\r\n        container: {\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        imgContainer: {\r\n            margin: 7\r\n        },\r\n    });","import { StyleSheet } from \"react-native\";\r\n\r\nexport const NavBarStyle = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: \"#fd5d00\",\r\n\t\tflexDirection: \"column\",\r\n\t\tflexBasis: 75,\r\n\t\tpadding: 10,\r\n\t\talignItems: \"flex-start\"\r\n\t},\r\n});\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { Pressable, Text } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\n\r\n/**\r\n * Renders the Logout Button\r\n *\r\n * @returns Logut Button\r\n */\r\nexport default function LogOutButton() {\r\n\tconst tokenCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\tconst navigation = useNavigation();\r\n\r\n\t/**\r\n\t * Logs the user out from the backend server `session`.\r\n\t */\r\n\tasync function LogOutHandler() {\r\n\t\tlet response = await axios.get(`${BACKEND}/api/logout/`);\r\n\t\tlet content = await response.data;\r\n\r\n\t\tif (content.loggedOut) {\r\n\t\t\taccCtx.logOut();\r\n\t\t\taccCtx.setUsername(\"\");\r\n\t\t\taccCtx.setEmail(\"\");\r\n\t\t\ttokenCtx.setCsrfToken(content.token);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Pressable\r\n\t\t\tstyle={{ padding: 5 }}\r\n\t\t\tonPress={LogOutHandler}\r\n\t\t>\r\n\t\t\t<Text style={styles.navText}>Sign Out</Text>\r\n\t\t</Pressable>\r\n\t);\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { SearchStyle } from \"../../pages/Search/SearchStyle\";\r\n\r\n/**\r\n * Renders the Search Button\r\n * \r\n * @param {{ show: boolean }} props\r\n * \r\n * @returns Button that links to the Search Options page\r\n */\r\nexport default function SearchButton({ show }) {\r\n\r\n\tif (show) {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\tto={{ screen: \"Search\" }}\r\n\t\t\t\tstyle={SearchStyle.imgContainer}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={\"magnifying-glass\"} size={20} />\r\n\t\t\t</Link>\r\n\t\t);\r\n\t} else {\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n}\r\n","import { Link } from \"@react-navigation/native\";\r\nimport { useContext } from \"react\";\r\nimport { Platform, Text, View, useWindowDimensions } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport LogOutButton from \"../Buttons/LogOutButton\";\r\nimport SearchButton from \"../Buttons/SearchButton\";\r\n\r\n/**\r\n * Renders a NavBar\r\n *\r\n * @param {{\r\n * \t\tstyle?: any,\r\n * \t\trouteName: string,\r\n * }} props\r\n * @returns Row of buttons that facilitate in navigating the application\r\n */\r\nexport default function NavBar(props) {\r\n\tconst accCtx = useContext(AccountCtx);\r\n\t\r\n\r\n\t/**\r\n\t * Renders the login Button\r\n\t *\r\n\t * @param {{show: boolean}} props\r\n\t * @returns Login button when `show` is true, none otherwise\r\n\t */\r\n\tfunction LoginButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"Login\", params: { toLogin: true } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Login</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Sign up Button\r\n\t * \r\n\t * @param {{show: boolean}} props \r\n\t * @returns Sign up button when `show` is true, none otherwise\r\n\t */\r\n\tfunction SignUpButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"SignUp\", params: { toLogin: false } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Login & Sign up buttons when not logged or\r\n\t * Sign out button when logged in\r\n\t *\r\n\t * @param {{\r\n\t * \t\tisLoggedIn: boolean,\r\n\t * \t\troute: string\r\n\t * }} props\r\n\t * @returns {JSX.Element} Login & signup when `isLoggedIn` `true` or\r\n\t * sign out for otherwise\r\n\t */\r\n\tfunction SignInOrOut(props) {\r\n\t\tif (!props.isLoggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<LoginButton show={props.route !== \"Login\"} />\r\n\t\t\t\t\t<SignUpButton show={props.route !== \"SignUp\"} />\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <LogOutButton />;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={{...props.style, paddingTop: Platform.OS === \"web\" ? 10 : 20,}}>\r\n\t\t\t<View>\r\n\t\t\t\t{accCtx.loggedIn && <Text style={styles.usernameText}>\r\n\t\t\t\t\tUsername: {accCtx.username}\r\n\t\t\t\t</Text>}\r\n\t\t\t</View>\r\n\t\t\t<View style={{flexDirection:\"row\"}}>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", width:useWindowDimensions().width*0.48}}>\r\n\t\t\t\t\t{props.routeName !== \"Home\" &&\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{accCtx.loggedIn && props.routeName !== \"Profile\" &&\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\tto={{ screen: \"Profile\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.navText}>Profile</Text>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", justifyContent: \"flex-end\", width:useWindowDimensions().width*0.48}}>\r\n\t\t\t\t\t<SignInOrOut isLoggedIn={accCtx.loggedIn} route={props.routeName} />\r\n\t\t\t\t\t<SearchButton show={props.routeName !== \"Search\"} />\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { lazy, Suspense, useContext, useEffect, useState } from \"react\";\r\nimport { ActivityIndicator, Platform, View } from \"react-native\";\r\nimport { RecipeResultsCtx } from \"../../context/Context\";\r\nimport { SearchStyle } from \"./SearchStyle\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport { NavBarStyle } from \"../../components/NavBar/NavBarStyle\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nconst RecipeList = lazy(() => import(\"../../components/RecipeList/RecipeList\"));\r\n\r\n/**\r\n * Renders the page with recipe results depending on\r\n * the options selected in Search Options page 🔎\r\n *\r\n * @returns Search Results Page\r\n */\r\nexport default function Search({ route, navigation }) {\r\n\tconst ctx = useContext(RecipeResultsCtx);\r\n\tconst csrfCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\r\n\tconst [isMounted, setIsMounted] = useState(true);\r\n\r\n\tuseEffect(() => ctx.setIsLoading(false), [ctx.isLoading]);\r\n\r\n\t// Checks the user has logged in when the app boots up\r\n\tuseEffect(() => {\r\n\t\taccCtx.checkCred(csrfCtx, BACKEND);\r\n\t}, [isMounted, ctx.isLoading, route.name]);\r\n\r\n\treturn (\r\n\t\t<View style={styles.pageContainer}>\r\n\t\t\t<NavBar\r\n\t\t\t\trouteName={route.name}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...NavBarStyle.container,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Suspense fallback={<ActivityIndicator size=\"large\" />}>\r\n\t\t\t\t<View\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t...SearchStyle.container,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{!ctx.isLoading && (\r\n\t\t\t\t\t\t<RecipeList\r\n\t\t\t\t\t\t\trecipes={ctx.results}\r\n\t\t\t\t\t\t\tsetData={ctx.addRecipes}\r\n\t\t\t\t\t\t\trecipeLink={ctx.moreRecipesLink}\r\n\t\t\t\t\t\t\tshowEnd={true}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</View>\r\n\t\t\t</Suspense>\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"sourceRoot":""}