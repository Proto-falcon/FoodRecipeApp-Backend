{"version":3,"sources":["src/AppStyles.js","src/ipaddressesports/BackEndIP.js","src/components/NavBar/NavBarStyle.js","src/pages/Search/SearchStyle.js","src/components/Buttons/LogOutButton.js","src/components/Buttons/SearchButton.js","src/components/NavBar/NavBar.js","src/pages/Form/FormStyles.js","src/pages/Profile/ProfileStyles.js","src/pages/Profile/Profile.js"],"names":["styles","StyleSheet","create","searchIcon","height","width","resizeMode","marginRight","navLink","padding","navText","color","fontSize","fontWeight","marginLeft","usernameText","marginTop","pageContainer","flex","backgroundColor","errorMsg","borderRadius","BACKEND","NavBarStyle","container","flexDirection","flexBasis","justifyContent","alignItems","navBarHeight","platformStyles","Platform","OS","maxHeight","minHeight","changeNavBarPaddingTop","SearchStyle","imgContainer","margin","listHeaderContainer","listHeader","textAlign","chosenList","LogOutButton","tokenCtx","useContext","CsrfCtx","accCtx","AccountCtx","navigation","useNavigation","response","axios","get","content","data","loggedOut","logOut","setUsername","setEmail","setCsrfToken","token","navigate","Pressable","style","onPress","Text","SearchButton","show","Link","to","screen","icon","size","NavBar","props","LoginButton","params","toLogin","SignUpButton","View","paddingTop","loggedIn","username","useWindowDimensions","routeName","isLoggedIn","route","FormStyle","formInput","borderWidth","formLabel","submitButton","profileStyles","userField","IndiviudalForm","lazy","TextError","emailRegExp","Profile","authCtx","useState","newUsername","setNewUserName","newEmail","setNewEmail","newPassword","setNewPassword","usernameUpdated","setUsernameUpdated","emailUpdated","setEmailUpdated","passwordUpdated","setPasswordUpdated","ispwdFocused","setIsPwdFocused","errorBackColor","setErrorBackColor","setErrorMsg","mount","put","headers","credentials","withCredentials","responseType","message","msg","ErrorHandler","error","match","email","password","fieldId","isError","useEffect","checkCred","key","customWidth","name","fallback","ActivityIndicator","ScrollView","paddingBottom","containerStyle","label","labelStyle","labelValueHidden","labelValue","labelValueStyle","placeholder","onChangeText","usernameTxt","inputPromptStyle","submitText","submitHandler","submitStyle","hasError","emailTxt","onBlurCallBack","onFocusCallBack","passwordTxt"],"mappings":"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","file":"static/js/8.ed1c24ed.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles = StyleSheet.create({\r\n\tsearchIcon: {\r\n\t\theight: 20,\r\n\t\twidth: 20,\r\n\t\tresizeMode: \"contain\",\r\n\t\tmarginRight: 10\r\n\t},\r\n\r\n\tnavLink: {\r\n\t\tpadding: 5\r\n\t},\r\n\r\n\tnavText: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"500\",\r\n\t\tmarginLeft: 10,\r\n\t},\r\n\r\n\tusernameText: {\r\n\t\tcolor: \"black\",\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: \"bold\",\r\n\t\tmarginLeft: 10,\r\n\t\tmarginTop: 5\r\n\t},\r\n\r\n\tpageContainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#ffffff\"\r\n\t},\r\n\r\n\terrorMsg: {\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"red\",\r\n\t\tpadding: 10,\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 20,\r\n\t\tborderRadius: 20,\r\n\t},\r\n});","const BACKENDLOCAL = \"http://localhost:8000\";\r\nconst BACKENDIPHOME = \"http://<Host machines IP>:8000\";\r\nlet domain = \"\";\r\nif (__DEV__) {\r\n\tdomain = BACKENDIPHOME;\r\n}\r\nconst BACKEND = domain;\r\nexport default BACKEND;","import { Platform, StyleSheet } from \"react-native\";\r\n\r\nexport const NavBarStyle = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: \"#fd5d00\",\r\n\t\tflexDirection: \"column\",\r\n\t\tflexBasis: 75,\r\n\t\tpadding: 10,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"flex-start\"\r\n\t},\r\n});\r\n\r\nexport const navBarHeight = 100;\r\n\r\nexport const platformStyles = Platform.OS !== \"web\" ? {\r\n\tmaxHeight: navBarHeight, minHeight:navBarHeight\r\n} : {};\r\n\r\n/**\r\n * Changes the size of the top padding depending on whether it's on \r\n * `web` or `android`.\r\n * @returns Padding Top Size\r\n * \r\n */\r\nexport function changeNavBarPaddingTop() {\r\n    return Platform.OS !== \"web\" ? 40 : 10\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const SearchStyle = StyleSheet.create(\r\n    {\r\n        container: {\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        imgContainer: {\r\n            margin: 7\r\n        },\r\n\r\n        listHeaderContainer: {\r\n            borderRadius: 10\r\n        },\r\n\r\n        listHeader: {\r\n            width: 165,\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            padding: 10\r\n        },\r\n\r\n        chosenList: {\r\n\t\t\tbackgroundColor: \"#0098ff\",\r\n\t\t\tcolor: \"#ffffff\",\r\n\t\t\tborderRadius: 10\r\n\t\t}\r\n    });","import { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { Pressable, Text } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\n\r\n/**\r\n * Renders the Logout Button\r\n *\r\n * @returns Logut Button\r\n */\r\nexport default function LogOutButton() {\r\n\tconst tokenCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\tconst navigation = useNavigation();\r\n\r\n\t/**\r\n\t * Logs the user out from the backend server `session`.\r\n\t */\r\n\tasync function LogOutHandler() {\r\n\t\tlet response = await axios.get(`${BACKEND}/api/logout/`);\r\n\t\tlet content = await response.data;\r\n\r\n\t\tif (content.loggedOut) {\r\n\t\t\taccCtx.logOut();\r\n\t\t\taccCtx.setUsername(\"\");\r\n\t\t\taccCtx.setEmail(\"\");\r\n\t\t\ttokenCtx.setCsrfToken(content.token);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Pressable\r\n\t\t\tstyle={{ padding: 5 }}\r\n\t\t\tonPress={LogOutHandler}\r\n\t\t>\r\n\t\t\t<Text style={styles.navText}>Sign Out</Text>\r\n\t\t</Pressable>\r\n\t);\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { SearchStyle } from \"../../pages/Search/SearchStyle\";\r\n\r\n/**\r\n * Renders the Search Button\r\n * \r\n * @param {{ show: boolean }} props\r\n * \r\n * @returns Button that links to the Search Options page\r\n */\r\nexport default function SearchButton({ show }) {\r\n\r\n\tif (show) {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\tto={{ screen: \"Search\" }}\r\n\t\t\t\tstyle={SearchStyle.imgContainer}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={\"magnifying-glass\"} size={20} />\r\n\t\t\t</Link>\r\n\t\t);\r\n\t} else {\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n}\r\n","import { Link } from \"@react-navigation/native\";\r\nimport { useContext } from \"react\";\r\nimport { Text, View, useWindowDimensions } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport LogOutButton from \"../Buttons/LogOutButton\";\r\nimport SearchButton from \"../Buttons/SearchButton\";\r\nimport { changeNavBarPaddingTop, platformStyles } from \"./NavBarStyle\";\r\n\r\n/**\r\n * Renders a NavBar\r\n *\r\n * @param {{\r\n * \t\tstyle?: any,\r\n * \t\trouteName: string,\r\n * }} props\r\n * @returns Row of buttons that facilitate in navigating the application\r\n */\r\nexport default function NavBar(props) {\r\n\tconst accCtx = useContext(AccountCtx);\r\n\t\r\n\r\n\t/**\r\n\t * Renders the login Button\r\n\t *\r\n\t * @param {{show: boolean}} props\r\n\t * @returns Login button when `show` is true, none otherwise\r\n\t */\r\n\tfunction LoginButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"Login\", params: { toLogin: true } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Login</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Sign up Button\r\n\t * \r\n\t * @param {{show: boolean}} props \r\n\t * @returns Sign up button when `show` is true, none otherwise\r\n\t */\r\n\tfunction SignUpButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"SignUp\", params: { toLogin: false } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Login & Sign up buttons when not logged or\r\n\t * Sign out button when logged in\r\n\t *\r\n\t * @param {{\r\n\t * \t\tisLoggedIn: boolean,\r\n\t * \t\troute: string\r\n\t * }} props\r\n\t * @returns {JSX.Element} Login & signup when `isLoggedIn` `true` or\r\n\t * sign out for otherwise\r\n\t */\r\n\tfunction SignInOrOut(props) {\r\n\t\tif (!props.isLoggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<LoginButton show={props.route !== \"Login\"} />\r\n\t\t\t\t\t<SignUpButton show={props.route !== \"SignUp\"} />\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <LogOutButton />;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={{...props.style, paddingTop: changeNavBarPaddingTop(), ...platformStyles}}>\r\n\t\t\t<View>\r\n\t\t\t\t{accCtx.loggedIn && <Text style={styles.usernameText}>\r\n\t\t\t\t\tUsername: {accCtx.username}\r\n\t\t\t\t</Text>}\r\n\t\t\t</View>\r\n\t\t\t<View style={{flexDirection:\"row\"}}>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", width: useWindowDimensions().width*0.5}}>\r\n\t\t\t\t\t{props.routeName !== \"Home\" &&\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{accCtx.loggedIn && props.routeName !== \"Profile\" &&\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\tto={{ screen: \"Profile\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.navText}>Profile</Text>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", justifyContent: \"flex-end\", width:useWindowDimensions().width*0.48}}>\r\n\t\t\t\t\t<SignInOrOut isLoggedIn={accCtx.loggedIn} route={props.routeName} />\r\n\t\t\t\t\t<SearchButton show={props.routeName !== \"Search\"} />\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nexport const FormStyle = StyleSheet.create(\r\n    {\r\n        formInput: {\r\n            padding: 5,\r\n            marginTop: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 20\r\n        },\r\n\r\n        formLabel: {\r\n            marginRight: 10,\r\n            textAlign: \"left\",\r\n            fontWeight: \"bold\",\r\n        },\r\n\r\n        submitButton: {\r\n            padding: 10,\r\n            margin: 10,\r\n            borderRadius: 15, \r\n            backgroundColor: \"#fd5d00\"\r\n        },\r\n    }\r\n);\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const profileStyles = StyleSheet.create({\r\n\tuserField: {\r\n\t\ttextAlign: \"center\",\r\n\t\tfontSize: 25,\r\n\t},\r\n\r\n\tsubmitButton: {\r\n\t\tbackgroundColor: \"#ff9100\",\r\n\t\tfontWeight: \"bold\",\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\tborderRadius: 15,\r\n\t\tbackgroundColor: \"#fd5d00\",\r\n\t\twidth: 150,\r\n\t},\r\n});\r\n","import axios from \"axios\";\r\nimport { lazy, Suspense, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tActivityIndicator,\r\n\tPlatform,\r\n\tScrollView,\r\n\tuseWindowDimensions,\r\n\tView,\r\n} from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { FormStyle } from \"../Form/FormStyles\";\r\nimport { profileStyles } from \"./ProfileStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport { NavBarStyle } from \"../../components/NavBar/NavBarStyle\";\r\nconst IndiviudalForm = lazy(() =>\r\n\timport(\"../../components/IndividualForm/IndividualForm\")\r\n);\r\nconst TextError = lazy(() => import(\"../../components/TextError/TextError\"));\r\n\r\nconst emailRegExp =\r\n\t/^([a-zA-Z0-9]+\\.?[a-zA-Z0-9]*)@[a-zA-Z0-9^\\.]+\\.([a-zA-Z]+\\.?[a-zA-Z]*)$/;\r\n\r\n/**\r\n * Renders the profile page\r\n *\r\n * @param {{route: any, navigation: any}} prop\r\n * @returns Profile Page\r\n */\r\nexport default function Profile({ route, navigation }) {\r\n\tconst authCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\r\n\tconst [newUsername, setNewUserName] = useState(\"\");\r\n\tconst [newEmail, setNewEmail] = useState(\"\");\r\n\tconst [newPassword, setNewPassword] = useState(\"\");\r\n\tconst [width, setWidth] = useState(useWindowDimensions().width);\r\n\tconst [usernameUpdated, setUsernameUpdated] = useState(false);\r\n\tconst [emailUpdated, setEmailUpdated] = useState(false);\r\n\tconst [passwordUpdated, setPasswordUpdated] = useState(false);\r\n\r\n\tconst [ispwdFocused, setIsPwdFocused] = useState(false);\r\n\r\n\tconst [errorBackColor, setErrorBackColor] = useState(\"red\");\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n\tconst [mount, setMount] = useState(true);\r\n\r\n\t// Fetches the recently viewed recipes by the user from our own database\r\n\tuseEffect(() => {\r\n\t\taccCtx.checkCred(authCtx, BACKEND);\r\n\t}, [mount, route.key]);\r\n\r\n\r\n\t/**\r\n\t * Sets the new username\r\n\t *\r\n\t * @param {string} usernameTxt\r\n\t */\r\n\tfunction updateUsernameHandler(usernameTxt) {\r\n\t\tsetNewUserName(usernameTxt);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the new email\r\n\t *\r\n\t * @param {string} emailTxt\r\n\t */\r\n\tfunction updateEmailHander(emailTxt) {\r\n\t\tsetNewEmail(emailTxt);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets then new password\r\n\t *\r\n\t * @param {string} passwordTxt\r\n\t */\r\n\tfunction updatePaswordHandler(passwordTxt) {\r\n\t\tsetNewPassword(passwordTxt);\r\n\t}\r\n\r\n\t/**\r\n\t * Submits the updated username\r\n\t */\r\n\tasync function submitUsername() {\r\n\t\tif (newUsername === \"\") {\r\n\t\t\tErrorHandler(\"You haven't entered a username\", 0, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet response = await axios.put(\r\n\t\t\t\t`${BACKEND}/api/updateUserInfo/`,\r\n\t\t\t\t{ username: newUsername },\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"X-CSRFToken\": authCtx.token,\r\n\t\t\t\t\t\tcredentials: \"include\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tlet content = await response.data;\r\n\r\n\t\t\taccCtx.setUsername(newUsername);\r\n\r\n\t\t\tlet message = \"\";\r\n\t\t\tfor (const msg in content) {\r\n\t\t\t\tmessage = content[msg];\r\n\t\t\t}\r\n\r\n\t\t\tErrorHandler(message, 0, false);\r\n\t\t} catch (error) {\r\n\t\t\tErrorHandler(error.response.data.message, 0, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Submits the updated email\r\n\t */\r\n\tasync function submitEmail() {\r\n\t\tif (newEmail === \"\" || newEmail.match(emailRegExp) === null) {\r\n\t\t\tErrorHandler(\"You haven't entered a valid email\", 1, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet response = await axios.put(\r\n\t\t\t\t`${BACKEND}/api/updateUserInfo/`,\r\n\t\t\t\t{ email: newEmail },\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"X-CSRFToken\": authCtx.token,\r\n\t\t\t\t\t\tcredentials: \"include\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tlet content = await response.data;\r\n\r\n\t\t\taccCtx.setEmail(newEmail);\r\n\r\n\t\t\tlet message = \"\";\r\n\t\t\tfor (const msg in content) {\r\n\t\t\t\tmessage = content[msg];\r\n\t\t\t}\r\n\r\n\t\t\tErrorHandler(message, 1, false);\r\n\t\t} catch (error) {\r\n\t\t\tErrorHandler(error.response.data.message, 1, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Submits the updated password\r\n\t */\r\n\tasync function submitPassword() {\r\n\t\tif (newPassword === \"\") {\r\n\t\t\tErrorHandler(\"You haven't entered a password\", 2, true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet response = await axios.put(\r\n\t\t\t\t`${BACKEND}/api/updateUserInfo/`,\r\n\t\t\t\t{ password: newPassword },\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"X-CSRFToken\": authCtx.token,\r\n\t\t\t\t\t\tcredentials: \"include\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tlet content = await response.data;\r\n\r\n\t\t\tlet message = \"\";\r\n\t\t\tfor (const msg in content) {\r\n\t\t\t\tmessage = content[msg];\r\n\t\t\t}\r\n\r\n\t\t\tErrorHandler(message, 2, false);\r\n\t\t} catch (error) {\r\n\t\t\tErrorHandler(error.response.data.message, 2, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Displays the error message via toggling the `error` state\r\n\t *\r\n\t * @param {string} message\r\n\t * @param {number} fieldId\r\n\t * @param {boolean} isError\r\n\t */\r\n\tfunction ErrorHandler(message, fieldId, isError) {\r\n\t\tif (isError) {\r\n\t\t\tsetErrorBackColor(\"red\");\r\n\t\t} else {\r\n\t\t\tsetErrorBackColor(\"green\");\r\n\t\t}\r\n\t\tswitch (fieldId) {\r\n\t\t\tcase 0:\r\n\t\t\t\tsetUsernameUpdated(true);\r\n\t\t\t\tsetEmailUpdated(false);\r\n\t\t\t\tsetPasswordUpdated(false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tsetUsernameUpdated(false);\r\n\t\t\t\tsetEmailUpdated(true);\r\n\t\t\t\tsetPasswordUpdated(false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tsetUsernameUpdated(false);\r\n\t\t\t\tsetEmailUpdated(false);\r\n\t\t\t\tsetPasswordUpdated(true);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsetUsernameUpdated(false);\r\n\t\t\t\tsetEmailUpdated(false);\r\n\t\t\t\tsetPasswordUpdated(false);\r\n\t\t}\r\n\t\tsetErrorMsg(message);\r\n\t}\r\n\r\n\tconst customWidth = width < 700 ? width * 0.7 : width * 0.3;\r\n\r\n\treturn (\r\n\t\t<View style={styles.pageContainer}>\r\n\t\t\t<NavBar\r\n\t\t\t\trouteName={route.name}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...NavBarStyle.container,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Suspense fallback={<ActivityIndicator size=\"large\" />}>\r\n\t\t\t\t<View>\r\n\t\t\t\t\t<ScrollView>\r\n\t\t\t\t\t\t<View\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\talignItems: \"center\", paddingBottom: useWindowDimensions().height * \r\n\t\t\t\t\t\t\t\t(ispwdFocused && Platform.OS != \"web\" ? 0.3 : 0)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IndiviudalForm\r\n\t\t\t\t\t\t\t\tcontainerStyle={{ alignItems: \"center\" }}\r\n\t\t\t\t\t\t\t\tlabel=\"Username:\"\r\n\t\t\t\t\t\t\t\tlabelStyle={{\r\n\t\t\t\t\t\t\t\t\t...profileStyles.userField,\r\n\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabelValueHidden={false}\r\n\t\t\t\t\t\t\t\tlabelValue={accCtx.username}\r\n\t\t\t\t\t\t\t\tlabelValueStyle={profileStyles.userField}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter new username\"\r\n\t\t\t\t\t\t\t\tonChangeText={updateUsernameHandler}\r\n\t\t\t\t\t\t\t\tinputPromptStyle={{\r\n\t\t\t\t\t\t\t\t\t...FormStyle.formInput,\r\n\t\t\t\t\t\t\t\t\twidth: customWidth,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tsubmitText=\"Update Username\"\r\n\t\t\t\t\t\t\t\tsubmitHandler={submitUsername}\r\n\t\t\t\t\t\t\t\tsubmitStyle={profileStyles.submitButton}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextError\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t...styles.errorMsg,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: errorBackColor,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\thasError={usernameUpdated}\r\n\t\t\t\t\t\t\t\tmessage={errorMsg}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<IndiviudalForm\r\n\t\t\t\t\t\t\t\tcontainerStyle={{ alignItems: \"center\" }}\r\n\t\t\t\t\t\t\t\tlabel=\"Email:\"\r\n\t\t\t\t\t\t\t\tlabelStyle={{\r\n\t\t\t\t\t\t\t\t\t...profileStyles.userField,\r\n\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabelValueHidden={false}\r\n\t\t\t\t\t\t\t\tlabelValue={accCtx.email}\r\n\t\t\t\t\t\t\t\tlabelValueStyle={profileStyles.userField}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter new email\"\r\n\t\t\t\t\t\t\t\tonChangeText={updateEmailHander}\r\n\t\t\t\t\t\t\t\tinputPromptStyle={{\r\n\t\t\t\t\t\t\t\t\t...FormStyle.formInput,\r\n\t\t\t\t\t\t\t\t\twidth: customWidth,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tsubmitText=\"Update Email\"\r\n\t\t\t\t\t\t\t\tsubmitHandler={submitEmail}\r\n\t\t\t\t\t\t\t\tsubmitStyle={profileStyles.submitButton}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextError\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t...styles.errorMsg,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: errorBackColor,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\thasError={emailUpdated}\r\n\t\t\t\t\t\t\t\tmessage={errorMsg}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<IndiviudalForm\r\n\t\t\t\t\t\t\t\tcontainerStyle={{ alignItems: \"center\" }}\r\n\t\t\t\t\t\t\t\tlabel=\"Password:\"\r\n\t\t\t\t\t\t\t\tlabelStyle={{\r\n\t\t\t\t\t\t\t\t\t...profileStyles.userField,\r\n\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tlabelValueHidden={true}\r\n\t\t\t\t\t\t\t\tonBlurCallBack={() => setIsPwdFocused(false)}\r\n\t\t\t\t\t\t\t\tonFocusCallBack={() => setIsPwdFocused(true)}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Please enter new Password\"\r\n\t\t\t\t\t\t\t\tonChangeText={updatePaswordHandler}\r\n\t\t\t\t\t\t\t\tinputPromptStyle={{\r\n\t\t\t\t\t\t\t\t\t...FormStyle.formInput,\r\n\t\t\t\t\t\t\t\t\twidth: customWidth,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tsubmitText=\"Update Password\"\r\n\t\t\t\t\t\t\t\tsubmitHandler={submitPassword}\r\n\t\t\t\t\t\t\t\tsubmitStyle={profileStyles.submitButton}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextError\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t...styles.errorMsg,\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: errorBackColor,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\thasError={passwordUpdated}\r\n\t\t\t\t\t\t\t\tmessage={errorMsg}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</ScrollView>\r\n\t\t\t\t</View>\r\n\t\t\t</Suspense>\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"sourceRoot":""}