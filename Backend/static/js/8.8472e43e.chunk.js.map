{"version":3,"sources":["src/AppStyles.js","src/ipaddressesports/BackEndIP.js","src/pages/Search/SearchStyle.js","src/components/NavBar/NavBarStyle.js","src/components/Buttons/LogOutButton.js","src/components/Buttons/SearchButton.js","src/components/NavBar/NavBar.js","src/pages/Form/FormStyles.js","src/pages/Form/Form.js"],"names":["styles","StyleSheet","create","searchIcon","height","width","resizeMode","marginRight","navLink","padding","navText","color","fontSize","fontWeight","marginLeft","usernameText","marginTop","pageContainer","flex","backgroundColor","errorMsg","borderRadius","BACKEND","SearchStyle","container","alignItems","imgContainer","margin","NavBarStyle","flexDirection","flexBasis","LogOutButton","tokenCtx","useContext","CsrfCtx","accCtx","AccountCtx","navigation","useNavigation","response","axios","get","content","data","loggedOut","logOut","setUsername","setEmail","setCsrfToken","token","navigate","Pressable","style","onPress","Text","SearchButton","show","Link","to","screen","icon","size","NavBar","props","LoginButton","params","toLogin","SignUpButton","View","paddingTop","Platform","OS","loggedIn","username","useWindowDimensions","routeName","justifyContent","isLoggedIn","route","FormStyle","formInput","borderWidth","formLabel","textAlign","submitButton","FormField","lazy","TextError","UserEmailForms","emailRegExp","Form","authCtx","useState","email","password","setPasword","formValid","setFormValid","setErrorMsg","mount","screenWidth","minWidth","maxWidth","fieldWidth","setFieldWidth","onSubmitHandler","length","method","path","headers","credentials","withCredentials","url","responseType","signUpSuccess","login","loginSuccess","user","error","message","useEffect","checkCred","name","fallback","usernameHandler","newUsername","emailHandler","newEmail","match","containerStyle","labelStyle","inputStyle","borderColor","label","placeholder","isPassword","onChangeTextHandler","newPassword","hasError"],"mappings":"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","file":"static/js/8.8472e43e.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const styles = StyleSheet.create({\r\n\tsearchIcon: {\r\n\t\theight: 20,\r\n\t\twidth: 20,\r\n\t\tresizeMode: \"contain\",\r\n\t\tmarginRight: 10\r\n\t},\r\n\r\n\tnavLink: {\r\n\t\tpadding: 5\r\n\t},\r\n\r\n\tnavText: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"500\",\r\n\t\tmarginLeft: 10,\r\n\t},\r\n\r\n\tusernameText: {\r\n\t\tcolor: \"black\",\r\n\t\tfontSize: 12,\r\n\t\tfontWeight: \"400\",\r\n\t\tmarginLeft: 10,\r\n\t\tmarginTop: 5\r\n\t},\r\n\r\n\tpageContainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#ffffff\"\r\n\t},\r\n\r\n\terrorMsg: {\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"red\",\r\n\t\tpadding: 10,\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 20,\r\n\t\tborderRadius: 20,\r\n\t},\r\n});","const BACKENDLOCAL = \"http://localhost:8000\";\r\nconst BACKENDIPHOME = \"http://192.168.0.30:8000\";\r\n\r\nlet domain = \"\";\r\nif (__DEV__) {\r\n\tdomain = BACKENDIPHOME;\r\n}\r\nconst BACKEND = domain;\r\nexport default BACKEND;","import { StyleSheet } from \"react-native\";\r\n\r\nexport const SearchStyle = StyleSheet.create(\r\n    {\r\n        container: {\r\n            alignItems: \"center\",\r\n        },\r\n\r\n        imgContainer: {\r\n            margin: 7\r\n        },\r\n    });","import { StyleSheet } from \"react-native\";\r\n\r\nexport const NavBarStyle = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tbackgroundColor: \"#fd5d00\",\r\n\t\tflexDirection: \"column\",\r\n\t\tflexBasis: 75,\r\n\t\tpadding: 10,\r\n\t\talignItems: \"flex-start\"\r\n\t},\r\n});\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { Pressable, Text } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\n\r\n/**\r\n * Renders the Logout Button\r\n *\r\n * @returns Logut Button\r\n */\r\nexport default function LogOutButton() {\r\n\tconst tokenCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\tconst navigation = useNavigation();\r\n\r\n\t/**\r\n\t * Logs the user out from the backend server `session`.\r\n\t */\r\n\tasync function LogOutHandler() {\r\n\t\tlet response = await axios.get(`${BACKEND}/api/logout/`);\r\n\t\tlet content = await response.data;\r\n\r\n\t\tif (content.loggedOut) {\r\n\t\t\taccCtx.logOut();\r\n\t\t\taccCtx.setUsername(\"\");\r\n\t\t\taccCtx.setEmail(\"\");\r\n\t\t\ttokenCtx.setCsrfToken(content.token);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Pressable\r\n\t\t\tstyle={{ padding: 5 }}\r\n\t\t\tonPress={LogOutHandler}\r\n\t\t>\r\n\t\t\t<Text style={styles.navText}>Sign Out</Text>\r\n\t\t</Pressable>\r\n\t);\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { SearchStyle } from \"../../pages/Search/SearchStyle\";\r\n\r\n/**\r\n * Renders the Search Button\r\n * \r\n * @param {{ show: boolean }} props\r\n * \r\n * @returns Button that links to the Search Options page\r\n */\r\nexport default function SearchButton({ show }) {\r\n\r\n\tif (show) {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\tto={{ screen: \"Search\" }}\r\n\t\t\t\tstyle={SearchStyle.imgContainer}\r\n\t\t\t>\r\n\t\t\t\t<FontAwesomeIcon icon={\"magnifying-glass\"} size={20} />\r\n\t\t\t</Link>\r\n\t\t);\r\n\t} else {\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n}\r\n","import { Link } from \"@react-navigation/native\";\r\nimport { useContext } from \"react\";\r\nimport { Platform, Text, View, useWindowDimensions } from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport LogOutButton from \"../Buttons/LogOutButton\";\r\nimport SearchButton from \"../Buttons/SearchButton\";\r\n\r\n/**\r\n * Renders a NavBar\r\n *\r\n * @param {{\r\n * \t\tstyle?: any,\r\n * \t\trouteName: string,\r\n * }} props\r\n * @returns Row of buttons that facilitate in navigating the application\r\n */\r\nexport default function NavBar(props) {\r\n\tconst accCtx = useContext(AccountCtx);\r\n\t\r\n\r\n\t/**\r\n\t * Renders the login Button\r\n\t *\r\n\t * @param {{show: boolean}} props\r\n\t * @returns Login button when `show` is true, none otherwise\r\n\t */\r\n\tfunction LoginButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"Login\", params: { toLogin: true } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Login</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Sign up Button\r\n\t * \r\n\t * @param {{show: boolean}} props \r\n\t * @returns Sign up button when `show` is true, none otherwise\r\n\t */\r\n\tfunction SignUpButton({ show }) {\r\n\t\tif (show) {\r\n\t\t\treturn (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={{ screen: \"SignUp\", params: { toLogin: false } }}\r\n\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the Login & Sign up buttons when not logged or\r\n\t * Sign out button when logged in\r\n\t *\r\n\t * @param {{\r\n\t * \t\tisLoggedIn: boolean,\r\n\t * \t\troute: string\r\n\t * }} props\r\n\t * @returns {JSX.Element} Login & signup when `isLoggedIn` `true` or\r\n\t * sign out for otherwise\r\n\t */\r\n\tfunction SignInOrOut(props) {\r\n\t\tif (!props.isLoggedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<LoginButton show={props.route !== \"Login\"} />\r\n\t\t\t\t\t<SignUpButton show={props.route !== \"SignUp\"} />\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <LogOutButton />;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={{...props.style, paddingTop: Platform.OS === \"web\" ? 10 : 20,}}>\r\n\t\t\t<View>\r\n\t\t\t\t{accCtx.loggedIn && <Text style={styles.usernameText}>\r\n\t\t\t\t\tUsername: {accCtx.username}\r\n\t\t\t\t</Text>}\r\n\t\t\t</View>\r\n\t\t\t<View style={{flexDirection:\"row\"}}>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", width:useWindowDimensions().width*0.48}}>\r\n\t\t\t\t\t{props.routeName !== \"Home\" &&\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{accCtx.loggedIn && props.routeName !== \"Profile\" &&\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\tto={{ screen: \"Profile\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.navText}>Profile</Text>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={{ flexDirection: \"row\", justifyContent: \"flex-end\", width:useWindowDimensions().width*0.48}}>\r\n\t\t\t\t\t<SignInOrOut isLoggedIn={accCtx.loggedIn} route={props.routeName} />\r\n\t\t\t\t\t<SearchButton show={props.routeName !== \"Search\"} />\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nexport const FormStyle = StyleSheet.create(\r\n    {\r\n        formInput: {\r\n            padding: 5,\r\n            marginTop: 10,\r\n            borderWidth: 2,\r\n            borderRadius: 20\r\n        },\r\n\r\n        formLabel: {\r\n            marginRight: 10,\r\n            textAlign: \"left\",\r\n            fontWeight: \"bold\",\r\n        },\r\n\r\n        submitButton: {\r\n            padding: 10,\r\n            margin: 10,\r\n            borderRadius: 15, \r\n            backgroundColor: \"#fd5d00\"\r\n        },\r\n    }\r\n);\r\n","import axios from \"axios\";\r\nimport { lazy, Suspense, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tActivityIndicator,\r\n\tPlatform,\r\n\tPressable,\r\n\tText,\r\n\tuseWindowDimensions,\r\n\tView,\r\n} from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { FormStyle } from \"./FormStyles\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport { NavBarStyle } from \"../../components/NavBar/NavBarStyle\";\r\n\r\nconst FormField = lazy(() => import(\"../../components/FormField/FormField\"));\r\nconst TextError = lazy(() => import(\"../../components/TextError/TextError\"));\r\nconst UserEmailForms = lazy(() =>\r\n\timport(\"../../components/UserEmailForms/UserEmailForms\")\r\n);\r\n\r\nconst emailRegExp =\r\n\t/^([a-zA-Z0-9]+\\.?[a-zA-Z0-9]*)@[a-zA-Z0-9^\\.]+\\.([a-zA-Z]+\\.?[a-zA-Z]*)$/;\r\n\r\n/**\r\n * Renders the Text Form with multiple fields\r\n * It can be either login or sign up form\r\n *\r\n * @param {\r\n * \t{\r\n * \t\tnavigation: *,\r\n * \t\troute: *\r\n * \t}} props\r\n * @returns Text Form\r\n */\r\nexport default function Form({ route, navigation }) {\r\n\tconst authCtx = useContext(CsrfCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\r\n\tconst [toLogin, setToLogin] = useState(route.params.toLogin);\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPasword] = useState(\"\");\r\n\tconst [formValid, setFormValid] = useState(true);\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\tconst [mount, setMount] = useState(true);\r\n\tconst [screenWidth, setScreenWidth] = useState(useWindowDimensions().width);\r\n\tconst [fieldWidth, setFieldWidth] = useState({\r\n\t\twidth: \"25%\",\r\n\t\tminWidth: \"25%\",\r\n\t\tmaxWidth: \"25%\",\r\n\t});\r\n\r\n\t// Calls when `Form` component is mounted\r\n\tuseEffect(() => {\r\n\t\taccCtx.checkCred(authCtx, BACKEND);\r\n\r\n\t\tif (screenWidth < 700) {\r\n\t\t\tsetFieldWidth({\r\n\t\t\t\twidth: \"50%\",\r\n\t\t\t\tminWidth: \"50%\",\r\n\t\t\t\tmaxWidth: \"50%\",\r\n\t\t\t});\r\n\t\t}\r\n\t}, [mount]);\r\n\r\n\t/**\r\n\t * Updates the `username` state with `newUsername`\r\n\t *\r\n\t * @param {string} newUsername\r\n\t */\r\n\tfunction usernameHandler(newUsername) {\r\n\t\tif (newUsername.length > 50) {\r\n\t\t\tsetFormValid(false);\r\n\t\t\tsetErrorMsg(\"Username too long\");\r\n\t\t} else {\r\n\t\t\tsetFormValid(true);\r\n\t\t\tsetUsername(newUsername);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the `email` state with `newEmail` if it's valid\r\n\t *\r\n\t * @param {string} newEmail\r\n\t */\r\n\tfunction emailHandler(newEmail) {\r\n\t\tif (newEmail.match(emailRegExp) != null) {\r\n\t\t\tsetEmail(newEmail);\r\n\t\t} else {\r\n\t\t\tsetEmail(\"\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the `password` state with `newPassword`\r\n\t *\r\n\t * @param {string} newPassword\r\n\t */\r\n\tfunction passwordHandler(newPassword) {\r\n\t\tsetPasword(newPassword);\r\n\t}\r\n\r\n\t/**\r\n\t * Submits the sign up & login form with the user\r\n\t */\r\n\tasync function onSubmitHandler() {\r\n\t\tif (toLogin && (username.length <= 0 || password <= 0)) {\r\n\t\t\tsetErrorMsg(\"Please fill all the fields/ enter corretly.\");\r\n\t\t\tsetFormValid(false);\r\n\t\t} else if (\r\n\t\t\t!toLogin &&\r\n\t\t\t(username.length <= 0 || email.length <= 0 || password <= 0)\r\n\t\t) {\r\n\t\t\tsetErrorMsg(\"Please fill all the fields/ enter corretly.\");\r\n\t\t\tsetFormValid(false);\r\n\t\t} else {\r\n\t\t\tsetFormValid(true);\r\n\t\t\tlet method = \"post\";\r\n\t\t\tlet path = \"signup/\";\r\n\t\t\tif (toLogin) {\r\n\t\t\t\tmethod = \"put\";\r\n\t\t\t\tpath = \"login/\";\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlet response = await axios({\r\n\t\t\t\t\tmethod: method,\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"X-CSRFToken\": authCtx.token,\r\n\t\t\t\t\t\tcredentials: \"include\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\turl: `${BACKEND}/api/${path}`,\r\n\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\temail: email,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet content = await response.data;\r\n\t\t\t\tif (content.signUpSuccess) {\r\n\t\t\t\t\taccCtx.login();\r\n\t\t\t\t\taccCtx.setUsername(username);\r\n\t\t\t\t\taccCtx.setEmail(email);\r\n\t\t\t\t\tnavigation.navigate(\"Home\");\r\n\t\t\t\t} else if (content.loginSuccess) {\r\n\t\t\t\t\taccCtx.login();\r\n\t\t\t\t\taccCtx.setUsername(content.user.username);\r\n\t\t\t\t\taccCtx.setEmail(content.user.email);\r\n\t\t\t\t\tnavigation.navigate(\"Home\");\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetErrorMsg(error.response.data.message);\r\n\t\t\t\tsetFormValid(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction SubmitButton() {\r\n\t\treturn (\r\n\t\t\t<Pressable\r\n\t\t\t\tstyle={FormStyle.submitButton}\r\n\t\t\t\tonPress={onSubmitHandler}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{ fontWeight: \"bold\" }}>\r\n\t\t\t\t\t{toLogin ? \"Login\" : \"Sign Up\"}\r\n\t\t\t\t</Text>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View style={styles.pageContainer}>\r\n\t\t\t<NavBar\r\n\t\t\t\trouteName={route.name}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...NavBarStyle.container,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tpaddingTop: \"5%\",\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Suspense fallback={<ActivityIndicator size=\"large\" />}>\r\n\t\t\t\t\t<UserEmailForms\r\n\t\t\t\t\t\ttoLogin={toLogin}\r\n\t\t\t\t\t\tusernameHandler={usernameHandler}\r\n\t\t\t\t\t\temailHandler={emailHandler}\r\n\t\t\t\t\t\tcontainerStyle={fieldWidth}\r\n\t\t\t\t\t\tlabelStyle={FormStyle.formLabel}\r\n\t\t\t\t\t\tinputStyle={{\r\n\t\t\t\t\t\t\t...FormStyle.formInput,\r\n\t\t\t\t\t\t\tborderColor: formValid ? \"black\" : \"red\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormField\r\n\t\t\t\t\t\tlabel={\"Password:\"}\r\n\t\t\t\t\t\tplaceholder={\"Please enter password:\"}\r\n\t\t\t\t\t\tisPassword={true}\r\n\t\t\t\t\t\tonChangeTextHandler={passwordHandler}\r\n\t\t\t\t\t\tcontainerStyle={fieldWidth}\r\n\t\t\t\t\t\tlabelStyle={FormStyle.formLabel}\r\n\t\t\t\t\t\tinputStyle={{\r\n\t\t\t\t\t\t\t...FormStyle.formInput,\r\n\t\t\t\t\t\t\tborderColor: formValid ? \"black\" : \"red\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SubmitButton />\r\n\r\n\t\t\t\t\t<TextError\r\n\t\t\t\t\t\thasError={!formValid}\r\n\t\t\t\t\t\tstyle={styles.errorMsg}\r\n\t\t\t\t\t\tmessage={errorMsg}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Suspense>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"sourceRoot":""}