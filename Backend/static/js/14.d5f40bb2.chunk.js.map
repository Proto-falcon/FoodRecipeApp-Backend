{"version":3,"sources":["src/components/RecipeList/RecipeListStyle.js","src/components/RecipeCover/RecipeCover.js"],"names":["recipeListStyle","StyleSheet","create","foodPicContainer","alignItems","foodPic","height","width","resizeMode","nameRatingContainer","marginTop","marginBottom","borderWidth","padding","foodName","fontWeight","textAlign","RecipeCover","item","flexGrow","navigation","useNavigation","authCtx","useContext","CsrfCtx","recipeResultsCtx","RecipeResultsCtx","useState","rating","image","startsWith","uri","BACKEND","defaultImage","recipe","axios","post","id","headers","token","credentials","withCredentials","responseType","error","setCurrentRecipeURI","navigate","style","source","name","onPress","toRecipeInfo","icon"],"mappings":"kJAEaA,E,KAAkBC,QAAWC,OACtC,CACIC,iBACA,CACIC,WAAY,UAEhBC,QACA,CACIC,OAAQ,IACRC,MAAO,OACPC,WAAY,WAGhBC,oBAAqB,CACjBC,UAAW,GACXC,aAAc,GACdC,YAAa,EACbC,QAAS,IAGbC,SACA,CACIC,WAAY,OACZC,UAAW,a,4OCFR,SAASC,EAAY,GAAoC,IAAlCC,EAAI,EAAJA,KAAMZ,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOY,EAAQ,EAARA,SACpDC,EAAaC,0BACbC,EAAUC,qBAAWC,WACrBC,EAAmBF,qBAAWG,oBACpC,EAA4BC,oBAAS,WACpC,OAAoB,OAAhBT,EAAKU,OACD,YAEAV,EAAKU,UAEZ,WANKA,EAAM,KAQb,GARwB,KAQED,oBAAS,WAClC,MAAmB,KAAfT,EAAKW,MACIX,EAAKW,MACNC,WAAW,QAOd,CAAEC,IAAKb,EAAKW,MAAOvB,OAAQ,OAAQC,MAAO,QAN1C,CACNwB,IAAI,GAAIC,UAAUd,EAAKW,MACvBvB,OAAQ,OACRC,MAAO,QAMF0B,mBAEP,WAfKJ,EAAK,KAAU,KAuBK,aAiB1B,OAjB0B,OAA3B,UAA4BK,GAC3B,UACOC,UAAMC,KACRJ,UAAO,wBACV,CAAEK,GAAIH,EAAOG,IACb,CACCC,QAAS,CACR,cAAehB,EAAQiB,MACvBC,YAAa,WAEdC,iBAAiB,EACjBC,aAAc,SAGf,MAAOC,IACTlB,EAAiBmB,oBAAoBV,EAAOG,IAC5CjB,EAAWyB,SAAS,aAAc,CAAER,GAAIH,EAAOG,SAC/C,sBAED,MAAgB,KAAZnB,EAAKmB,GAEP,eAAC,UAAI,CAEJS,MAAO,CAAEvC,MAAOA,EAAOD,OAAQA,EAAQa,SAAUA,GAAW,UAE5D,cAAC,UAAI,CAAC2B,MAAO9C,kBAAgBG,iBAAiB,SAC7C,cAAC,UAAK,CACL2C,MAAO9C,kBAAgBK,QACvB0C,OAAQlB,MAGV,cAAC,UAAI,CAACiB,MAAO9C,kBAAgBc,SAAS,SAAEI,EAAK8B,SATxC9B,EAAKmB,IAcX,eAAC,UAAS,CAETY,QAAS,kBA9CT,SAQyB,GAAD,+BAsCTC,CAAahC,IAC5B4B,MAAO,CAAEvC,MAAOA,EAAOD,OAAQA,EAAQa,SAAUA,GAAW,UAE5D,cAAC,UAAI,CAAC2B,MAAO9C,kBAAgBG,iBAAiB,SAC7C,cAAC,UAAK,CACL2C,MAAO9C,kBAAgBK,QACvB0C,OAAQlB,MAGV,eAAC,UAAI,CAACiB,MAAO9C,kBAAgBS,oBAAoB,UAChD,cAAC,UAAI,CAACqC,MAAO9C,kBAAgBc,SAAS,SAAEI,EAAK8B,OAC7C,eAAC,UAAI,CAACF,MAAO9C,kBAAgBc,SAAS,UAAC,cAAC,kBAAe,CAACqC,KAAM,SAAU,IAAEvB,UAZtEV,EAAKmB","file":"static/js/14.d5f40bb2.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const recipeListStyle = StyleSheet.create(\r\n    {\r\n        foodPicContainer:\r\n        {\r\n            alignItems: \"center\"\r\n        },\r\n        foodPic:\r\n        {\r\n            height: 200,\r\n            width: \"100%\",\r\n            resizeMode: \"contain\"\r\n        },\r\n\r\n        nameRatingContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            borderWidth: 1,\r\n            padding: 10,\r\n        },\r\n\r\n        foodName:\r\n        {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\"\r\n        }\r\n    });\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Image, Pressable, Text, View } from \"react-native\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport { recipeListStyle } from \"../RecipeList/RecipeListStyle\";\r\nimport { RecipeResultsCtx } from \"../../context/Context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { defaultImage } from \"../../Constants\";\r\n\r\n/**\r\n * Renders a recipe with in image and name\r\n * \r\n * @typedef {import(\"../../Constants\").recipe} recipe \r\n * @param {{\r\n *      item: recipe,\r\n * \t\theight: number | string,\r\n * \t\twidth: number | string,\r\n * \t\tflexGrow?: number\r\n * }} prop\r\n * @returns A recipe with image and name\r\n */\r\nexport default function RecipeCover({ item, height, width, flexGrow }) {\r\n\tconst navigation = useNavigation();\r\n\tconst authCtx = useContext(CsrfCtx);\r\n\tconst recipeResultsCtx = useContext(RecipeResultsCtx);\r\n\tconst [rating, setRating] = useState(() => {\r\n\t\tif (item.rating === null) {\r\n\t\t\treturn \"No Rating\";\r\n\t\t} else {\r\n\t\t\treturn item.rating;\r\n\t\t}\r\n\t});\r\n\r\n\tconst [image, setImage] = useState(() => {\r\n\t\tif (item.image !== \"\") {\r\n\t\t\tlet image = item.image;\r\n\t\t\tif (!image.startsWith(\"http\")) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\turi: `${BACKEND}${item.image}`,\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn { uri: item.image, height: \"100%\", width: \"100%\" };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn defaultImage;\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * Adds going to be viewed recipe in recents for the logged in user\r\n\t * before going to recipe page.\r\n\t *\r\n\t * @param {recipe} recipe\r\n\t */\r\n\tasync function toRecipeInfo(recipe) {\r\n\t\ttry {\r\n\t\t\tawait axios.post(\r\n\t\t\t\t`${BACKEND}/api/setRecentRecipe/`,\r\n\t\t\t\t{ id: recipe.id },\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"X-CSRFToken\": authCtx.token,\r\n\t\t\t\t\t\tcredentials: \"include\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {}\r\n\t\trecipeResultsCtx.setCurrentRecipeURI(recipe.id);\r\n\t\tnavigation.navigate(\"RecipeInfo\", { id: recipe.id });\r\n\t}\r\n\r\n\tif (item.id === \"\") {\r\n\t\treturn (\r\n\t\t\t<View\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\tstyle={{ width: width, height: height, flexGrow: flexGrow }}\r\n\t\t\t>\r\n\t\t\t\t<View style={recipeListStyle.foodPicContainer}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tstyle={recipeListStyle.foodPic}\r\n\t\t\t\t\t\tsource={image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<Text style={recipeListStyle.foodName}>{item.name}</Text>\r\n\t\t\t</View>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Pressable\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\tonPress={() => toRecipeInfo(item)}\r\n\t\t\t\tstyle={{ width: width, height: height, flexGrow: flexGrow }}\r\n\t\t\t>\r\n\t\t\t\t<View style={recipeListStyle.foodPicContainer}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tstyle={recipeListStyle.foodPic}\r\n\t\t\t\t\t\tsource={image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={recipeListStyle.nameRatingContainer}>\r\n\t\t\t\t\t<Text style={recipeListStyle.foodName}>{item.name}</Text>\r\n\t\t\t\t\t<Text style={recipeListStyle.foodName}><FontAwesomeIcon icon={\"star\"} /> {rating}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n}\r\n"],"sourceRoot":""}