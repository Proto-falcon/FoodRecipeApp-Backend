{"version":3,"sources":["src/components/RecipeList/RecipeListStyle.js","src/components/RecipeCover/RecipeCover.js","src/components/WrappingItems/WrappingItems.js","src/components/RecipeList/RecipeList.js"],"names":["recipeListStyle","StyleSheet","create","foodPicContainer","alignItems","foodPic","height","width","resizeMode","nameRatingContainer","marginTop","marginBottom","borderWidth","padding","foodName","fontWeight","textAlign","RecipeCover","item","flexGrow","navigation","useNavigation","authCtx","useContext","CsrfCtx","recipeResultsCtx","RecipeResultsCtx","useState","rating","image","startsWith","uri","BACKEND","require","recipe","axios","post","id","headers","token","credentials","withCredentials","responseType","error","setCurrentRecipeURI","navigate","style","source","name","onPress","toRecipeInfo","icon","WrappingItems","items","renderItems","flexDirection","flexWrap","renderedItems","forEach","i","push","index","RecipeList","props","NoMoreRecipes","ingredients","recipes","setRecipes","loadedAllRecipes","setLoadedAllRecipes","loadMoreRecipes","distanceFromEnd","showEnd","undefined","setData","recipeLink","length","prevState","newState","response","method","url","content","data","results","addRecipesLink","useEffect","recArray","useWindowDimensions","numCols","Math","floor","renderItem","onEndReached","onEndReachedThreshold","extraData","loadMore","backgroundColor","fontSize"],"mappings":"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","file":"static/js/12.ab425c88.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const recipeListStyle = StyleSheet.create(\r\n    {\r\n        foodPicContainer:\r\n        {\r\n            alignItems: \"center\"\r\n        },\r\n        foodPic:\r\n        {\r\n            height: 200,\r\n            width: \"100%\",\r\n            resizeMode: \"contain\"\r\n        },\r\n\r\n        nameRatingContainer: {\r\n            marginTop: 20,\r\n            marginBottom: 20,\r\n            borderWidth: 1,\r\n            padding: 10,\r\n        },\r\n\r\n        foodName:\r\n        {\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\"\r\n        }\r\n    });\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Image, Pressable, Text, View } from \"react-native\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport { recipeListStyle } from \"../RecipeList/RecipeListStyle\";\r\nimport { RecipeResultsCtx } from \"../../context/Context\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\n\r\n/**\r\n * Renders a recipe with in image and name\r\n *\r\n * @typedef {{\r\n *  \tid: string,\r\n * \t\tname: string,\r\n *  \timage: string,\r\n *  \tingredients: Array<string>,\r\n * \t\tsource: string,\r\n * \t\trating: string\r\n * \t}} recipe\r\n *\r\n * @param {{\r\n *      item: recipe,\r\n * \t\theight: number | string,\r\n * \t\twidth: number | string,\r\n * \t\tflexGrow?: number\r\n * }} prop\r\n * @returns A recipe with image and name\r\n */\r\nexport default function RecipeCover({ item, height, width, flexGrow }) {\r\n\tconst navigation = useNavigation();\r\n\tconst authCtx = useContext(CsrfCtx);\r\n\tconst recipeResultsCtx = useContext(RecipeResultsCtx);\r\n\tconst [rating, setRating] = useState(() => {\r\n\t\tif (item.rating === null) {\r\n\t\t\treturn \"No Rating\";\r\n\t\t} else {\r\n\t\t\treturn item.rating;\r\n\t\t}\r\n\t});\r\n\r\n\tconst [image, setImage] = useState(() => {\r\n\t\tif (item.image !== \"\") {\r\n\t\t\tlet image = item.image;\r\n\t\t\tif (!image.startsWith(\"http\")) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\turi: `${BACKEND}${item.image}`,\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn { uri: item.image, height: \"100%\", width: \"100%\" };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn require(\"../../../assets/favicon.png\");\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * Adds going to be viewed recipe in recents for the logged in user\r\n\t * before going to recipe page.\r\n\t *\r\n\t * @param {recipe} recipe\r\n\t */\r\n\tasync function toRecipeInfo(recipe) {\r\n\t\ttry {\r\n\t\t\tawait axios.post(\r\n\t\t\t\t`${BACKEND}/api/setRecentRecipe/`,\r\n\t\t\t\t{ id: recipe.id },\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"X-CSRFToken\": authCtx.token,\r\n\t\t\t\t\t\tcredentials: \"include\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\twithCredentials: true,\r\n\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {}\r\n\t\trecipeResultsCtx.setCurrentRecipeURI(recipe.id);\r\n\t\tnavigation.navigate(\"RecipeInfo\", { id: recipe.id });\r\n\t}\r\n\r\n\tif (item.id === \"\") {\r\n\t\treturn (\r\n\t\t\t<View\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\tstyle={{ width: width, height: height, flexGrow: flexGrow }}\r\n\t\t\t>\r\n\t\t\t\t<View style={recipeListStyle.foodPicContainer}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tstyle={recipeListStyle.foodPic}\r\n\t\t\t\t\t\tsource={image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<Text style={recipeListStyle.foodName}>{item.name}</Text>\r\n\t\t\t</View>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<Pressable\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\tonPress={() => toRecipeInfo(item)}\r\n\t\t\t\tstyle={{ width: width, height: height, flexGrow: flexGrow }}\r\n\t\t\t>\r\n\t\t\t\t<View style={recipeListStyle.foodPicContainer}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tstyle={recipeListStyle.foodPic}\r\n\t\t\t\t\t\tsource={image}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<View style={recipeListStyle.nameRatingContainer}>\r\n\t\t\t\t\t<Text style={recipeListStyle.foodName}>{item.name}</Text>\r\n\t\t\t\t\t<Text style={recipeListStyle.foodName}><FontAwesomeIcon icon={\"star\"} /> {rating}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n}\r\n","import { View } from \"react-native\";\r\n\r\n/**\r\n * List built for displaying items horizontally that can automatically\r\n * wraps to the next line.\r\n * \r\n * @param {{\r\n *      style?: any,\r\n *      items: any[],\r\n *      renderItems: ({item: any, index: number}) => JSX.Element\r\n * }} props \r\n * @returns Horizontal list of items that wraps to next line when\r\n * the list of items can't fit in 1 line.\r\n */\r\nexport default function WrappingItems({ items, renderItems, style }) {\r\n\r\n    function Items() {\r\n        let renderedItems = [];\r\n\t\titems.forEach((item, i) => {\r\n\t\t\trenderedItems.push(renderItems({ item: item, index: i }));\r\n\t\t});\r\n\t\treturn renderedItems;\r\n\t}\r\n\r\n    return (\r\n        <View\r\n            style={{\r\n                ...style,\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n            }}\r\n        >\r\n            <Items />\r\n        </View>\r\n    );\r\n}","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n\tFlatList,\r\n\tPressable,\r\n\tScrollView,\r\n\tText,\r\n\tuseWindowDimensions,\r\n\tView,\r\n} from \"react-native\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nimport RecipeCover from \"../RecipeCover/RecipeCover\";\r\nimport WrappingItems from \"../WrappingItems/WrappingItems\";\r\n\r\n/**\r\n * Renders a list of Recipes\r\n * @typedef {{\r\n *  \tid: string,\r\n * \t\tname: string,\r\n *  \timage: string,\r\n *  \tingredients: Array<string>,\r\n * \t\tsource: string\r\n * \t}} recipe\r\n *\r\n * @param {{\r\n * \trecipes: Array<recipe>,\r\n *  recipeLink?: string,\r\n *  setData?: (recipeResults: Array<recipe>, addRecipesLink: string) => void,\r\n * }} props\r\n * @returns List of Recipes\r\n */\r\nexport default function RecipeList(props) {\r\n\t\r\n\tconst NoMoreRecipes = {\r\n\t\tid: \"\",\r\n\t\tname: \"No more Recipes\",\r\n\t\timage: \"\",\r\n\t\tingredients: [],\r\n\t\tsource: \"\",\r\n\t\trating: \"0.0\"\r\n\t};\r\n\r\n\tconst [recipes, setRecipes] = useState(props.recipes);\r\n\tconst [loadedAllRecipes, setLoadedAllRecipes] = useState(false);\r\n\r\n\t/**\r\n\t * Updates the `recipes` array and checks if there are more recipes to load\r\n\t *\r\n\t * When the Search page is the first screen loaded it will never `unmount` while navigating\r\n\t * to other screens then back to it because `react-navigation` it keeps previously loaded screens mounted.\r\n\t * If you go back to a previously loaded screen it will unmount the screens that you loaded after that screen.\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tprops.recipes.length < 20 &&\r\n\t\t\t(props.recipeLink !== \"\" || props.recipeLink !== undefined) &&\r\n\t\t\tprops.recipes[props.recipes.length - 1].id !== \"\"\r\n\t\t) {\r\n\t\t\tsetLoadedAllRecipes(true);\r\n\t\t\tsetRecipes(() => {\r\n\t\t\t\tlet recArray = props.recipes;\r\n\t\t\t\trecArray.push(NoMoreRecipes);\r\n\t\t\t\treturn recArray;\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetRecipes(props.recipes);\r\n\t}, [props.recipes]);\r\n\r\n\t/**\r\n\t * Adds more recipes to the current list\r\n\t * when the user scrolls near the bottom\r\n\t *\r\n\t * @param {{distanceFromEnd: number}?} info\r\n\t */\r\n\tasync function loadMoreRecipes({ distanceFromEnd }) {\r\n\t\tif (props.showEnd || props.setData !== undefined) {\r\n\t\t\tif (\r\n\t\t\t\tprops.recipeLink != undefined &&\r\n\t\t\t\tprops.recipeLink != \"\" &&\r\n\t\t\t\t!loadedAllRecipes\r\n\t\t\t) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet response = await axios({\r\n\t\t\t\t\t\tmethod: \"get\",\r\n\t\t\t\t\t\turl: `${BACKEND}/api/addRecipes/?nextLink=${props.recipeLink}`,\r\n\t\t\t\t\t\tresponseType: \"json\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet content = await response.data;\r\n\t\t\t\t\tprops.setData(content.results, content.addRecipesLink);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tsetLoadedAllRecipes(true);\r\n\t\t\t\t}\r\n\t\t\t} else if (\r\n\t\t\t\trecipes[recipes.length - 1].id != \"\" &&\r\n\t\t\t\tloadedAllRecipes &&\r\n\t\t\t\tprops.showEnd\r\n\t\t\t) {\r\n\t\t\t\tsetRecipes((prevState) => {\r\n\t\t\t\t\tlet newState = [...prevState];\r\n\t\t\t\t\tnewState.push(NoMoreRecipes);\r\n\r\n\t\t\t\t\treturn newState;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the load more button to load more recipes\r\n\t *\r\n\t * @param {{loadMore: boolean}} props\r\n\t * @returns Load more button\r\n\t */\r\n\tfunction LoadMoreRecipesButton({ loadMore }) {\r\n\t\tif (loadMore) {\r\n\t\t\treturn (\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={{ backgroundColor: \"ff6e00\", padding: 5 }}\r\n\t\t\t\t\tonPress={loadMoreRecipes}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\tfontSize: 50,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLoad More\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tconst width = useWindowDimensions().width;\r\n\tconst numCols = Math.floor(width / 300);\r\n\r\n\treturn (\r\n\t\t<View style={{width: \"100%\"}}>\r\n\t\t\t{numCols <= 1 ? (\r\n\t\t\t\t<FlatList\r\n\t\t\t\t\tdata={recipes}\r\n\t\t\t\t\trenderItem={({ item }) => (\r\n\t\t\t\t\t\t<RecipeCover\r\n\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\twidth={\"100%\"}\r\n\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tonEndReached={loadMoreRecipes}\r\n\t\t\t\t\tonEndReachedThreshold={2}\r\n\t\t\t\t\textraData={recipes}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<ScrollView>\r\n\t\t\t\t\t<WrappingItems\r\n\t\t\t\t\t\titems={recipes}\r\n\t\t\t\t\t\trenderItems={({ item, index }) => (\r\n\t\t\t\t\t\t\t<RecipeCover\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\twidth={300}\r\n\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\tflexGrow={1}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<LoadMoreRecipesButton\r\n\t\t\t\t\t\tloadMore={!loadedAllRecipes && props.recipeLink != \"\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ScrollView>\r\n\t\t\t)}\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"sourceRoot":""}