{"version":3,"sources":["src/context/account.js","src/context/CsrfToken.js","src/ipaddressesports/BackEndIP.js","assets/favicon.png","src/context/Context.js","src/pages/SearchOptions/SearchOptionsStyle.js","src/RecipeMetaOptions.js","src/pages/SearchOptions/SearchOptions.js"],"names":["AccountCtx","createContext","loggedIn","username","email","setLoginStatus","setUsername","newUsername","setEmail","newEmail","checkCred","csrfCtx","domain","AccountProvider","props","useState","isLoggedIn","setIsLoggedIn","response","axios","get","content","data","setCsrfToken","token","user","LogInHandler","setUsernameHandler","setEmailHandler","error","prevState","match","length","Provider","value","children","CsrfCtx","newToken","CsrfContextProvider","setToken","BACKEND","module","exports","RecipeResultsCtx","moreRecipesLink","setAddRecipesLink","link","exclusions","updateExclusions","newExclusions","results","uri","name","image","require","ingredients","source","getRecipes","recipeList","addRecipes","isLoading","setIsLoading","boolean","ContextProvider","recipes","setRecipes","excluded","setExcluded","addRecipesLink","setAddLink","newExcludeState","id","newState","i","push","SearchOptionsStyle","StyleSheet","create","container","flex","alignItems","marginTop","marginLeft","marginRight","textButtonContainer","flexDirection","flexBasis","maxHeight","searchIcon","height","width","resizeMode","imgContainer","justifyContent","paddingTop","input","padding","paddingBottom","borderColor","borderWidth","borderRadius","exclude","paddingLeft","marginBottom","backgroundColor","excludedHeader","fontWeight","fontSize","textAlign","excludeList","borderTopWidth","borderLeftWidth","borderRightWidth","optionsContainer","flexWrap","minWidth","optionTypesContainer","optionTypes","text","optionTypeHeader","selectedMetaText","selectedOptionsContainer","minHeight","diet","health","mealType","dishType","cuisineType","RecipeOption","lazy","TextError","NavBar","LogOutButton","SelectedOptions","WrappingItems","SearchOptions","navigation","ctx","useContext","accCtx","authCtx","options","setOptions","num","optionType","setOptionType","inputIg","setinputIg","inputExclude","setInputExclude","setExclude","hasError","setHasError","errorMsg","setErrorMsg","mount","isOptionsEmpty","emptyCount","option","fetchFood","query","forEach","item","index","trim","console","log","method","url","responseType","navigate","request","addExcludeHandler","preveState","useEffect","headerLeft","Link","style","styles","navLink","to","screen","Text","navText","usernameText","headerRight","params","toLogin","View","pageContainer","useWindowDimensions","Pressable","onPress","icon","size","TextInput","onChangeText","igs","placeholder","onSubmitEditing","message","borderBottomWidth","items","renderItems","element","removeExlcusions","FlatList","renderItem","type","RecipeMetaOptions","selectedData","updateData","optionsArray"],"mappings":"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","file":"static/js/8.b1cb7592.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useState } from \"react\";\r\n\r\n// Context for account info\r\nexport const AccountCtx = createContext({\r\n\tloggedIn: false,\r\n\tusername: \"\",\r\n\temail: \"\",\r\n\tsetLoginStatus: () => {},\r\n\tsetUsername: (newUsername) => {},\r\n\tsetEmail: (newEmail) => {},\r\n\tcheckCred: (csrfCtx, domain) => {},\r\n});\r\n\r\n/**\r\n * Account System\r\n *\r\n * @param {{children: any}} props\r\n * @returns App UI\r\n */\r\nexport default function AccountProvider(props) {\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\r\n\t/**\r\n\t * Checks whether the user is still logged in or not\r\n\t *\r\n\t * @param {{\r\n\t *     token: string;\r\n\t *     setCsrfToken: (newToken: any) => void;\r\n\t * }} csrfCtx\r\n\t * @param {string} domain\r\n\t */\r\n\tasync function updateCred(csrfCtx, domain) {\r\n\t\tif (!isLoggedIn) {\r\n\t\t\ttry {\r\n\t\t\t\tlet response = await axios.get(`${domain}/api/checkLogin/`);\r\n\t\t\t\tlet content = await response.data;\r\n\t\t\t\tcsrfCtx.setCsrfToken(content.token);\r\n\t\t\t\tif (content.user != false) {\r\n\t\t\t\t\tLogInHandler();\r\n\t\t\t\t\tsetUsernameHandler(content.user.username);\r\n\t\t\t\t\tsetEmailHandler(content.user.email);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts the `isLoggedIn` state\r\n\t */\r\n\tfunction LogInHandler() {\r\n\t\tsetIsLoggedIn((prevState) => !prevState);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a new valid `email`\r\n\t *\r\n\t * @param {string} newEmail\r\n\t */\r\n\tfunction setEmailHandler(newEmail) {\r\n\t\tif (newEmail == \"\") {\r\n\t\t\tsetEmail(\"\");\r\n\t\t} else if (\r\n\t\t\tnewEmail.match(\r\n\t\t\t\t/^([a-zA-Z0-9]+\\.?[a-zA-Z0-9]*)@[a-zA-Z0-9^\\.]+\\.([a-zA-Z]+\\.?[a-zA-Z]*)$/\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tsetEmail(newEmail);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a new `username`\r\n\t *\r\n\t * @param {string} newUsername\r\n\t */\r\n\tfunction setUsernameHandler(newUsername) {\r\n\t\tif (newUsername.length > 0) {\r\n\t\t\tsetUsername(newUsername);\r\n\t\t} else {\r\n\t\t\tsetUsername(\"\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AccountCtx.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tloggedIn: isLoggedIn,\r\n\t\t\t\tusername: username,\r\n\t\t\t\temail: email,\r\n\t\t\t\tsetLoginStatus: LogInHandler,\r\n\t\t\t\tsetUsername: setUsernameHandler,\r\n\t\t\t\tsetEmail: setEmailHandler,\r\n\t\t\t\tcheckCred: updateCred,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AccountCtx.Provider>\r\n\t);\r\n}\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const CsrfCtx = createContext({\r\n\ttoken: \"\",\r\n\tsetCsrfToken: (newToken) => {},\r\n});\r\n\r\n/**\r\n * Context Manager for Csrf\r\n *\r\n * @param {{children: any}} props\r\n * @returns Components that can use the csrf context\r\n */\r\nexport default function CsrfContextProvider(props) {\r\n\tconst [token, setToken] = useState(\"\");\r\n\r\n\t/**\r\n\t * Updates the csrf `token`\r\n\t *\r\n\t * @param {string} newToken\r\n\t */\r\n\tfunction updateToken(newToken) {\r\n\t\tsetToken(newToken);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CsrfCtx.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\ttoken: token,\r\n\t\t\t\tsetCsrfToken: updateToken,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</CsrfCtx.Provider>\r\n\t);\r\n}\r\n","const BACKENDLOCAL = \"http://localhost:8000\";\r\nconst BACKENDIPHOME = \"http://192.168.0.30:8000\";\r\n\r\nlet domain = \"\";\r\nif (__DEV__) {\r\n\tdomain = BACKENDIPHOME;\r\n}\r\nconst BACKEND = domain;\r\nexport default BACKEND;","module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","import { createContext, useState } from \"react\";\r\nimport AccountProvider from \"./account\";\r\nimport CsrfContextProvider from \"./CsrfToken\";\r\n\r\n// Creates a context for reciperesults\r\nexport const RecipeResultsCtx = createContext({\r\n\tmoreRecipesLink: \"\", // Link to fetch more recipes\r\n\tsetAddRecipesLink: (link) => {}, // set Recipes link\r\n\texclusions: [\"\"],\r\n\tupdateExclusions: (newExclusions) => {},\r\n\tresults: [\r\n\t\t// array of recipes\r\n\t\t{\r\n\t\t\turi: \"\",\r\n\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\timage: require(\"../../assets/favicon.png\"),\r\n\t\t\tingredients: [\"\"],\r\n\t\t\tsource: \"\"\r\n\t\t},\r\n\t],\r\n\tgetRecipes: (recipeList) => {}, // Create a list of recipes\r\n\taddRecipes: (recipeList, link) => {}, // Add recipes to the current list\r\n\tisLoading: false,\r\n\tsetIsLoading: (boolean) => {}\r\n});\r\n\r\n/**\r\n * Component only used for managing context for the whole app\r\n * \r\n * @param {*} props \r\n * @returns Child Elements\r\n */\r\nexport default function ContextProvider(props) {\r\n\r\n\t// Array of recipes\r\n\tconst [recipes, setRecipes] = useState([\r\n\t\t{\r\n\t\t\turi: \"\",\r\n\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\timage: \"\",\r\n\t\t\tingredients: [\"None\"],\r\n\t\t\tsource: \"\",\r\n\t\t},\r\n\t]);\r\n\r\n\tconst [excluded, setExcluded] = useState([]);\r\n\r\n\t/**\r\n\t * Updates the `excluded` state\r\n\t * \r\n\t * @param {string[]} newExcludeState \r\n\t */\r\n\tfunction changeExcluded(newExcludeState) {\r\n\t\tsetExcluded(newExcludeState);\r\n\t}\r\n\r\n\t// link to recipes\r\n\tconst [addRecipesLink, setAddRecipesLink] = useState(\"\");\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t/**\r\n\t * Sets link to fetch more recipes\r\n\t *\r\n\t * @param {string} link\r\n\t */\r\n\tfunction setAddLink(link) {\r\n\t\tsetAddRecipesLink(link);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an array with recipes\r\n\t *\r\n\t * @param {Array<{\r\n\t * \turi: string,\r\n\t *  name: string,\r\n\t *  image: string,\r\n\t *  ingredients: Array<string>,\r\n\t *  source: string\r\n\t * }>} recipeList\r\n\t */\r\n\tfunction GetRecipes(recipeList) {\r\n\t\tif (recipeList[0].uri != \"\") {\r\n\t\t\tsetRecipes([\r\n\t\t\t\t{\r\n\t\t\t\t\tid: \"\",\r\n\t\t\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\t\t\timage: \"\",\r\n\t\t\t\t\tingredients: [\"None\"],\r\n\t\t\t\t\tsource: \"\",\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t\t\r\n            let newState = recipeList;\r\n            setRecipes(newState);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a new array that adds a new recipes\r\n\t * to the current list and updates link to\r\n\t * fetch more recipes\r\n\t *\r\n\t * @param {Array<{\r\n\t * \turi: string\r\n\t *  name: string,\r\n\t *  image: string,\r\n\t *  ingredients: Array<string>,\r\n\t *  source: string\r\n\t * }>} recipeList\r\n\t * @param {string} link\r\n\t */\r\n\tfunction addRecipes(recipeList, link) {\r\n\t\tlet newState = [];\r\n\r\n\t\tfor (let i = 0; i < recipes.length; i++) {\r\n\t\t\tnewState.push(recipes[i]);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < recipeList.length; i++) {\r\n\t\t\tnewState.push(recipeList[i]);\r\n\t\t}\r\n\r\n\t\tsetRecipes(newState);\r\n\t\tsetAddLink(link);\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps the whole app in a context provider\r\n\t */\r\n\treturn (\r\n\t\t<CsrfContextProvider>\r\n\t\t\t<AccountProvider>\r\n\t\t\t\t<RecipeResultsCtx.Provider\r\n\t\t\t\t\tvalue={{\r\n\t\t\t\t\t\tmoreRecipesLink: addRecipesLink,\r\n\t\t\t\t\t\texclusions: excluded,\r\n\t\t\t\t\t\tupdateExclusions: changeExcluded,\r\n\t\t\t\t\t\tresults: recipes,\r\n\t\t\t\t\t\tgetRecipes: GetRecipes,\r\n\t\t\t\t\t\tsetAddRecipesLink: setAddLink,\r\n\t\t\t\t\t\taddRecipes: addRecipes,\r\n\t\t\t\t\t\tisLoading: isLoading,\r\n\t\t\t\t\t\tsetIsLoading: setIsLoading\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</RecipeResultsCtx.Provider>\r\n\t\t\t</AccountProvider>\r\n\t\t</CsrfContextProvider>\r\n\t);\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\nconst HEIGHT = \"80%\";\r\nexport const SearchOptionsStyle = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\talignItems: \"center\",\r\n\t\tmarginTop: 10,\r\n\t\tmarginLeft: \"auto\",\r\n\t\tmarginRight: \"auto\",\r\n\t},\r\n\r\n\ttextButtonContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tflexBasis: 50,\r\n\t\tmaxHeight: 50,\r\n\t},\r\n\r\n\tsearchIcon: {\r\n\t\theight: 25,\r\n\t\tmarginTop: 7,\r\n\t\twidth: \"100%\",\r\n\t\tresizeMode: \"contain\",\r\n\t},\r\n\r\n\timgContainer: {\r\n\t\tflexBasis: 20,\r\n\t\theight: 30,\r\n\t\tjustifyContent: \"center\",\r\n\t\tpaddingTop: 10,\r\n\t},\r\n\r\n\tinput: {\r\n\t\theight: 40,\r\n\t\tmarginLeft: 10,\r\n\t\tpadding: 15,\r\n\t\tpaddingBottom: 10,\r\n\t\tborderColor: \"black\",\r\n\t\tborderWidth: 1,\r\n\t\tborderRadius: 20,\r\n\t},\r\n\r\n\texclude: {\r\n\t\tflexDirection: \"row\",\r\n\t\tpadding: 5,\r\n\t\tpaddingLeft: 7,\r\n\t\tmarginLeft: 5,\r\n\t\tmarginTop: 5,\r\n\t\tmarginBottom: 5,\r\n\t\tbackgroundColor: \"#ff5c5c\",\r\n\t\tborderRadius: 10,\r\n\t},\r\n\r\n\texcludedHeader: {\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 20,\r\n\t\ttextAlign: \"center\",\r\n\t},\r\n\r\n\texcludeList: { paddingLeft: 5, justifyContent: \"center\" },\r\n\r\n\texcluded: {\r\n\t\twidth: \"100%\",\r\n\t\tborderTopWidth: 2,\r\n\t\tborderLeftWidth: 2,\r\n\t\tborderRightWidth: 2,\r\n\t},\r\n\r\n\toptionsContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tflexWrap: \"wrap\",\r\n\t\tjustifyContent: \"space-evenly\",\r\n\t\tminWidth: 400,\r\n\t\twidth: \"30%\",\r\n\t},\r\n\r\n\toptionTypesContainer: { borderWidth: 2, marginBottom: 5, height: 99 },\r\n\r\n\toptionTypes: {\r\n\t\twidth: 100,\r\n\t\tbackgroundColor: \"#ff9100\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\r\n\ttext: {\r\n\t\ttextAlign: \"center\",\r\n\t\tpadding: 5,\r\n\t},\r\n\r\n\toptionTypeHeader: {\r\n\t\tbackgroundColor: \"#ffee00\",\r\n\t\tfontWeight: \"bold\",\r\n\t},\r\n\r\n\tselectedMetaText: {\r\n\t\tfontSize: 25,\r\n\t},\r\n\r\n\tselectedOptionsContainer: {\r\n\t\theight: HEIGHT,\r\n\t\tminHeight: HEIGHT,\r\n\t\tmaxHeight: HEIGHT,\r\n\t\tborderWidth: 2,\r\n\t\tmarginBottom: 5,\r\n\t},\r\n});\r\n","const DIETS = [\r\n\t\"balanced\",\r\n\t\"high-fiber\",\r\n\t\"high-protein\",\r\n\t\"low-carb\",\r\n\t\"low-fat\",\r\n\t\"low-sodium\",\r\n];\r\nconst HEALTHS = [\r\n\t\"alcohol-cocktail\",\r\n\t\"alcohol-free\",\r\n\t\"celery-free\",\r\n\t\"crustacean-free\",\r\n\t\"dairy-free\",\r\n\t\"DASH\",\r\n\t\"egg-free\",\r\n\t\"fish-free\",\r\n\t\"fodmap-free\",\r\n\t\"gluten-free\",\r\n\t\"immuno-supportive\",\r\n\t\"keto-friendly\",\r\n\t\"kidney-friendly\",\r\n\t\"kosher\",\r\n\t\"low-potassium\",\r\n\t\"low-sugar\",\r\n\t\"lupine-free\",\r\n\t\"Mediterranean\",\r\n\t\"mollusk-free\",\r\n\t\"mustard-free\",\r\n\t\"No-oil-added\",\r\n\t\"paleo\",\r\n\t\"peanut-free\",\r\n\t\"pecatarian\",\r\n\t\"pork-free\",\r\n\t\"red-meat-free\",\r\n\t\"sesame-free\",\r\n\t\"shellfish-free\",\r\n\t\"soy-free\",\r\n\t\"sugar-conscious\",\r\n\t\"sulfite-free\",\r\n\t\"tree-nut-free\",\r\n\t\"vegan\",\r\n\t\"vegetarian\",\r\n\t\"wheat-free\",\r\n];\r\n\r\nconst MEALTYPES = [\r\n\t\"breakfast\",\r\n\t\"brunch\",\r\n\t\"lunch/dinner\",\r\n\t\"snack\",\r\n\t\"teatime\",\r\n];\r\n\r\nconst DISHTYPES = [\r\n\t\"alcohol cocktail\",\r\n\t\"biscuits and cookies\",\r\n\t\"bread\",\r\n\t\"cereals\",\r\n\t\"condiments and sauces\",\r\n\t\"desserts\",\r\n\t\"drinks\",\r\n\t\"egg\",\r\n\t\"ice cream and custard\",\r\n\t\"main course\",\r\n\t\"pancake\",\r\n\t\"pasta\",\r\n\t\"pastry\",\r\n\t\"pies and tarts\",\r\n\t\"pizza\",\r\n\t\"preps\",\r\n\t\"preserve\",\r\n\t\"salad\",\r\n\t\"sandwiches\",\r\n\t\"seafood\",\r\n\t\"side dish\",\r\n\t\"soup\",\r\n\t\"special occasions\",\r\n\t\"starter\",\r\n\t\"sweets\",\r\n];\r\n\r\nconst CUISINETYPES = [\r\n\t\"american\",\r\n\t\"asian\",\r\n\t\"british\",\r\n\t\"caribbean\",\r\n\t\"central europe\",\r\n\t\"eastern europe\",\r\n\t\"chinese\",\r\n\t\"french\",\r\n\t\"greek\",\r\n\t\"indian\",\r\n\t\"italian\",\r\n\t\"japanese\",\r\n\t\"korean\",\r\n\t\"kosher\",\r\n\t\"mediterranean\",\r\n\t\"mexican\",\r\n\t\"middle eastern\",\r\n\t\"nordic\",\r\n\t\"south american\",\r\n\t\"south east asia\",\r\n\t\"world\",\r\n];\r\n\r\nexport default {\r\n\tdiet: DIETS,\r\n\thealth: HEALTHS,\r\n\tmealType: MEALTYPES,\r\n    dishType: DISHTYPES,\r\n    cuisineType: CUISINETYPES\r\n};\r\n","import axios from \"axios\";\r\nimport { lazy, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n\tFlatList,\r\n\tPressable,\r\n\tText,\r\n\tTextInput,\r\n\tuseWindowDimensions,\r\n\tView,\r\n} from \"react-native\";\r\nimport { styles } from \"../../AppStyles\";\r\nimport { SearchOptionsStyle } from \"./SearchOptionsStyle\";\r\nimport { Link } from \"@react-navigation/native\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\r\nimport { AccountCtx } from \"../../context/account\";\r\nimport { CsrfCtx } from \"../../context/CsrfToken\";\r\nimport { RecipeResultsCtx } from \"../../context/Context\";\r\nimport RecipeMetaOptions from \"../../RecipeMetaOptions\";\r\nimport BACKEND from \"../../ipaddressesports/BackEndIP\";\r\nconst RecipeOption = lazy(() =>\r\n\timport(\"../../components/RecipeOption/RecipeOption\")\r\n);\r\nconst TextError = lazy(() => import(\"../../components/TextError/TextError\"));\r\nconst NavBar = lazy(() => import(\"../../components/NavBar/NavBar\"));\r\nconst LogOutButton = lazy(() =>\r\n\timport(\"../../components/Buttons/LogOutButton\")\r\n);\r\nconst SelectedOptions = lazy(() =>\r\n\timport(\"../../components/SelectedOptions/SelectedOptions\")\r\n);\r\nconst WrappingItems = lazy(() =>\r\n\timport(\"../../components/WrappingItems/WrappingItems\")\r\n);\r\n\r\n/**\r\n * Renders a page that has options to search recipes\r\n *\r\n * @param {{ navigation: * }} props\r\n * @returns Search Options Page\r\n */\r\nexport default function SearchOptions({ navigation }) {\r\n\tconst ctx = useContext(RecipeResultsCtx);\r\n\tconst accCtx = useContext(AccountCtx);\r\n\tconst authCtx = useContext(CsrfCtx);\r\n\r\n\t// collection of arrays of optional values\r\n\tconst [options, setOptions] = useState({\r\n\t\tdiet: [],\r\n\t\thealth: [],\r\n\t\tcuisineType: [],\r\n\t\tmealType: [],\r\n\t\tdishType: [],\r\n\t});\r\n\tconst [optionTypes, setNumOptions] = useState(() => {\r\n\t\tlet num = [];\r\n\t\tfor (const i in options) {\r\n\t\t\tnum.push(i);\r\n\t\t}\r\n\t\treturn num;\r\n\t});\r\n\tconst [optionType, setOptionType] = useState(optionTypes[0]);\r\n\tconst [inputIg, setinputIg] = useState(\"\"); // string of ingredients inputted by user\r\n\tconst [inputExclude, setInputExclude] = useState(\"\");\r\n\tconst [exclude, setExclude] = useState([]);\r\n\tconst [hasError, setHasError] = useState(false); // checks if the user hasn't inputted/selected ingredients\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\tconst [mount, setMount] = useState(true);\r\n\r\n\t// Calls when `Form` component is mounted\r\n\tuseEffect(() => {\r\n\t\taccCtx.checkCred(authCtx, BACKEND);\r\n\t}, [mount]);\r\n\r\n\t// Changes the navigation bar if the user is logged in or not.\r\n\tuseEffect(() => {\r\n\t\tif (accCtx.loggedIn) {\r\n\t\t\tnavigation.setOptions({\r\n\t\t\t\theaderLeft: () => (\r\n\t\t\t\t\t<NavBar>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t\tto={{ screen: \"Profile\" }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Profile</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Text style={styles.usernameText}>\r\n\t\t\t\t\t\t\tUsername: {accCtx.username}\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t</NavBar>\r\n\t\t\t\t),\r\n\t\t\t\theaderRight: () => <LogOutButton />,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tnavigation.setOptions({\r\n\t\t\t\theaderLeft: () => (\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\tto={{ screen: \"Home\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles.navText}>Home</Text>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t),\r\n\t\t\t\theaderRight: () => (\r\n\t\t\t\t\t<NavBar>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{ screen: \"Login\", params: { toLogin: true } }}\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Login</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tscreen: \"SignUp\",\r\n\t\t\t\t\t\t\t\tparams: { toLogin: false },\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstyle={styles.navLink}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Text style={styles.navText}>Sign Up</Text>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</NavBar>\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [accCtx.loggedIn]);\r\n\r\n\t/**\r\n\t * Updates the selected options\r\n\t *\r\n\t * @param {string} type\r\n\t * @param {Array<string>} optionsArray\r\n\t */\r\n\tfunction updateOptions(type, optionsArray) {\r\n\t\tsetOptions((preveState) => {\r\n\t\t\tlet newState = { ...preveState };\r\n\t\t\tnewState[type] = optionsArray;\r\n\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if all the options array are empty\r\n\t *\r\n\t * @returns true if all options are empty, false otherwise.\r\n\t */\r\n\tfunction isOptionsEmpty() {\r\n\t\tlet emptyCount = 0;\r\n\t\tfor (const option in options) {\r\n\t\t\tif (options[option].length <= 0) {\r\n\t\t\t\temptyCount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn emptyCount >= optionTypes.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Fetches recipes using the options object and inputIg\r\n\t */\r\n\tasync function fetchFood() {\r\n\t\tif (inputIg.length <= 0 && isOptionsEmpty() && exclude.length <= 0) {\r\n\t\t\tsetHasError(true);\r\n\t\t\tsetErrorMsg(\"Please enter food name/ingredients\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetHasError(false);\r\n\r\n\t\tlet query = \"\";\r\n\r\n\t\tif (!isOptionsEmpty()) {\r\n\t\t\tlet i = 0;\r\n\t\t\tfor (const option in options) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tquery.length > 0 &&\r\n\t\t\t\t\ti < optionTypes.length - 1 &&\r\n\t\t\t\t\toptions[option].length > 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t}\r\n\t\t\t\toptions[option].forEach((item, index) => {\r\n\t\t\t\t\tquery += `${option}=${item}`;\r\n\t\t\t\t\tif (index < options[option].length - 1) {\r\n\t\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\ti += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (exclude.length > 0) {\r\n\t\t\tctx.updateExclusions(exclude);\r\n\t\t\tif (query.length > 0) {\r\n\t\t\t\tquery += \"&\";\r\n\t\t\t}\r\n\t\t\texclude.forEach((item, i) => {\r\n\t\t\t\tquery += `excluded=${item.trim()}`;\r\n\t\t\t\tif (i < exclude.length - 1) {\r\n\t\t\t\t\tquery += \"&\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (inputIg.trim().length > 0) {\r\n\t\t\tif (query.length > 0) {\r\n\t\t\t\tquery += \"&\";\r\n\t\t\t}\r\n\t\t\tquery += `ingredients=${inputIg.trim()}`;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconsole.log(\"hi\");\r\n\t\t\tlet response = await axios({\r\n\t\t\t\tmethod: \"get\",\r\n\t\t\t\turl: `${BACKEND}/api/fetchRecipes/?${query}`,\r\n\t\t\t\tresponseType: \"json\",\r\n\t\t\t});\r\n\t\t\tlet content = await response.data;\r\n\r\n\t\t\tctx.getRecipes(content.results);\r\n\t\t\tctx.setAddRecipesLink(content.addRecipesLink);\r\n\r\n\t\t\tctx.setIsLoading(true);\r\n\t\t\tnavigation.navigate(\"Home\");\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.request);\r\n\t\t\tsetHasError(true);\r\n\t\t\tsetErrorMsg(\"Unable to retrieve any recipes\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the inputIg with the text entered\r\n\t * by user.\r\n\t *\r\n\t * @param {string} igs\r\n\t */\r\n\tfunction inputIngredients(igs) {\r\n\t\tsetinputIg(igs);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates `inputExclude` by the text entered by the user\r\n\t *\r\n\t * @param {string} excluded\r\n\t */\r\n\tfunction inputExcludeHandler(excluded) {\r\n\t\tsetInputExclude(excluded);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an excluded ingredient\r\n\t */\r\n\tfunction addExcludeHandler() {\r\n\t\tif (inputExclude !== \"\") {\r\n\t\t\tsetExclude((preveState) => [...preveState, inputExclude]);\r\n\t\t\tsetInputExclude(\"\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the available option.\r\n\t *\r\n\t * @param {{item: string}} param\r\n\t * @returns Button that toggles the option\r\n\t */\r\n\tfunction renderOptionTypes({ item }) {\r\n\t\treturn (\r\n\t\t\t<Pressable\r\n\t\t\t\tstyle={SearchOptionsStyle.optionTypes}\r\n\t\t\t\tonPress={() => setOptionType(item)}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{ fontWeight: \"bold\" }}>{item}</Text>\r\n\t\t\t</Pressable>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction removeExlcusions(index) {\r\n\t\tsetExclude((preveState) => {\r\n\t\t\tlet newState = [];\r\n\t\t\tpreveState.forEach((element, i) => {\r\n\t\t\t\tif (i != index) {\r\n\t\t\t\t\tnewState.push(element);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Renders an excluded ingredient that the user doesn't want to be\r\n\t * displayed in the recipe results.\r\n\t *\r\n\t * @param {{\r\n\t * \t\titem: string,\r\n\t * \t\tindex: number\r\n\t * }} param\r\n\t * @returns An excluded ingredient\r\n\t */\r\n\tfunction renderExclusions({ item, index }) {\r\n\t\treturn (\r\n\t\t\t<View\r\n\t\t\t\tkey={index}\r\n\t\t\t\tstyle={SearchOptionsStyle.exclude}\r\n\t\t\t>\r\n\t\t\t\t<Text style={{ textAlign: \"center\" }}>{item}</Text>\r\n\t\t\t\t<Pressable onPress={() => removeExlcusions(index)}>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon={\"xmark\"}\r\n\t\t\t\t\t\tsize={20}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Pressable>\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<View\r\n\t\t\tstyle={{\r\n\t\t\t\t...SearchOptionsStyle.container,\r\n\t\t\t\t...styles.pageContainer,\r\n\t\t\t\twidth: useWindowDimensions().width < 700 ? \"100%\" : \"70%\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<View style={SearchOptionsStyle.textButtonContainer}>\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={SearchOptionsStyle.imgContainer}\r\n\t\t\t\t\tonPress={fetchFood}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon=\"magnifying-glass\"\r\n\t\t\t\t\t\tsize={20}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Pressable>\r\n\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tSearchOptionsStyle.input,\r\n\t\t\t\t\t\t{ borderColor: hasError ? \"red\" : \"black\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChangeText={inputIngredients}\r\n\t\t\t\t\tplaceholder=\"Enter recipe names/ingredients\"\r\n\t\t\t\t\tonSubmitEditing={fetchFood}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t\t<View style={SearchOptionsStyle.textButtonContainer}>\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tonPress={addExcludeHandler}\r\n\t\t\t\t\tstyle={{ paddingTop: 12 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon={\"ban\"}\r\n\t\t\t\t\t\tsize={20}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Pressable>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tSearchOptionsStyle.input,\r\n\t\t\t\t\t\t{ borderColor: hasError ? \"red\" : \"black\" },\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tonChangeText={inputExcludeHandler}\r\n\t\t\t\t\tvalue={inputExclude}\r\n\t\t\t\t\tplaceholder=\"Enter ingredients to exclude\"\r\n\t\t\t\t\tonSubmitEditing={addExcludeHandler}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\r\n\t\t\t<TextError\r\n\t\t\t\thasError={hasError}\r\n\t\t\t\tstyle={styles.errorMsg}\r\n\t\t\t\tmessage={errorMsg}\r\n\t\t\t/>\r\n\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...SearchOptionsStyle.optionsContainer,\r\n\t\t\t\t\tmaxHeight: useWindowDimensions().height / 2.5,\r\n\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<View style={SearchOptionsStyle.excluded}>\r\n\t\t\t\t\t<Text\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t...SearchOptionsStyle.excludedHeader,\r\n\t\t\t\t\t\t\tborderBottomWidth: exclude.length <= 0 ? 0 : 2,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tExcluded\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<WrappingItems\r\n\t\t\t\t\t\tstyle={SearchOptionsStyle.excludeList}\r\n\t\t\t\t\t\titems={exclude}\r\n\t\t\t\t\t\trenderItems={renderExclusions}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<SelectedOptions options={options} />\r\n\t\t\t\t<View style={SearchOptionsStyle.optionTypesContainer}>\r\n\t\t\t\t\t<FlatList\r\n\t\t\t\t\t\tdata={optionTypes}\r\n\t\t\t\t\t\trenderItem={renderOptionTypes}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t\t<RecipeOption\r\n\t\t\t\t\tstyle={{ height: 99 }}\r\n\t\t\t\t\ttype={optionType}\r\n\t\t\t\t\tdata={RecipeMetaOptions[optionType]}\r\n\t\t\t\t\tselectedData={options[optionType]}\r\n\t\t\t\t\tupdateData={updateOptions}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n"],"sourceRoot":""}