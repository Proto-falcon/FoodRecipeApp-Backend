{"version":3,"sources":["src/context/account.js","src/context/CsrfToken.js","src/context/Context.js","assets/favicon.png","src/App.js","index.js"],"names":["AccountCtx","createContext","loggedIn","username","email","login","logOut","setUsername","newUsername","setEmail","newEmail","checkCred","csrfCtx","domain","AccountProvider","props","useState","isLoggedIn","setIsLoggedIn","response","axios","get","content","data","setCsrfToken","token","user","LogInHandler","setUsernameHandler","setEmailHandler","error","match","length","Provider","value","children","CsrfCtx","newToken","CsrfContextProvider","setToken","RecipeResultsCtx","moreRecipesLink","setAddRecipesLink","link","exclusions","updateExclusions","newExclusions","results","id","name","image","require","ingredients","source","getRecipes","recipeList","addRecipes","isLoading","setIsLoading","boolean","currentRecipeURI","setCurrentRecipeURI","newUri","ContextProvider","recipes","setRecipes","excluded","setExcluded","addRecipesLink","currentRecipeUri","setCurrentRecipeUri","setAddLink","newExcludeState","newState","i","push","module","exports","Search","lazy","SearchOptions","RecipeInfo","Form","Profile","library","add","faMagnifyingGlass","faBan","faXmark","faStar","registerRootComponent","Stack","createNativeStackNavigator","Context","fallback","ActivityIndicator","size","NavigationContainer","linking","config","screens","Home","SignIn","Login","Navigator","screenOptions","headerShown","Screen","component","Group","StatusBar"],"mappings":"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","file":"static/js/app.7b996f7d.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useState } from \"react\";\r\n\r\n// Context for account info\r\nexport const AccountCtx = createContext({\r\n\tloggedIn: false,\r\n\tusername: \"\",\r\n\temail: \"\",\r\n\tlogin: () =>{},\r\n\tlogOut: () => {},\r\n\tsetUsername: (newUsername) => {},\r\n\tsetEmail: (newEmail) => {},\r\n\tcheckCred: (csrfCtx, domain) => {},\r\n});\r\n\r\n/**\r\n * Account System\r\n *\r\n * @param {{children: any}} props\r\n * @returns App UI\r\n */\r\nexport default function AccountProvider(props) {\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\r\n\t/**\r\n\t * Checks whether the user is still logged in or not\r\n\t *\r\n\t * @param {{\r\n\t *     token: string;\r\n\t *     setCsrfToken: (newToken: any) => void;\r\n\t * }} csrfCtx\r\n\t * @param {string} domain\r\n\t */\r\n\tasync function updateCred(csrfCtx, domain) {\r\n\t\t// if (!isLoggedIn) {\r\n\t\t\ttry {\r\n\t\t\t\tlet response = await axios.get(`${domain}/api/checkLogin/`);\r\n\t\t\t\tlet content = await response.data;\r\n\t\t\t\tcsrfCtx.setCsrfToken(content.token);\r\n\t\t\t\tif (content.user != false) {\r\n\t\t\t\t\tLogInHandler();\r\n\t\t\t\t\tsetUsernameHandler(content.user.username);\r\n\t\t\t\t\tsetEmailHandler(content.user.email);\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t}\r\n\t\t// }\r\n\t}\r\n\r\n\t/**\r\n\t * Logs the user in\r\n\t */\r\n\tfunction LogInHandler() {\r\n\t\tsetIsLoggedIn(true);\r\n\t}\r\n\r\n\t/**\r\n\t * Logs the user out\r\n\t */\r\n\tfunction LogOutHandler() {\r\n\t\tsetIsLoggedIn(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a new valid `email`\r\n\t *\r\n\t * @param {string} newEmail\r\n\t */\r\n\tfunction setEmailHandler(newEmail) {\r\n\t\tif (newEmail == \"\") {\r\n\t\t\tsetEmail(\"\");\r\n\t\t} else if (\r\n\t\t\tnewEmail.match(\r\n\t\t\t\t/^([a-zA-Z0-9]+\\.?[a-zA-Z0-9]*)@[a-zA-Z0-9^\\.]+\\.([a-zA-Z]+\\.?[a-zA-Z]*)$/\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tsetEmail(newEmail);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a new `username`\r\n\t *\r\n\t * @param {string} newUsername\r\n\t */\r\n\tfunction setUsernameHandler(newUsername) {\r\n\t\tif (newUsername.length > 0) {\r\n\t\t\tsetUsername(newUsername);\r\n\t\t} else {\r\n\t\t\tsetUsername(\"\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AccountCtx.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tloggedIn: isLoggedIn,\r\n\t\t\t\tusername: username,\r\n\t\t\t\temail: email,\r\n\t\t\t\tlogin: LogInHandler,\r\n\t\t\t\tlogOut: LogOutHandler,\r\n\t\t\t\tsetUsername: setUsernameHandler,\r\n\t\t\t\tsetEmail: setEmailHandler,\r\n\t\t\t\tcheckCred: updateCred,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AccountCtx.Provider>\r\n\t);\r\n}\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const CsrfCtx = createContext({\r\n\ttoken: \"\",\r\n\tsetCsrfToken: (newToken) => {},\r\n});\r\n\r\n/**\r\n * Context Manager for Csrf\r\n *\r\n * @param {{children: any}} props\r\n * @returns Components that can use the csrf context\r\n */\r\nexport default function CsrfContextProvider(props) {\r\n\tconst [token, setToken] = useState(\"\");\r\n\r\n\t/**\r\n\t * Updates the csrf `token`\r\n\t *\r\n\t * @param {string} newToken\r\n\t */\r\n\tfunction updateToken(newToken) {\r\n\t\tsetToken(newToken);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CsrfCtx.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\ttoken: token,\r\n\t\t\t\tsetCsrfToken: updateToken,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</CsrfCtx.Provider>\r\n\t);\r\n}\r\n","import { createContext, useState } from \"react\";\r\nimport AccountProvider from \"./account\";\r\nimport CsrfContextProvider from \"./CsrfToken\";\r\n\r\n// Creates a context for reciperesults\r\nexport const RecipeResultsCtx = createContext({\r\n\tmoreRecipesLink: \"\", // Link to fetch more recipes\r\n\tsetAddRecipesLink: (link) => {}, // set Recipes link\r\n\texclusions: [\"\"],\r\n\tupdateExclusions: (newExclusions) => {},\r\n\tresults: [\r\n\t\t// array of recipes\r\n\t\t{\r\n\t\t\tid: \"\",\r\n\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\timage: require(\"../../assets/favicon.png\"),\r\n\t\t\tingredients: [\"\"],\r\n\t\t\tsource: \"\"\r\n\t\t},\r\n\t],\r\n\tgetRecipes: (recipeList) => {}, // Create a list of recipes\r\n\taddRecipes: (recipeList, link) => {}, // Add recipes to the current list\r\n\tisLoading: false,\r\n\tsetIsLoading: (boolean) => {},\r\n\tcurrentRecipeURI: \"\",\r\n\tsetCurrentRecipeURI: (newUri) => {}\r\n});\r\n\r\n/**\r\n * Component only used for managing context for the whole app\r\n * \r\n * @param {*} props \r\n * @returns Child Elements\r\n */\r\nexport default function ContextProvider(props) {\r\n\r\n\t// Array of recipes\r\n\tconst [recipes, setRecipes] = useState([\r\n\t\t{\r\n\t\t\tid: \"\",\r\n\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\timage: \"\",\r\n\t\t\tingredients: [\"None\"],\r\n\t\t\tsource: \"\",\r\n\t\t},\r\n\t]);\r\n\r\n\tconst [excluded, setExcluded] = useState([]);\r\n\t// link to recipes\r\n\tconst [addRecipesLink, setAddRecipesLink] = useState(\"\");\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [currentRecipeUri, setCurrentRecipeUri] = useState(\"\");\r\n\r\n\t/**\r\n\t * Updates the `excluded` state\r\n\t * \r\n\t * @param {string[]} newExcludeState \r\n\t */\r\n\tfunction changeExcluded(newExcludeState) {\r\n\t\tsetExcluded(newExcludeState);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets link to fetch more recipes\r\n\t *\r\n\t * @param {string} link\r\n\t */\r\n\tfunction setAddLink(link) {\r\n\t\tsetAddRecipesLink(link);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an array with recipes\r\n\t *\r\n\t * @param {Array<{\r\n\t * \tid: string,\r\n\t *  name: string,\r\n\t *  image: string,\r\n\t *  ingredients: Array<string>,\r\n\t *  source: string\r\n\t * }>} recipeList\r\n\t */\r\n\tfunction GetRecipes(recipeList) {\r\n\t\tif (recipeList[0].id != \"\") {\r\n\t\t\tsetRecipes([\r\n\t\t\t\t{\r\n\t\t\t\t\tid: \"\",\r\n\t\t\t\t\tname: \"No Recipe Name Available\",\r\n\t\t\t\t\timage: \"\",\r\n\t\t\t\t\tingredients: [\"None\"],\r\n\t\t\t\t\tsource: \"\",\r\n\t\t\t\t},\r\n\t\t\t]);\r\n\t\t\t\r\n            let newState = recipeList;\r\n            setRecipes(newState);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a new array that adds a new recipes\r\n\t * to the current list and updates link to\r\n\t * fetch more recipes\r\n\t *\r\n\t * @param {Array<{\r\n\t * \tid: string\r\n\t *  name: string,\r\n\t *  image: string,\r\n\t *  ingredients: Array<string>,\r\n\t *  source: string\r\n\t * }>} recipeList\r\n\t * @param {string} link\r\n\t */\r\n\tfunction addRecipes(recipeList, link) {\r\n\t\tlet newState = [];\r\n\r\n\t\tfor (let i = 0; i < recipes.length; i++) {\r\n\t\t\tnewState.push(recipes[i]);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < recipeList.length; i++) {\r\n\t\t\tnewState.push(recipeList[i]);\r\n\t\t}\r\n\r\n\t\tsetRecipes(newState);\r\n\t\tsetAddLink(link);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the current recipe URI\r\n\t * \r\n\t * @param {string} newUri \r\n\t */\r\n\tfunction updateCurrentRecipeUri(newUri) {\r\n\t\tif (newUri !== \"\") {\r\n\t\t\tsetCurrentRecipeUri(newUri);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps the whole app in a context provider\r\n\t */\r\n\treturn (\r\n\t\t<CsrfContextProvider>\r\n\t\t\t<AccountProvider>\r\n\t\t\t\t<RecipeResultsCtx.Provider\r\n\t\t\t\t\tvalue={{\r\n\t\t\t\t\t\tmoreRecipesLink: addRecipesLink,\r\n\t\t\t\t\t\texclusions: excluded,\r\n\t\t\t\t\t\tupdateExclusions: changeExcluded,\r\n\t\t\t\t\t\tresults: recipes,\r\n\t\t\t\t\t\tgetRecipes: GetRecipes,\r\n\t\t\t\t\t\tsetAddRecipesLink: setAddLink,\r\n\t\t\t\t\t\taddRecipes: addRecipes,\r\n\t\t\t\t\t\tisLoading: isLoading,\r\n\t\t\t\t\t\tsetIsLoading: setIsLoading,\r\n\t\t\t\t\t\tcurrentRecipeURI: currentRecipeUri,\r\n\t\t\t\t\t\tsetCurrentRecipeURI: updateCurrentRecipeUri\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</RecipeResultsCtx.Provider>\r\n\t\t\t</AccountProvider>\r\n\t\t</CsrfContextProvider>\r\n\t);\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","import React, { lazy, Suspense } from \"react\";\r\nimport { ActivityIndicator, Text } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport ContextProvider from \"./context/Context\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons/faMagnifyingGlass\";\r\nimport { faBan } from \"@fortawesome/free-solid-svg-icons/faBan\";\r\nimport { faXmark } from \"@fortawesome/free-solid-svg-icons/faXmark\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons/faStar\";\r\n\r\nconst Search = lazy(() => import(\"./pages/Search/Search\"));\r\nconst SearchOptions = lazy(() => import(\"./pages/SearchOptions/SearchOptions\"));\r\nconst RecipeInfo = lazy(() => import(\"./pages/RecipeInfo/RecipeInfo\"));\r\nconst Form = lazy(() => import(\"./pages/Form/Form\"));\r\nconst Profile = lazy(() => import(\"./pages/Profile/Profile\"));\r\n\r\nlibrary.add(faMagnifyingGlass, faBan, faXmark, faStar);\r\n\r\n/**\r\n * Render the enter APP UI and use React navigation to\r\n * navigate different screens and update urls on browser\r\n *\r\n * @returns {JSX.Element} The whole app UI\r\n */\r\nexport default function App() {\r\n\tconst Stack = createNativeStackNavigator();\r\n\r\n\tconst Linking = {\r\n\t\tconfig: {\r\n\t\t\tscreens: {\r\n\t\t\t\tHome: \"Home\",\r\n\t\t\t\tSearch: \"Search\",\r\n\t\t\t\tRecipeInfo: \"RecipeInfo/:id\",\r\n\t\t\t\tSignIn: \"SignUp\",\r\n\t\t\t\tLogin: \"Login\",\r\n\t\t\t\tProfile: \"Profile\",\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ContextProvider>\r\n\t\t\t<Suspense fallback={<ActivityIndicator size=\"large\" />}>\r\n\t\t\t\t<NavigationContainer linking={Linking}>\r\n\t\t\t\t\t<Stack.Navigator\r\n\t\t\t\t\t\tscreenOptions={{\r\n\t\t\t\t\t\t\theaderShown: false,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\t\tname=\"Home\"\r\n\t\t\t\t\t\t\tcomponent={Search}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Stack.Group>\r\n\t\t\t\t\t\t\t<Stack.Group>\r\n\t\t\t\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\t\t\t\tname=\"Search\"\r\n\t\t\t\t\t\t\t\t\tcomponent={SearchOptions}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\t\t\t\tname=\"RecipeInfo\"\r\n\t\t\t\t\t\t\t\t\tcomponent={RecipeInfo}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Stack.Group>\r\n\r\n\t\t\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\t\t\tname=\"SignUp\"\r\n\t\t\t\t\t\t\t\tcomponent={Form}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\t\t\tname=\"Login\"\r\n\t\t\t\t\t\t\t\tcomponent={Form}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\t\t\tname=\"Profile\"\r\n\t\t\t\t\t\t\t\tcomponent={Profile}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Stack.Group>\r\n\t\t\t\t\t</Stack.Navigator>\r\n\t\t\t\t</NavigationContainer>\r\n\t\t\t</Suspense>\r\n\t\t\t<StatusBar />\r\n\t\t</ContextProvider>\r\n\t);\r\n}\r\n","import { registerRootComponent } from 'expo';\n\nimport App from './src/App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}